{
	"id": "0083d51f336af86e180c1ca7209ef2bc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"Bulksender.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/// @title BulkSender\n/// @notice Send ETH or ERC20 tokens to many recipients in one tx.\n/// @dev ERC20 bulk transfer uses transferFrom, so users must approve this contract first.\ncontract BulkSender is Ownable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    event BulkETHTransferred(address indexed sender, uint256 total, uint256 recipientsCount);\n    event BulkERC20Transferred(address indexed token, address indexed sender, uint256 total, uint256 recipientsCount);\n    event ETHWithdrawn(address indexed to, uint256 amount);\n    event ERC20Withdrawn(address indexed token, address indexed to, uint256 amount);\n\n\n\n    constructor() Ownable(msg.sender) {\n}\n    /// @notice Batch-send ETH to many recipients.\n    /// @param recipients Array of recipient addresses.\n    /// @param amounts Array of amounts corresponding to each recipient (in wei).\n    /// Requirements:\n    /// - `recipients.length == amounts.length`\n    /// - sum(amounts) must equal msg.value\n    function bulkTransferETH(address[] calldata recipients, uint256[] calldata amounts)\n        external\n        payable\n        nonReentrant\n    {\n        uint256 n = recipients.length;\n        require(n == amounts.length, \"length-mismatch\");\n        uint256 total = 0;\n\n        // calculate total\n        for (uint256 i = 0; i < n; ++i) {\n            total += amounts[i];\n        }\n\n        require(total == msg.value, \"value-mismatch\");\n\n        // send funds\n        for (uint256 i = 0; i < n; ++i) {\n            (bool ok, ) = recipients[i].call{value: amounts[i]}(\"\");\n            require(ok, \"eth-send-failed\");\n        }\n\n        emit BulkETHTransferred(msg.sender, total, n);\n    }\n\n    /// @notice Batch-send ERC20 tokens to many recipients using transferFrom.\n    /// @param token ERC20 token contract.\n    /// @param recipients Array of recipient addresses.\n    /// @param amounts Array of amounts corresponding to each recipient (in token units).\n    /// Requirements:\n    /// - caller must approve this contract for at least sum(amounts) before calling.\n    function bulkTransferERC20(\n        IERC20 token,\n        address[] calldata recipients,\n        uint256[] calldata amounts\n    ) external nonReentrant {\n        uint256 n = recipients.length;\n        require(n == amounts.length, \"length-mismatch\");\n\n        uint256 total = 0;\n        for (uint256 i = 0; i < n; ++i) {\n            total += amounts[i];\n        }\n\n        // transferFrom caller -> recipients[i]\n        for (uint256 i = 0; i < n; ++i) {\n            token.safeTransferFrom(msg.sender, recipients[i], amounts[i]);\n        }\n\n        emit BulkERC20Transferred(address(token), msg.sender, total, n);\n    }\n\n    /// @notice Owner-only: send ERC20 tokens that are already held by this contract to recipients.\n    function bulkTransferERC20FromContract(\n        IERC20 token,\n        address[] calldata recipients,\n        uint256[] calldata amounts\n    ) external onlyOwner nonReentrant {\n        uint256 n = recipients.length;\n        require(n == amounts.length, \"length-mismatch\");\n\n        uint256 total = 0;\n        for (uint256 i = 0; i < n; ++i) {\n            total += amounts[i];\n        }\n\n        uint256 contractBal = token.balanceOf(address(this));\n        require(contractBal >= total, \"insufficient-contract-balance\");\n\n        for (uint256 i = 0; i < n; ++i) {\n            token.safeTransfer(recipients[i], amounts[i]);\n        }\n\n        emit BulkERC20Transferred(address(token), address(this), total, n);\n    }\n\n    /// @notice Owner helper: withdraw ETH accidentally left in the contract.\n    function withdrawETH(address payable to, uint256 amount) external onlyOwner nonReentrant {\n        require(address(this).balance >= amount, \"insufficient-eth\");\n        (bool ok, ) = to.call{value: amount}(\"\");\n        require(ok, \"withdraw-failed\");\n        emit ETHWithdrawn(to, amount);\n    }\n\n    /// @notice Owner helper: withdraw ERC20 tokens from the contract.\n    function withdrawERC20(IERC20 token, address to, uint256 amount) external onlyOwner nonReentrant {\n        token.safeTransfer(to, amount);\n        emit ERC20Withdrawn(address(token), to, amount);\n    }\n\n    // allow contract to receive ETH\n    receive() external payable {}\n    fallback() external payable {}\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 248,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b141175418ac5c4b276ec6b41361d0eb5836a7eebc1c6d19f00d8517e1050f6664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b141175418ac5c4b276ec6b41361d0eb5836a7eebc1c6d19f00d8517e1050f6664736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 COINBASE OR SLOAD XOR 0xAC TLOAD 0x4B 0x27 PUSH15 0xC6B41361D0EB5836A7EEBC1C6D19F0 0xD DUP6 OR 0xE1 SDIV 0xF PUSH7 0x64736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "698:9376:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b141175418ac5c4b276ec6b41361d0eb5836a7eebc1c6d19f00d8517e1050f6664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 COINBASE OR SLOAD XOR 0xAC TLOAD 0x4B 0x27 PUSH15 0xC6B41361D0EB5836A7EEBC1C6D19F0 0xD DUP6 OR 0xE1 SDIV 0xF PUSH7 0x64736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "698:9376:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b141175418ac5c4b276ec6b41361d0eb5836a7eebc1c6d19f00d8517e1050f6664736f6c634300081a0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"Bulksender.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Bulksender.sol": {
				"BulkSender": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "total",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "recipientsCount",
									"type": "uint256"
								}
							],
							"name": "BulkERC20Transferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "total",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "recipientsCount",
									"type": "uint256"
								}
							],
							"name": "BulkETHTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ERC20Withdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ETHWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "recipients",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "bulkTransferERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "recipients",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "bulkTransferERC20FromContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "recipients",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "bulkTransferETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "ERC20 bulk transfer uses transferFrom, so users must approve this contract first.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"bulkTransferERC20(address,address[],uint256[])": {
								"params": {
									"amounts": "Array of amounts corresponding to each recipient (in token units). Requirements: - caller must approve this contract for at least sum(amounts) before calling.",
									"recipients": "Array of recipient addresses.",
									"token": "ERC20 token contract."
								}
							},
							"bulkTransferETH(address[],uint256[])": {
								"params": {
									"amounts": "Array of amounts corresponding to each recipient (in wei). Requirements: - `recipients.length == amounts.length` - sum(amounts) must equal msg.value",
									"recipients": "Array of recipient addresses."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "BulkSender",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Bulksender.sol\":478:4542  contract BulkSender is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"Bulksender.sol\":926:963  constructor() Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Bulksender.sol\":948:958  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_6\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Bulksender.sol\":478:4542  contract BulkSender is Ownable, ReentrancyGuard {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:133   */\ntag_15:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_16:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_21\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_15\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_17:\n    /* \"#utility.yul\":328:352   */\n  tag_23\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_16\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:587   */\ntag_8:\n    /* \"#utility.yul\":458:462   */\n  0x00\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup3\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":473:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":509:580   */\n  tag_25\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":566:575   */\n  dup4\n    /* \"#utility.yul\":562:579   */\n  add\n    /* \"#utility.yul\":553:559   */\n  dup5\n    /* \"#utility.yul\":509:580   */\n  tag_17\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":365:587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Bulksender.sol\":478:4542  contract BulkSender is Ownable, ReentrancyGuard {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Bulksender.sol\":478:4542  contract BulkSender is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x9f62eafe\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xb874fa6a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x3e46cd53\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x44004cc1\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4782f779\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      stop\n        /* \"Bulksender.sol\":2338:2956  function bulkTransferERC20(... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      stop\n        /* \"Bulksender.sol\":4232:4433  function withdrawERC20(IERC20 token, address to, uint256 amount) external onlyOwner nonReentrant {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"Bulksender.sol\":3860:4155  function withdrawETH(address payable to, uint256 amount) external onlyOwner nonReentrant {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Bulksender.sol\":3062:3776  function bulkTransferERC20FromContract(... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      stop\n        /* \"Bulksender.sol\":1271:1956  function bulkTransferETH(address[] calldata recipients, uint256[] calldata amounts)... */\n    tag_9:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"Bulksender.sol\":2338:2956  function bulkTransferERC20(... */\n    tag_20:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_53\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_54\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_53:\n        /* \"Bulksender.sol\":2500:2509  uint256 n */\n      0x00\n        /* \"Bulksender.sol\":2512:2522  recipients */\n      dup5\n      dup5\n        /* \"Bulksender.sol\":2512:2529  recipients.length */\n      swap1\n      pop\n        /* \"Bulksender.sol\":2500:2529  uint256 n = recipients.length */\n      swap1\n      pop\n        /* \"Bulksender.sol\":2552:2559  amounts */\n      dup3\n      dup3\n        /* \"Bulksender.sol\":2552:2566  amounts.length */\n      swap1\n      pop\n        /* \"Bulksender.sol\":2547:2548  n */\n      dup2\n        /* \"Bulksender.sol\":2547:2566  n == amounts.length */\n      eq\n        /* \"Bulksender.sol\":2539:2586  require(n == amounts.length, \"length-mismatch\") */\n      tag_56\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_57\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_56:\n        /* \"Bulksender.sol\":2597:2610  uint256 total */\n      0x00\n        /* \"Bulksender.sol\":2629:2638  uint256 i */\n      dup1\n        /* \"Bulksender.sol\":2624:2700  for (uint256 i = 0; i < n; ++i) {... */\n    tag_59:\n        /* \"Bulksender.sol\":2648:2649  n */\n      dup3\n        /* \"Bulksender.sol\":2644:2645  i */\n      dup2\n        /* \"Bulksender.sol\":2644:2649  i < n */\n      lt\n        /* \"Bulksender.sol\":2624:2700  for (uint256 i = 0; i < n; ++i) {... */\n      iszero\n      tag_60\n      jumpi\n        /* \"Bulksender.sol\":2679:2686  amounts */\n      dup5\n      dup5\n        /* \"Bulksender.sol\":2687:2688  i */\n      dup3\n        /* \"Bulksender.sol\":2679:2689  amounts[i] */\n      dup2\n      dup2\n      lt\n      tag_62\n      jumpi\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n    tag_62:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"Bulksender.sol\":2670:2689  total += amounts[i] */\n      dup3\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      swap2\n      pop\n        /* \"Bulksender.sol\":2651:2654  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"Bulksender.sol\":2624:2700  for (uint256 i = 0; i < n; ++i) {... */\n      jump(tag_59)\n    tag_60:\n      pop\n        /* \"Bulksender.sol\":2763:2772  uint256 i */\n      0x00\n        /* \"Bulksender.sol\":2758:2876  for (uint256 i = 0; i < n; ++i) {... */\n    tag_67:\n        /* \"Bulksender.sol\":2782:2783  n */\n      dup3\n        /* \"Bulksender.sol\":2778:2779  i */\n      dup2\n        /* \"Bulksender.sol\":2778:2783  i < n */\n      lt\n        /* \"Bulksender.sol\":2758:2876  for (uint256 i = 0; i < n; ++i) {... */\n      iszero\n      tag_68\n      jumpi\n        /* \"Bulksender.sol\":2804:2865  token.safeTransferFrom(msg.sender, recipients[i], amounts[i]) */\n      tag_70\n        /* \"Bulksender.sol\":2827:2837  msg.sender */\n      caller\n        /* \"Bulksender.sol\":2839:2849  recipients */\n      dup9\n      dup9\n        /* \"Bulksender.sol\":2850:2851  i */\n      dup5\n        /* \"Bulksender.sol\":2839:2852  recipients[i] */\n      dup2\n      dup2\n      lt\n      tag_71\n      jumpi\n      tag_72\n      tag_64\n      jump\t// in\n    tag_72:\n    tag_71:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_73:\n        /* \"Bulksender.sol\":2854:2861  amounts */\n      dup8\n      dup8\n        /* \"Bulksender.sol\":2862:2863  i */\n      dup6\n        /* \"Bulksender.sol\":2854:2864  amounts[i] */\n      dup2\n      dup2\n      lt\n      tag_74\n      jumpi\n      tag_75\n      tag_64\n      jump\t// in\n    tag_75:\n    tag_74:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"Bulksender.sol\":2804:2809  token */\n      dup12\n        /* \"Bulksender.sol\":2804:2826  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_76\n      swap1\n        /* \"Bulksender.sol\":2804:2865  token.safeTransferFrom(msg.sender, recipients[i], amounts[i]) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_70:\n        /* \"Bulksender.sol\":2785:2788  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"Bulksender.sol\":2758:2876  for (uint256 i = 0; i < n; ++i) {... */\n      jump(tag_67)\n    tag_68:\n      pop\n        /* \"Bulksender.sol\":2928:2938  msg.sender */\n      caller\n        /* \"Bulksender.sol\":2891:2949  BulkERC20Transferred(address(token), msg.sender, total, n) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Bulksender.sol\":2920:2925  token */\n      dup8\n        /* \"Bulksender.sol\":2891:2949  BulkERC20Transferred(address(token), msg.sender, total, n) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8a88ad5eb4d4acfb8c47fcc9c5b0e66c5162ea704dd1e08cce235927434e18d2\n        /* \"Bulksender.sol\":2940:2945  total */\n      dup4\n        /* \"Bulksender.sol\":2947:2948  n */\n      dup6\n        /* \"Bulksender.sol\":2891:2949  BulkERC20Transferred(address(token), msg.sender, total, n) */\n      mload(0x40)\n      tag_77\n      swap3\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Bulksender.sol\":2490:2956  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_79\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_80\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_79:\n        /* \"Bulksender.sol\":2338:2956  function bulkTransferERC20(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Bulksender.sol\":4232:4433  function withdrawERC20(IERC20 token, address to, uint256 amount) external onlyOwner nonReentrant {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_82:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_85\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_54\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_85:\n        /* \"Bulksender.sol\":4339:4369  token.safeTransfer(to, amount) */\n      tag_87\n        /* \"Bulksender.sol\":4358:4360  to */\n      dup3\n        /* \"Bulksender.sol\":4362:4368  amount */\n      dup3\n        /* \"Bulksender.sol\":4339:4344  token */\n      dup6\n        /* \"Bulksender.sol\":4339:4357  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_88\n      swap1\n        /* \"Bulksender.sol\":4339:4369  token.safeTransfer(to, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_87:\n        /* \"Bulksender.sol\":4415:4417  to */\n      dup2\n        /* \"Bulksender.sol\":4384:4426  ERC20Withdrawn(address(token), to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Bulksender.sol\":4407:4412  token */\n      dup4\n        /* \"Bulksender.sol\":4384:4426  ERC20Withdrawn(address(token), to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbfed55bdcd242e3dd0f60ddd7d1e87c67f61c34cd9527b3e6455d841b1025362\n        /* \"Bulksender.sol\":4419:4425  amount */\n      dup4\n        /* \"Bulksender.sol\":4384:4426  ERC20Withdrawn(address(token), to, amount) */\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_91\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_80\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_91:\n        /* \"Bulksender.sol\":4232:4433  function withdrawERC20(IERC20 token, address to, uint256 amount) external onlyOwner nonReentrant {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Bulksender.sol\":3860:4155  function withdrawETH(address payable to, uint256 amount) external onlyOwner nonReentrant {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_93:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_95\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_54\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_95:\n        /* \"Bulksender.sol\":3992:3998  amount */\n      dup1\n        /* \"Bulksender.sol\":3967:3988  address(this).balance */\n      selfbalance\n        /* \"Bulksender.sol\":3967:3998  address(this).balance >= amount */\n      lt\n      iszero\n        /* \"Bulksender.sol\":3959:4019  require(address(this).balance >= amount, \"insufficient-eth\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"Bulksender.sol\":4030:4037  bool ok */\n      0x00\n        /* \"Bulksender.sol\":4043:4045  to */\n      dup3\n        /* \"Bulksender.sol\":4043:4050  to.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Bulksender.sol\":4058:4064  amount */\n      dup3\n        /* \"Bulksender.sol\":4043:4069  to.call{value: amount}(\"\") */\n      mload(0x40)\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_104\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_103)\n    tag_104:\n      0x60\n      swap2\n      pop\n    tag_103:\n      pop\n        /* \"Bulksender.sol\":4029:4069  (bool ok, ) = to.call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"Bulksender.sol\":4087:4089  ok */\n      dup1\n        /* \"Bulksender.sol\":4079:4109  require(ok, \"withdraw-failed\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"Bulksender.sol\":4137:4139  to */\n      dup3\n        /* \"Bulksender.sol\":4124:4148  ETHWithdrawn(to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x94b2de810873337ed265c5f8cf98c9cffefa06b8607f9a2f1fbaebdfbcfbef1c\n        /* \"Bulksender.sol\":4141:4147  amount */\n      dup4\n        /* \"Bulksender.sol\":4124:4148  ETHWithdrawn(to, amount) */\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Bulksender.sol\":3949:4155  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_109\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_80\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_109:\n        /* \"Bulksender.sol\":3860:4155  function withdrawETH(address payable to, uint256 amount) external onlyOwner nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_111\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_114\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Bulksender.sol\":3062:3776  function bulkTransferERC20FromContract(... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_119\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_54\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_119:\n        /* \"Bulksender.sol\":3246:3255  uint256 n */\n      0x00\n        /* \"Bulksender.sol\":3258:3268  recipients */\n      dup5\n      dup5\n        /* \"Bulksender.sol\":3258:3275  recipients.length */\n      swap1\n      pop\n        /* \"Bulksender.sol\":3246:3275  uint256 n = recipients.length */\n      swap1\n      pop\n        /* \"Bulksender.sol\":3298:3305  amounts */\n      dup3\n      dup3\n        /* \"Bulksender.sol\":3298:3312  amounts.length */\n      swap1\n      pop\n        /* \"Bulksender.sol\":3293:3294  n */\n      dup2\n        /* \"Bulksender.sol\":3293:3312  n == amounts.length */\n      eq\n        /* \"Bulksender.sol\":3285:3332  require(n == amounts.length, \"length-mismatch\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap1\n      tag_58\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"Bulksender.sol\":3343:3356  uint256 total */\n      0x00\n        /* \"Bulksender.sol\":3375:3384  uint256 i */\n      dup1\n        /* \"Bulksender.sol\":3370:3446  for (uint256 i = 0; i < n; ++i) {... */\n    tag_123:\n        /* \"Bulksender.sol\":3394:3395  n */\n      dup3\n        /* \"Bulksender.sol\":3390:3391  i */\n      dup2\n        /* \"Bulksender.sol\":3390:3395  i < n */\n      lt\n        /* \"Bulksender.sol\":3370:3446  for (uint256 i = 0; i < n; ++i) {... */\n      iszero\n      tag_124\n      jumpi\n        /* \"Bulksender.sol\":3425:3432  amounts */\n      dup5\n      dup5\n        /* \"Bulksender.sol\":3433:3434  i */\n      dup3\n        /* \"Bulksender.sol\":3425:3435  amounts[i] */\n      dup2\n      dup2\n      lt\n      tag_126\n      jumpi\n      tag_127\n      tag_64\n      jump\t// in\n    tag_127:\n    tag_126:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"Bulksender.sol\":3416:3435  total += amounts[i] */\n      dup3\n      tag_128\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_128:\n      swap2\n      pop\n        /* \"Bulksender.sol\":3397:3400  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"Bulksender.sol\":3370:3446  for (uint256 i = 0; i < n; ++i) {... */\n      jump(tag_123)\n    tag_124:\n      pop\n        /* \"Bulksender.sol\":3456:3475  uint256 contractBal */\n      0x00\n        /* \"Bulksender.sol\":3478:3483  token */\n      dup8\n        /* \"Bulksender.sol\":3478:3493  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Bulksender.sol\":3502:3506  this */\n      address\n        /* \"Bulksender.sol\":3478:3508  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_129:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_131\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_131:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_132\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"Bulksender.sol\":3456:3508  uint256 contractBal = token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Bulksender.sol\":3541:3546  total */\n      dup2\n        /* \"Bulksender.sol\":3526:3537  contractBal */\n      dup2\n        /* \"Bulksender.sol\":3526:3546  contractBal >= total */\n      lt\n      iszero\n        /* \"Bulksender.sol\":3518:3580  require(contractBal >= total, \"insufficient-contract-balance\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n        /* \"Bulksender.sol\":3596:3605  uint256 i */\n      0x00\n        /* \"Bulksender.sol\":3591:3693  for (uint256 i = 0; i < n; ++i) {... */\n    tag_137:\n        /* \"Bulksender.sol\":3615:3616  n */\n      dup4\n        /* \"Bulksender.sol\":3611:3612  i */\n      dup2\n        /* \"Bulksender.sol\":3611:3616  i < n */\n      lt\n        /* \"Bulksender.sol\":3591:3693  for (uint256 i = 0; i < n; ++i) {... */\n      iszero\n      tag_138\n      jumpi\n        /* \"Bulksender.sol\":3637:3682  token.safeTransfer(recipients[i], amounts[i]) */\n      tag_140\n        /* \"Bulksender.sol\":3656:3666  recipients */\n      dup9\n      dup9\n        /* \"Bulksender.sol\":3667:3668  i */\n      dup4\n        /* \"Bulksender.sol\":3656:3669  recipients[i] */\n      dup2\n      dup2\n      lt\n      tag_141\n      jumpi\n      tag_142\n      tag_64\n      jump\t// in\n    tag_142:\n    tag_141:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_143\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_143:\n        /* \"Bulksender.sol\":3671:3678  amounts */\n      dup8\n      dup8\n        /* \"Bulksender.sol\":3679:3680  i */\n      dup5\n        /* \"Bulksender.sol\":3671:3681  amounts[i] */\n      dup2\n      dup2\n      lt\n      tag_144\n      jumpi\n      tag_145\n      tag_64\n      jump\t// in\n    tag_145:\n    tag_144:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"Bulksender.sol\":3637:3642  token */\n      dup12\n        /* \"Bulksender.sol\":3637:3655  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_88\n      swap1\n        /* \"Bulksender.sol\":3637:3682  token.safeTransfer(recipients[i], amounts[i]) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_140:\n        /* \"Bulksender.sol\":3618:3621  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"Bulksender.sol\":3591:3693  for (uint256 i = 0; i < n; ++i) {... */\n      jump(tag_137)\n    tag_138:\n      pop\n        /* \"Bulksender.sol\":3753:3757  this */\n      address\n        /* \"Bulksender.sol\":3708:3769  BulkERC20Transferred(address(token), address(this), total, n) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Bulksender.sol\":3737:3742  token */\n      dup9\n        /* \"Bulksender.sol\":3708:3769  BulkERC20Transferred(address(token), address(this), total, n) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8a88ad5eb4d4acfb8c47fcc9c5b0e66c5162ea704dd1e08cce235927434e18d2\n        /* \"Bulksender.sol\":3760:3765  total */\n      dup5\n        /* \"Bulksender.sol\":3767:3768  n */\n      dup7\n        /* \"Bulksender.sol\":3708:3769  BulkERC20Transferred(address(token), address(this), total, n) */\n      mload(0x40)\n      tag_146\n      swap3\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Bulksender.sol\":3236:3776  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_147\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_80\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_147:\n        /* \"Bulksender.sol\":3062:3776  function bulkTransferERC20FromContract(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Bulksender.sol\":1271:1956  function bulkTransferETH(address[] calldata recipients, uint256[] calldata amounts)... */\n    tag_46:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_149\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_54\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_149:\n        /* \"Bulksender.sol\":1423:1432  uint256 n */\n      0x00\n        /* \"Bulksender.sol\":1435:1445  recipients */\n      dup5\n      dup5\n        /* \"Bulksender.sol\":1435:1452  recipients.length */\n      swap1\n      pop\n        /* \"Bulksender.sol\":1423:1452  uint256 n = recipients.length */\n      swap1\n      pop\n        /* \"Bulksender.sol\":1475:1482  amounts */\n      dup3\n      dup3\n        /* \"Bulksender.sol\":1475:1489  amounts.length */\n      swap1\n      pop\n        /* \"Bulksender.sol\":1470:1471  n */\n      dup2\n        /* \"Bulksender.sol\":1470:1489  n == amounts.length */\n      eq\n        /* \"Bulksender.sol\":1462:1509  require(n == amounts.length, \"length-mismatch\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap1\n      tag_58\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_151:\n        /* \"Bulksender.sol\":1519:1532  uint256 total */\n      0x00\n        /* \"Bulksender.sol\":1579:1588  uint256 i */\n      dup1\n        /* \"Bulksender.sol\":1574:1650  for (uint256 i = 0; i < n; ++i) {... */\n    tag_153:\n        /* \"Bulksender.sol\":1598:1599  n */\n      dup3\n        /* \"Bulksender.sol\":1594:1595  i */\n      dup2\n        /* \"Bulksender.sol\":1594:1599  i < n */\n      lt\n        /* \"Bulksender.sol\":1574:1650  for (uint256 i = 0; i < n; ++i) {... */\n      iszero\n      tag_154\n      jumpi\n        /* \"Bulksender.sol\":1629:1636  amounts */\n      dup5\n      dup5\n        /* \"Bulksender.sol\":1637:1638  i */\n      dup3\n        /* \"Bulksender.sol\":1629:1639  amounts[i] */\n      dup2\n      dup2\n      lt\n      tag_156\n      jumpi\n      tag_157\n      tag_64\n      jump\t// in\n    tag_157:\n    tag_156:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"Bulksender.sol\":1620:1639  total += amounts[i] */\n      dup3\n      tag_158\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_158:\n      swap2\n      pop\n        /* \"Bulksender.sol\":1601:1604  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"Bulksender.sol\":1574:1650  for (uint256 i = 0; i < n; ++i) {... */\n      jump(tag_153)\n    tag_154:\n      pop\n        /* \"Bulksender.sol\":1677:1686  msg.value */\n      callvalue\n        /* \"Bulksender.sol\":1668:1673  total */\n      dup2\n        /* \"Bulksender.sol\":1668:1686  total == msg.value */\n      eq\n        /* \"Bulksender.sol\":1660:1705  require(total == msg.value, \"value-mismatch\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_159:\n        /* \"Bulksender.sol\":1743:1752  uint256 i */\n      0x00\n        /* \"Bulksender.sol\":1738:1894  for (uint256 i = 0; i < n; ++i) {... */\n    tag_162:\n        /* \"Bulksender.sol\":1762:1763  n */\n      dup3\n        /* \"Bulksender.sol\":1758:1759  i */\n      dup2\n        /* \"Bulksender.sol\":1758:1763  i < n */\n      lt\n        /* \"Bulksender.sol\":1738:1894  for (uint256 i = 0; i < n; ++i) {... */\n      iszero\n      tag_163\n      jumpi\n        /* \"Bulksender.sol\":1785:1792  bool ok */\n      0x00\n        /* \"Bulksender.sol\":1798:1808  recipients */\n      dup8\n      dup8\n        /* \"Bulksender.sol\":1809:1810  i */\n      dup4\n        /* \"Bulksender.sol\":1798:1811  recipients[i] */\n      dup2\n      dup2\n      lt\n      tag_165\n      jumpi\n      tag_166\n      tag_64\n      jump\t// in\n    tag_166:\n    tag_165:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_167\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_167:\n        /* \"Bulksender.sol\":1798:1816  recipients[i].call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Bulksender.sol\":1824:1831  amounts */\n      dup7\n      dup7\n        /* \"Bulksender.sol\":1832:1833  i */\n      dup5\n        /* \"Bulksender.sol\":1824:1834  amounts[i] */\n      dup2\n      dup2\n      lt\n      tag_168\n      jumpi\n      tag_169\n      tag_64\n      jump\t// in\n    tag_169:\n    tag_168:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"Bulksender.sol\":1798:1839  recipients[i].call{value: amounts[i]}(\"\") */\n      mload(0x40)\n      tag_170\n      swap1\n      tag_101\n      jump\t// in\n    tag_170:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_173\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_172)\n    tag_173:\n      0x60\n      swap2\n      pop\n    tag_172:\n      pop\n        /* \"Bulksender.sol\":1784:1839  (bool ok, ) = recipients[i].call{value: amounts[i]}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"Bulksender.sol\":1861:1863  ok */\n      dup1\n        /* \"Bulksender.sol\":1853:1883  require(ok, \"eth-send-failed\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"Bulksender.sol\":1770:1894  {... */\n      pop\n        /* \"Bulksender.sol\":1765:1768  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"Bulksender.sol\":1738:1894  for (uint256 i = 0; i < n; ++i) {... */\n      jump(tag_162)\n    tag_163:\n      pop\n        /* \"Bulksender.sol\":1928:1938  msg.sender */\n      caller\n        /* \"Bulksender.sol\":1909:1949  BulkETHTransferred(msg.sender, total, n) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x45d6845dd4f0bdd735a522e3076f82702e80547a0e2b1304a2e483bca6d9cdc4\n        /* \"Bulksender.sol\":1940:1945  total */\n      dup3\n        /* \"Bulksender.sol\":1947:1948  n */\n      dup5\n        /* \"Bulksender.sol\":1909:1949  BulkETHTransferred(msg.sender, total, n) */\n      mload(0x40)\n      tag_177\n      swap3\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Bulksender.sol\":1413:1956  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_178\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_80\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_178:\n        /* \"Bulksender.sol\":1271:1956  function bulkTransferETH(address[] calldata recipients, uint256[] calldata amounts)... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_182\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_184\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_114\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_190\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_191\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_196\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_197\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_198\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_36\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_199\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_200\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_197\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_200:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_203\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_204\n      swap3\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_208\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8852:8882  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8895:8918  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8532:8928  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8956:8957  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8952  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_209\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_210)\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8990:8991  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8968:8973  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_211\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9066:9071  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8440:9090  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_215:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_216:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_217:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_218:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_263\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_217\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:678   */\n    tag_219:\n        /* \"#utility.yul\":619:626   */\n      0x00\n        /* \"#utility.yul\":648:672   */\n      tag_265\n        /* \"#utility.yul\":666:671   */\n      dup3\n        /* \"#utility.yul\":648:672   */\n      tag_218\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":637:672   */\n      swap1\n      pop\n        /* \"#utility.yul\":568:678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":684:834   */\n    tag_220:\n        /* \"#utility.yul\":771:809   */\n      tag_267\n        /* \"#utility.yul\":803:808   */\n      dup2\n        /* \"#utility.yul\":771:809   */\n      tag_219\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":764:769   */\n      dup2\n        /* \"#utility.yul\":761:810   */\n      eq\n        /* \"#utility.yul\":751:828   */\n      tag_268\n      jumpi\n        /* \"#utility.yul\":824:825   */\n      0x00\n        /* \"#utility.yul\":821:822   */\n      dup1\n        /* \"#utility.yul\":814:826   */\n      revert\n        /* \"#utility.yul\":751:828   */\n    tag_268:\n        /* \"#utility.yul\":684:834   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":840:1007   */\n    tag_221:\n        /* \"#utility.yul\":900:905   */\n      0x00\n        /* \"#utility.yul\":938:944   */\n      dup2\n        /* \"#utility.yul\":925:945   */\n      calldataload\n        /* \"#utility.yul\":916:945   */\n      swap1\n      pop\n        /* \"#utility.yul\":954:1001   */\n      tag_270\n        /* \"#utility.yul\":995:1000   */\n      dup2\n        /* \"#utility.yul\":954:1001   */\n      tag_220\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":840:1007   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1013:1130   */\n    tag_222:\n        /* \"#utility.yul\":1122:1123   */\n      0x00\n        /* \"#utility.yul\":1119:1120   */\n      dup1\n        /* \"#utility.yul\":1112:1124   */\n      revert\n        /* \"#utility.yul\":1136:1253   */\n    tag_223:\n        /* \"#utility.yul\":1245:1246   */\n      0x00\n        /* \"#utility.yul\":1242:1243   */\n      dup1\n        /* \"#utility.yul\":1235:1247   */\n      revert\n        /* \"#utility.yul\":1259:1376   */\n    tag_224:\n        /* \"#utility.yul\":1368:1369   */\n      0x00\n        /* \"#utility.yul\":1365:1366   */\n      dup1\n        /* \"#utility.yul\":1358:1370   */\n      revert\n        /* \"#utility.yul\":1399:1967   */\n    tag_225:\n        /* \"#utility.yul\":1472:1480   */\n      0x00\n        /* \"#utility.yul\":1482:1488   */\n      dup1\n        /* \"#utility.yul\":1532:1535   */\n      dup4\n        /* \"#utility.yul\":1525:1529   */\n      0x1f\n        /* \"#utility.yul\":1517:1523   */\n      dup5\n        /* \"#utility.yul\":1513:1530   */\n      add\n        /* \"#utility.yul\":1509:1536   */\n      slt\n        /* \"#utility.yul\":1499:1621   */\n      tag_275\n      jumpi\n        /* \"#utility.yul\":1540:1619   */\n      tag_276\n      tag_222\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":1499:1621   */\n    tag_275:\n        /* \"#utility.yul\":1653:1659   */\n      dup3\n        /* \"#utility.yul\":1640:1660   */\n      calldataload\n        /* \"#utility.yul\":1630:1660   */\n      swap1\n      pop\n        /* \"#utility.yul\":1683:1701   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1675:1681   */\n      dup2\n        /* \"#utility.yul\":1672:1702   */\n      gt\n        /* \"#utility.yul\":1669:1786   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":1705:1784   */\n      tag_278\n      tag_223\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":1669:1786   */\n    tag_277:\n        /* \"#utility.yul\":1819:1823   */\n      0x20\n        /* \"#utility.yul\":1811:1817   */\n      dup4\n        /* \"#utility.yul\":1807:1824   */\n      add\n        /* \"#utility.yul\":1795:1824   */\n      swap2\n      pop\n        /* \"#utility.yul\":1873:1876   */\n      dup4\n        /* \"#utility.yul\":1865:1869   */\n      0x20\n        /* \"#utility.yul\":1857:1863   */\n      dup3\n        /* \"#utility.yul\":1853:1870   */\n      mul\n        /* \"#utility.yul\":1843:1851   */\n      dup4\n        /* \"#utility.yul\":1839:1871   */\n      add\n        /* \"#utility.yul\":1836:1877   */\n      gt\n        /* \"#utility.yul\":1833:1961   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":1880:1959   */\n      tag_280\n      tag_224\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":1833:1961   */\n    tag_279:\n        /* \"#utility.yul\":1399:1967   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1990:2558   */\n    tag_226:\n        /* \"#utility.yul\":2063:2071   */\n      0x00\n        /* \"#utility.yul\":2073:2079   */\n      dup1\n        /* \"#utility.yul\":2123:2126   */\n      dup4\n        /* \"#utility.yul\":2116:2120   */\n      0x1f\n        /* \"#utility.yul\":2108:2114   */\n      dup5\n        /* \"#utility.yul\":2104:2121   */\n      add\n        /* \"#utility.yul\":2100:2127   */\n      slt\n        /* \"#utility.yul\":2090:2212   */\n      tag_282\n      jumpi\n        /* \"#utility.yul\":2131:2210   */\n      tag_283\n      tag_222\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":2090:2212   */\n    tag_282:\n        /* \"#utility.yul\":2244:2250   */\n      dup3\n        /* \"#utility.yul\":2231:2251   */\n      calldataload\n        /* \"#utility.yul\":2221:2251   */\n      swap1\n      pop\n        /* \"#utility.yul\":2274:2292   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2266:2272   */\n      dup2\n        /* \"#utility.yul\":2263:2293   */\n      gt\n        /* \"#utility.yul\":2260:2377   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":2296:2375   */\n      tag_285\n      tag_223\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":2260:2377   */\n    tag_284:\n        /* \"#utility.yul\":2410:2414   */\n      0x20\n        /* \"#utility.yul\":2402:2408   */\n      dup4\n        /* \"#utility.yul\":2398:2415   */\n      add\n        /* \"#utility.yul\":2386:2415   */\n      swap2\n      pop\n        /* \"#utility.yul\":2464:2467   */\n      dup4\n        /* \"#utility.yul\":2456:2460   */\n      0x20\n        /* \"#utility.yul\":2448:2454   */\n      dup3\n        /* \"#utility.yul\":2444:2461   */\n      mul\n        /* \"#utility.yul\":2434:2442   */\n      dup4\n        /* \"#utility.yul\":2430:2462   */\n      add\n        /* \"#utility.yul\":2427:2468   */\n      gt\n        /* \"#utility.yul\":2424:2552   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":2471:2550   */\n      tag_287\n      tag_224\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":2424:2552   */\n    tag_286:\n        /* \"#utility.yul\":1990:2558   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2564:3671   */\n    tag_19:\n        /* \"#utility.yul\":2709:2715   */\n      0x00\n        /* \"#utility.yul\":2717:2723   */\n      dup1\n        /* \"#utility.yul\":2725:2731   */\n      0x00\n        /* \"#utility.yul\":2733:2739   */\n      dup1\n        /* \"#utility.yul\":2741:2747   */\n      0x00\n        /* \"#utility.yul\":2790:2792   */\n      0x60\n        /* \"#utility.yul\":2778:2787   */\n      dup7\n        /* \"#utility.yul\":2769:2776   */\n      dup9\n        /* \"#utility.yul\":2765:2788   */\n      sub\n        /* \"#utility.yul\":2761:2793   */\n      slt\n        /* \"#utility.yul\":2758:2877   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":2796:2875   */\n      tag_290\n      tag_215\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":2758:2877   */\n    tag_289:\n        /* \"#utility.yul\":2916:2917   */\n      0x00\n        /* \"#utility.yul\":2941:3008   */\n      tag_291\n        /* \"#utility.yul\":3000:3007   */\n      dup9\n        /* \"#utility.yul\":2991:2997   */\n      dup3\n        /* \"#utility.yul\":2980:2989   */\n      dup10\n        /* \"#utility.yul\":2976:2998   */\n      add\n        /* \"#utility.yul\":2941:3008   */\n      tag_221\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":2931:3008   */\n      swap6\n      pop\n        /* \"#utility.yul\":2887:3018   */\n      pop\n        /* \"#utility.yul\":3085:3087   */\n      0x20\n        /* \"#utility.yul\":3074:3083   */\n      dup7\n        /* \"#utility.yul\":3070:3088   */\n      add\n        /* \"#utility.yul\":3057:3089   */\n      calldataload\n        /* \"#utility.yul\":3116:3134   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3108:3114   */\n      dup2\n        /* \"#utility.yul\":3105:3135   */\n      gt\n        /* \"#utility.yul\":3102:3219   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":3138:3217   */\n      tag_293\n      tag_216\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":3102:3219   */\n    tag_292:\n        /* \"#utility.yul\":3251:3331   */\n      tag_294\n        /* \"#utility.yul\":3323:3330   */\n      dup9\n        /* \"#utility.yul\":3314:3320   */\n      dup3\n        /* \"#utility.yul\":3303:3312   */\n      dup10\n        /* \"#utility.yul\":3299:3321   */\n      add\n        /* \"#utility.yul\":3251:3331   */\n      tag_225\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":3233:3331   */\n      swap5\n      pop\n      swap5\n      pop\n        /* \"#utility.yul\":3028:3341   */\n      pop\n        /* \"#utility.yul\":3408:3410   */\n      0x40\n        /* \"#utility.yul\":3397:3406   */\n      dup7\n        /* \"#utility.yul\":3393:3411   */\n      add\n        /* \"#utility.yul\":3380:3412   */\n      calldataload\n        /* \"#utility.yul\":3439:3457   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3431:3437   */\n      dup2\n        /* \"#utility.yul\":3428:3458   */\n      gt\n        /* \"#utility.yul\":3425:3542   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":3461:3540   */\n      tag_296\n      tag_216\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":3425:3542   */\n    tag_295:\n        /* \"#utility.yul\":3574:3654   */\n      tag_297\n        /* \"#utility.yul\":3646:3653   */\n      dup9\n        /* \"#utility.yul\":3637:3643   */\n      dup3\n        /* \"#utility.yul\":3626:3635   */\n      dup10\n        /* \"#utility.yul\":3622:3644   */\n      add\n        /* \"#utility.yul\":3574:3654   */\n      tag_226\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":3556:3654   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":3351:3664   */\n      pop\n        /* \"#utility.yul\":2564:3671   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3677:3799   */\n    tag_227:\n        /* \"#utility.yul\":3750:3774   */\n      tag_299\n        /* \"#utility.yul\":3768:3773   */\n      dup2\n        /* \"#utility.yul\":3750:3774   */\n      tag_218\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":3743:3748   */\n      dup2\n        /* \"#utility.yul\":3740:3775   */\n      eq\n        /* \"#utility.yul\":3730:3793   */\n      tag_300\n      jumpi\n        /* \"#utility.yul\":3789:3790   */\n      0x00\n        /* \"#utility.yul\":3786:3787   */\n      dup1\n        /* \"#utility.yul\":3779:3791   */\n      revert\n        /* \"#utility.yul\":3730:3793   */\n    tag_300:\n        /* \"#utility.yul\":3677:3799   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3805:3944   */\n    tag_228:\n        /* \"#utility.yul\":3851:3856   */\n      0x00\n        /* \"#utility.yul\":3889:3895   */\n      dup2\n        /* \"#utility.yul\":3876:3896   */\n      calldataload\n        /* \"#utility.yul\":3867:3896   */\n      swap1\n      pop\n        /* \"#utility.yul\":3905:3938   */\n      tag_302\n        /* \"#utility.yul\":3932:3937   */\n      dup2\n        /* \"#utility.yul\":3905:3938   */\n      tag_227\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":3805:3944   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3950:4027   */\n    tag_229:\n        /* \"#utility.yul\":3987:3994   */\n      0x00\n        /* \"#utility.yul\":4016:4021   */\n      dup2\n        /* \"#utility.yul\":4005:4021   */\n      swap1\n      pop\n        /* \"#utility.yul\":3950:4027   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4033:4155   */\n    tag_230:\n        /* \"#utility.yul\":4106:4130   */\n      tag_305\n        /* \"#utility.yul\":4124:4129   */\n      dup2\n        /* \"#utility.yul\":4106:4130   */\n      tag_229\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":4099:4104   */\n      dup2\n        /* \"#utility.yul\":4096:4131   */\n      eq\n        /* \"#utility.yul\":4086:4149   */\n      tag_306\n      jumpi\n        /* \"#utility.yul\":4145:4146   */\n      0x00\n        /* \"#utility.yul\":4142:4143   */\n      dup1\n        /* \"#utility.yul\":4135:4147   */\n      revert\n        /* \"#utility.yul\":4086:4149   */\n    tag_306:\n        /* \"#utility.yul\":4033:4155   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4161:4300   */\n    tag_231:\n        /* \"#utility.yul\":4207:4212   */\n      0x00\n        /* \"#utility.yul\":4245:4251   */\n      dup2\n        /* \"#utility.yul\":4232:4252   */\n      calldataload\n        /* \"#utility.yul\":4223:4252   */\n      swap1\n      pop\n        /* \"#utility.yul\":4261:4294   */\n      tag_308\n        /* \"#utility.yul\":4288:4293   */\n      dup2\n        /* \"#utility.yul\":4261:4294   */\n      tag_230\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":4161:4300   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4306:4953   */\n    tag_24:\n        /* \"#utility.yul\":4397:4403   */\n      0x00\n        /* \"#utility.yul\":4405:4411   */\n      dup1\n        /* \"#utility.yul\":4413:4419   */\n      0x00\n        /* \"#utility.yul\":4462:4464   */\n      0x60\n        /* \"#utility.yul\":4450:4459   */\n      dup5\n        /* \"#utility.yul\":4441:4448   */\n      dup7\n        /* \"#utility.yul\":4437:4460   */\n      sub\n        /* \"#utility.yul\":4433:4465   */\n      slt\n        /* \"#utility.yul\":4430:4549   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":4468:4547   */\n      tag_311\n      tag_215\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":4430:4549   */\n    tag_310:\n        /* \"#utility.yul\":4588:4589   */\n      0x00\n        /* \"#utility.yul\":4613:4680   */\n      tag_312\n        /* \"#utility.yul\":4672:4679   */\n      dup7\n        /* \"#utility.yul\":4663:4669   */\n      dup3\n        /* \"#utility.yul\":4652:4661   */\n      dup8\n        /* \"#utility.yul\":4648:4670   */\n      add\n        /* \"#utility.yul\":4613:4680   */\n      tag_221\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":4603:4680   */\n      swap4\n      pop\n        /* \"#utility.yul\":4559:4690   */\n      pop\n        /* \"#utility.yul\":4729:4731   */\n      0x20\n        /* \"#utility.yul\":4755:4808   */\n      tag_313\n        /* \"#utility.yul\":4800:4807   */\n      dup7\n        /* \"#utility.yul\":4791:4797   */\n      dup3\n        /* \"#utility.yul\":4780:4789   */\n      dup8\n        /* \"#utility.yul\":4776:4798   */\n      add\n        /* \"#utility.yul\":4755:4808   */\n      tag_228\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":4745:4808   */\n      swap3\n      pop\n        /* \"#utility.yul\":4700:4818   */\n      pop\n        /* \"#utility.yul\":4857:4859   */\n      0x40\n        /* \"#utility.yul\":4883:4936   */\n      tag_314\n        /* \"#utility.yul\":4928:4935   */\n      dup7\n        /* \"#utility.yul\":4919:4925   */\n      dup3\n        /* \"#utility.yul\":4908:4917   */\n      dup8\n        /* \"#utility.yul\":4904:4926   */\n      add\n        /* \"#utility.yul\":4883:4936   */\n      tag_231\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":4873:4936   */\n      swap2\n      pop\n        /* \"#utility.yul\":4828:4946   */\n      pop\n        /* \"#utility.yul\":4306:4953   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4959:5063   */\n    tag_232:\n        /* \"#utility.yul\":5004:5011   */\n      0x00\n        /* \"#utility.yul\":5033:5057   */\n      tag_316\n        /* \"#utility.yul\":5051:5056   */\n      dup3\n        /* \"#utility.yul\":5033:5057   */\n      tag_217\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":5022:5057   */\n      swap1\n      pop\n        /* \"#utility.yul\":4959:5063   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5069:5207   */\n    tag_233:\n        /* \"#utility.yul\":5150:5182   */\n      tag_318\n        /* \"#utility.yul\":5176:5181   */\n      dup2\n        /* \"#utility.yul\":5150:5182   */\n      tag_232\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":5143:5148   */\n      dup2\n        /* \"#utility.yul\":5140:5183   */\n      eq\n        /* \"#utility.yul\":5130:5201   */\n      tag_319\n      jumpi\n        /* \"#utility.yul\":5197:5198   */\n      0x00\n        /* \"#utility.yul\":5194:5195   */\n      dup1\n        /* \"#utility.yul\":5187:5199   */\n      revert\n        /* \"#utility.yul\":5130:5201   */\n    tag_319:\n        /* \"#utility.yul\":5069:5207   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5213:5368   */\n    tag_234:\n        /* \"#utility.yul\":5267:5272   */\n      0x00\n        /* \"#utility.yul\":5305:5311   */\n      dup2\n        /* \"#utility.yul\":5292:5312   */\n      calldataload\n        /* \"#utility.yul\":5283:5312   */\n      swap1\n      pop\n        /* \"#utility.yul\":5321:5362   */\n      tag_321\n        /* \"#utility.yul\":5356:5361   */\n      dup2\n        /* \"#utility.yul\":5321:5362   */\n      tag_233\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":5213:5368   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5374:5864   */\n    tag_29:\n        /* \"#utility.yul\":5450:5456   */\n      0x00\n        /* \"#utility.yul\":5458:5464   */\n      dup1\n        /* \"#utility.yul\":5507:5509   */\n      0x40\n        /* \"#utility.yul\":5495:5504   */\n      dup4\n        /* \"#utility.yul\":5486:5493   */\n      dup6\n        /* \"#utility.yul\":5482:5505   */\n      sub\n        /* \"#utility.yul\":5478:5510   */\n      slt\n        /* \"#utility.yul\":5475:5594   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":5513:5592   */\n      tag_324\n      tag_215\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":5475:5594   */\n    tag_323:\n        /* \"#utility.yul\":5633:5634   */\n      0x00\n        /* \"#utility.yul\":5658:5719   */\n      tag_325\n        /* \"#utility.yul\":5711:5718   */\n      dup6\n        /* \"#utility.yul\":5702:5708   */\n      dup3\n        /* \"#utility.yul\":5691:5700   */\n      dup7\n        /* \"#utility.yul\":5687:5709   */\n      add\n        /* \"#utility.yul\":5658:5719   */\n      tag_234\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":5648:5719   */\n      swap3\n      pop\n        /* \"#utility.yul\":5604:5729   */\n      pop\n        /* \"#utility.yul\":5768:5770   */\n      0x20\n        /* \"#utility.yul\":5794:5847   */\n      tag_326\n        /* \"#utility.yul\":5839:5846   */\n      dup6\n        /* \"#utility.yul\":5830:5836   */\n      dup3\n        /* \"#utility.yul\":5819:5828   */\n      dup7\n        /* \"#utility.yul\":5815:5837   */\n      add\n        /* \"#utility.yul\":5794:5847   */\n      tag_231\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":5784:5847   */\n      swap2\n      pop\n        /* \"#utility.yul\":5739:5857   */\n      pop\n        /* \"#utility.yul\":5374:5864   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5870:5988   */\n    tag_235:\n        /* \"#utility.yul\":5957:5981   */\n      tag_328\n        /* \"#utility.yul\":5975:5980   */\n      dup2\n        /* \"#utility.yul\":5957:5981   */\n      tag_218\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":5952:5955   */\n      dup3\n        /* \"#utility.yul\":5945:5982   */\n      mstore\n        /* \"#utility.yul\":5870:5988   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5994:6216   */\n    tag_38:\n        /* \"#utility.yul\":6087:6091   */\n      0x00\n        /* \"#utility.yul\":6125:6127   */\n      0x20\n        /* \"#utility.yul\":6114:6123   */\n      dup3\n        /* \"#utility.yul\":6110:6128   */\n      add\n        /* \"#utility.yul\":6102:6128   */\n      swap1\n      pop\n        /* \"#utility.yul\":6138:6209   */\n      tag_330\n        /* \"#utility.yul\":6206:6207   */\n      0x00\n        /* \"#utility.yul\":6195:6204   */\n      dup4\n        /* \"#utility.yul\":6191:6208   */\n      add\n        /* \"#utility.yul\":6182:6188   */\n      dup5\n        /* \"#utility.yul\":6138:6209   */\n      tag_235\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":5994:6216   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6222:7156   */\n    tag_45:\n        /* \"#utility.yul\":6344:6350   */\n      0x00\n        /* \"#utility.yul\":6352:6358   */\n      dup1\n        /* \"#utility.yul\":6360:6366   */\n      0x00\n        /* \"#utility.yul\":6368:6374   */\n      dup1\n        /* \"#utility.yul\":6417:6419   */\n      0x40\n        /* \"#utility.yul\":6405:6414   */\n      dup6\n        /* \"#utility.yul\":6396:6403   */\n      dup8\n        /* \"#utility.yul\":6392:6415   */\n      sub\n        /* \"#utility.yul\":6388:6420   */\n      slt\n        /* \"#utility.yul\":6385:6504   */\n      iszero\n      tag_332\n      jumpi\n        /* \"#utility.yul\":6423:6502   */\n      tag_333\n      tag_215\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":6385:6504   */\n    tag_332:\n        /* \"#utility.yul\":6571:6572   */\n      0x00\n        /* \"#utility.yul\":6560:6569   */\n      dup6\n        /* \"#utility.yul\":6556:6573   */\n      add\n        /* \"#utility.yul\":6543:6574   */\n      calldataload\n        /* \"#utility.yul\":6601:6619   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6593:6599   */\n      dup2\n        /* \"#utility.yul\":6590:6620   */\n      gt\n        /* \"#utility.yul\":6587:6704   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":6623:6702   */\n      tag_335\n      tag_216\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":6587:6704   */\n    tag_334:\n        /* \"#utility.yul\":6736:6816   */\n      tag_336\n        /* \"#utility.yul\":6808:6815   */\n      dup8\n        /* \"#utility.yul\":6799:6805   */\n      dup3\n        /* \"#utility.yul\":6788:6797   */\n      dup9\n        /* \"#utility.yul\":6784:6806   */\n      add\n        /* \"#utility.yul\":6736:6816   */\n      tag_225\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":6718:6816   */\n      swap5\n      pop\n      swap5\n      pop\n        /* \"#utility.yul\":6514:6826   */\n      pop\n        /* \"#utility.yul\":6893:6895   */\n      0x20\n        /* \"#utility.yul\":6882:6891   */\n      dup6\n        /* \"#utility.yul\":6878:6896   */\n      add\n        /* \"#utility.yul\":6865:6897   */\n      calldataload\n        /* \"#utility.yul\":6924:6942   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6916:6922   */\n      dup2\n        /* \"#utility.yul\":6913:6943   */\n      gt\n        /* \"#utility.yul\":6910:7027   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":6946:7025   */\n      tag_338\n      tag_216\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":6910:7027   */\n    tag_337:\n        /* \"#utility.yul\":7059:7139   */\n      tag_339\n        /* \"#utility.yul\":7131:7138   */\n      dup8\n        /* \"#utility.yul\":7122:7128   */\n      dup3\n        /* \"#utility.yul\":7111:7120   */\n      dup9\n        /* \"#utility.yul\":7107:7129   */\n      add\n        /* \"#utility.yul\":7059:7139   */\n      tag_226\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":7041:7139   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":6836:7149   */\n      pop\n        /* \"#utility.yul\":6222:7156   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7162:7491   */\n    tag_50:\n        /* \"#utility.yul\":7221:7227   */\n      0x00\n        /* \"#utility.yul\":7270:7272   */\n      0x20\n        /* \"#utility.yul\":7258:7267   */\n      dup3\n        /* \"#utility.yul\":7249:7256   */\n      dup5\n        /* \"#utility.yul\":7245:7268   */\n      sub\n        /* \"#utility.yul\":7241:7273   */\n      slt\n        /* \"#utility.yul\":7238:7357   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":7276:7355   */\n      tag_342\n      tag_215\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":7238:7357   */\n    tag_341:\n        /* \"#utility.yul\":7396:7397   */\n      0x00\n        /* \"#utility.yul\":7421:7474   */\n      tag_343\n        /* \"#utility.yul\":7466:7473   */\n      dup5\n        /* \"#utility.yul\":7457:7463   */\n      dup3\n        /* \"#utility.yul\":7446:7455   */\n      dup6\n        /* \"#utility.yul\":7442:7464   */\n      add\n        /* \"#utility.yul\":7421:7474   */\n      tag_228\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":7411:7474   */\n      swap2\n      pop\n        /* \"#utility.yul\":7367:7484   */\n      pop\n        /* \"#utility.yul\":7162:7491   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7497:7666   */\n    tag_236:\n        /* \"#utility.yul\":7581:7592   */\n      0x00\n        /* \"#utility.yul\":7615:7621   */\n      dup3\n        /* \"#utility.yul\":7610:7613   */\n      dup3\n        /* \"#utility.yul\":7603:7622   */\n      mstore\n        /* \"#utility.yul\":7655:7659   */\n      0x20\n        /* \"#utility.yul\":7650:7653   */\n      dup3\n        /* \"#utility.yul\":7646:7660   */\n      add\n        /* \"#utility.yul\":7631:7660   */\n      swap1\n      pop\n        /* \"#utility.yul\":7497:7666   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7672:7837   */\n    tag_237:\n        /* \"#utility.yul\":7812:7829   */\n      0x6c656e6774682d6d69736d617463680000000000000000000000000000000000\n        /* \"#utility.yul\":7808:7809   */\n      0x00\n        /* \"#utility.yul\":7800:7806   */\n      dup3\n        /* \"#utility.yul\":7796:7810   */\n      add\n        /* \"#utility.yul\":7789:7830   */\n      mstore\n        /* \"#utility.yul\":7672:7837   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7843:8209   */\n    tag_238:\n        /* \"#utility.yul\":7985:7988   */\n      0x00\n        /* \"#utility.yul\":8006:8073   */\n      tag_347\n        /* \"#utility.yul\":8070:8072   */\n      0x0f\n        /* \"#utility.yul\":8065:8068   */\n      dup4\n        /* \"#utility.yul\":8006:8073   */\n      tag_236\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":7999:8073   */\n      swap2\n      pop\n        /* \"#utility.yul\":8082:8175   */\n      tag_348\n        /* \"#utility.yul\":8171:8174   */\n      dup3\n        /* \"#utility.yul\":8082:8175   */\n      tag_237\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":8200:8202   */\n      0x20\n        /* \"#utility.yul\":8195:8198   */\n      dup3\n        /* \"#utility.yul\":8191:8203   */\n      add\n        /* \"#utility.yul\":8184:8203   */\n      swap1\n      pop\n        /* \"#utility.yul\":7843:8209   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8215:8634   */\n    tag_58:\n        /* \"#utility.yul\":8381:8385   */\n      0x00\n        /* \"#utility.yul\":8419:8421   */\n      0x20\n        /* \"#utility.yul\":8408:8417   */\n      dup3\n        /* \"#utility.yul\":8404:8422   */\n      add\n        /* \"#utility.yul\":8396:8422   */\n      swap1\n      pop\n        /* \"#utility.yul\":8468:8477   */\n      dup2\n        /* \"#utility.yul\":8462:8466   */\n      dup2\n        /* \"#utility.yul\":8458:8478   */\n      sub\n        /* \"#utility.yul\":8454:8455   */\n      0x00\n        /* \"#utility.yul\":8443:8452   */\n      dup4\n        /* \"#utility.yul\":8439:8456   */\n      add\n        /* \"#utility.yul\":8432:8479   */\n      mstore\n        /* \"#utility.yul\":8496:8627   */\n      tag_350\n        /* \"#utility.yul\":8622:8626   */\n      dup2\n        /* \"#utility.yul\":8496:8627   */\n      tag_238\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":8488:8627   */\n      swap1\n      pop\n        /* \"#utility.yul\":8215:8634   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8640:8820   */\n    tag_64:\n        /* \"#utility.yul\":8688:8765   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8685:8686   */\n      0x00\n        /* \"#utility.yul\":8678:8766   */\n      mstore\n        /* \"#utility.yul\":8785:8789   */\n      0x32\n        /* \"#utility.yul\":8782:8783   */\n      0x04\n        /* \"#utility.yul\":8775:8790   */\n      mstore\n        /* \"#utility.yul\":8809:8813   */\n      0x24\n        /* \"#utility.yul\":8806:8807   */\n      0x00\n        /* \"#utility.yul\":8799:8814   */\n      revert\n        /* \"#utility.yul\":8826:9006   */\n    tag_239:\n        /* \"#utility.yul\":8874:8951   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8871:8872   */\n      0x00\n        /* \"#utility.yul\":8864:8952   */\n      mstore\n        /* \"#utility.yul\":8971:8975   */\n      0x11\n        /* \"#utility.yul\":8968:8969   */\n      0x04\n        /* \"#utility.yul\":8961:8976   */\n      mstore\n        /* \"#utility.yul\":8995:8999   */\n      0x24\n        /* \"#utility.yul\":8992:8993   */\n      0x00\n        /* \"#utility.yul\":8985:9000   */\n      revert\n        /* \"#utility.yul\":9012:9203   */\n    tag_66:\n        /* \"#utility.yul\":9052:9055   */\n      0x00\n        /* \"#utility.yul\":9071:9091   */\n      tag_354\n        /* \"#utility.yul\":9089:9090   */\n      dup3\n        /* \"#utility.yul\":9071:9091   */\n      tag_229\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":9066:9091   */\n      swap2\n      pop\n        /* \"#utility.yul\":9105:9125   */\n      tag_355\n        /* \"#utility.yul\":9123:9124   */\n      dup4\n        /* \"#utility.yul\":9105:9125   */\n      tag_229\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":9100:9125   */\n      swap3\n      pop\n        /* \"#utility.yul\":9148:9149   */\n      dup3\n        /* \"#utility.yul\":9145:9146   */\n      dup3\n        /* \"#utility.yul\":9141:9150   */\n      add\n        /* \"#utility.yul\":9134:9150   */\n      swap1\n      pop\n        /* \"#utility.yul\":9169:9172   */\n      dup1\n        /* \"#utility.yul\":9166:9167   */\n      dup3\n        /* \"#utility.yul\":9163:9173   */\n      gt\n        /* \"#utility.yul\":9160:9196   */\n      iszero\n      tag_356\n      jumpi\n        /* \"#utility.yul\":9176:9194   */\n      tag_357\n      tag_239\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":9160:9196   */\n    tag_356:\n        /* \"#utility.yul\":9012:9203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9209:9327   */\n    tag_240:\n        /* \"#utility.yul\":9296:9320   */\n      tag_359\n        /* \"#utility.yul\":9314:9319   */\n      dup2\n        /* \"#utility.yul\":9296:9320   */\n      tag_229\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":9291:9294   */\n      dup3\n        /* \"#utility.yul\":9284:9321   */\n      mstore\n        /* \"#utility.yul\":9209:9327   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9333:9665   */\n    tag_78:\n        /* \"#utility.yul\":9454:9458   */\n      0x00\n        /* \"#utility.yul\":9492:9494   */\n      0x40\n        /* \"#utility.yul\":9481:9490   */\n      dup3\n        /* \"#utility.yul\":9477:9495   */\n      add\n        /* \"#utility.yul\":9469:9495   */\n      swap1\n      pop\n        /* \"#utility.yul\":9505:9576   */\n      tag_361\n        /* \"#utility.yul\":9573:9574   */\n      0x00\n        /* \"#utility.yul\":9562:9571   */\n      dup4\n        /* \"#utility.yul\":9558:9575   */\n      add\n        /* \"#utility.yul\":9549:9555   */\n      dup6\n        /* \"#utility.yul\":9505:9576   */\n      tag_240\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":9586:9658   */\n      tag_362\n        /* \"#utility.yul\":9654:9656   */\n      0x20\n        /* \"#utility.yul\":9643:9652   */\n      dup4\n        /* \"#utility.yul\":9639:9657   */\n      add\n        /* \"#utility.yul\":9630:9636   */\n      dup5\n        /* \"#utility.yul\":9586:9658   */\n      tag_240\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":9333:9665   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9671:9893   */\n    tag_90:\n        /* \"#utility.yul\":9764:9768   */\n      0x00\n        /* \"#utility.yul\":9802:9804   */\n      0x20\n        /* \"#utility.yul\":9791:9800   */\n      dup3\n        /* \"#utility.yul\":9787:9805   */\n      add\n        /* \"#utility.yul\":9779:9805   */\n      swap1\n      pop\n        /* \"#utility.yul\":9815:9886   */\n      tag_364\n        /* \"#utility.yul\":9883:9884   */\n      0x00\n        /* \"#utility.yul\":9872:9881   */\n      dup4\n        /* \"#utility.yul\":9868:9885   */\n      add\n        /* \"#utility.yul\":9859:9865   */\n      dup5\n        /* \"#utility.yul\":9815:9886   */\n      tag_240\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":9671:9893   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9899:10065   */\n    tag_241:\n        /* \"#utility.yul\":10039:10057   */\n      0x696e73756666696369656e742d65746800000000000000000000000000000000\n        /* \"#utility.yul\":10035:10036   */\n      0x00\n        /* \"#utility.yul\":10027:10033   */\n      dup3\n        /* \"#utility.yul\":10023:10037   */\n      add\n        /* \"#utility.yul\":10016:10058   */\n      mstore\n        /* \"#utility.yul\":9899:10065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10071:10437   */\n    tag_242:\n        /* \"#utility.yul\":10213:10216   */\n      0x00\n        /* \"#utility.yul\":10234:10301   */\n      tag_367\n        /* \"#utility.yul\":10298:10300   */\n      0x10\n        /* \"#utility.yul\":10293:10296   */\n      dup4\n        /* \"#utility.yul\":10234:10301   */\n      tag_236\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":10227:10301   */\n      swap2\n      pop\n        /* \"#utility.yul\":10310:10403   */\n      tag_368\n        /* \"#utility.yul\":10399:10402   */\n      dup3\n        /* \"#utility.yul\":10310:10403   */\n      tag_241\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":10428:10430   */\n      0x20\n        /* \"#utility.yul\":10423:10426   */\n      dup3\n        /* \"#utility.yul\":10419:10431   */\n      add\n        /* \"#utility.yul\":10412:10431   */\n      swap1\n      pop\n        /* \"#utility.yul\":10071:10437   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10443:10862   */\n    tag_99:\n        /* \"#utility.yul\":10609:10613   */\n      0x00\n        /* \"#utility.yul\":10647:10649   */\n      0x20\n        /* \"#utility.yul\":10636:10645   */\n      dup3\n        /* \"#utility.yul\":10632:10650   */\n      add\n        /* \"#utility.yul\":10624:10650   */\n      swap1\n      pop\n        /* \"#utility.yul\":10696:10705   */\n      dup2\n        /* \"#utility.yul\":10690:10694   */\n      dup2\n        /* \"#utility.yul\":10686:10706   */\n      sub\n        /* \"#utility.yul\":10682:10683   */\n      0x00\n        /* \"#utility.yul\":10671:10680   */\n      dup4\n        /* \"#utility.yul\":10667:10684   */\n      add\n        /* \"#utility.yul\":10660:10707   */\n      mstore\n        /* \"#utility.yul\":10724:10855   */\n      tag_370\n        /* \"#utility.yul\":10850:10854   */\n      dup2\n        /* \"#utility.yul\":10724:10855   */\n      tag_242\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":10716:10855   */\n      swap1\n      pop\n        /* \"#utility.yul\":10443:10862   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10868:11015   */\n    tag_243:\n        /* \"#utility.yul\":10969:10980   */\n      0x00\n        /* \"#utility.yul\":11006:11009   */\n      dup2\n        /* \"#utility.yul\":10991:11009   */\n      swap1\n      pop\n        /* \"#utility.yul\":10868:11015   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11021:11135   */\n    tag_244:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11141:11539   */\n    tag_245:\n        /* \"#utility.yul\":11300:11303   */\n      0x00\n        /* \"#utility.yul\":11321:11404   */\n      tag_374\n        /* \"#utility.yul\":11402:11403   */\n      0x00\n        /* \"#utility.yul\":11397:11400   */\n      dup4\n        /* \"#utility.yul\":11321:11404   */\n      tag_243\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":11314:11404   */\n      swap2\n      pop\n        /* \"#utility.yul\":11413:11506   */\n      tag_375\n        /* \"#utility.yul\":11502:11505   */\n      dup3\n        /* \"#utility.yul\":11413:11506   */\n      tag_244\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":11531:11532   */\n      0x00\n        /* \"#utility.yul\":11526:11529   */\n      dup3\n        /* \"#utility.yul\":11522:11533   */\n      add\n        /* \"#utility.yul\":11515:11533   */\n      swap1\n      pop\n        /* \"#utility.yul\":11141:11539   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11545:11924   */\n    tag_101:\n        /* \"#utility.yul\":11729:11732   */\n      0x00\n        /* \"#utility.yul\":11751:11898   */\n      tag_377\n        /* \"#utility.yul\":11894:11897   */\n      dup3\n        /* \"#utility.yul\":11751:11898   */\n      tag_245\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":11744:11898   */\n      swap2\n      pop\n        /* \"#utility.yul\":11915:11918   */\n      dup2\n        /* \"#utility.yul\":11908:11918   */\n      swap1\n      pop\n        /* \"#utility.yul\":11545:11924   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11930:12095   */\n    tag_246:\n        /* \"#utility.yul\":12070:12087   */\n      0x77697468647261772d6661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":12066:12067   */\n      0x00\n        /* \"#utility.yul\":12058:12064   */\n      dup3\n        /* \"#utility.yul\":12054:12068   */\n      add\n        /* \"#utility.yul\":12047:12088   */\n      mstore\n        /* \"#utility.yul\":11930:12095   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12101:12467   */\n    tag_247:\n        /* \"#utility.yul\":12243:12246   */\n      0x00\n        /* \"#utility.yul\":12264:12331   */\n      tag_380\n        /* \"#utility.yul\":12328:12330   */\n      0x0f\n        /* \"#utility.yul\":12323:12326   */\n      dup4\n        /* \"#utility.yul\":12264:12331   */\n      tag_236\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":12257:12331   */\n      swap2\n      pop\n        /* \"#utility.yul\":12340:12433   */\n      tag_381\n        /* \"#utility.yul\":12429:12432   */\n      dup3\n        /* \"#utility.yul\":12340:12433   */\n      tag_246\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":12458:12460   */\n      0x20\n        /* \"#utility.yul\":12453:12456   */\n      dup3\n        /* \"#utility.yul\":12449:12461   */\n      add\n        /* \"#utility.yul\":12442:12461   */\n      swap1\n      pop\n        /* \"#utility.yul\":12101:12467   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12473:12892   */\n    tag_107:\n        /* \"#utility.yul\":12639:12643   */\n      0x00\n        /* \"#utility.yul\":12677:12679   */\n      0x20\n        /* \"#utility.yul\":12666:12675   */\n      dup3\n        /* \"#utility.yul\":12662:12680   */\n      add\n        /* \"#utility.yul\":12654:12680   */\n      swap1\n      pop\n        /* \"#utility.yul\":12726:12735   */\n      dup2\n        /* \"#utility.yul\":12720:12724   */\n      dup2\n        /* \"#utility.yul\":12716:12736   */\n      sub\n        /* \"#utility.yul\":12712:12713   */\n      0x00\n        /* \"#utility.yul\":12701:12710   */\n      dup4\n        /* \"#utility.yul\":12697:12714   */\n      add\n        /* \"#utility.yul\":12690:12737   */\n      mstore\n        /* \"#utility.yul\":12754:12885   */\n      tag_383\n        /* \"#utility.yul\":12880:12884   */\n      dup2\n        /* \"#utility.yul\":12754:12885   */\n      tag_247\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":12746:12885   */\n      swap1\n      pop\n        /* \"#utility.yul\":12473:12892   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12898:13041   */\n    tag_248:\n        /* \"#utility.yul\":12955:12960   */\n      0x00\n        /* \"#utility.yul\":12986:12992   */\n      dup2\n        /* \"#utility.yul\":12980:12993   */\n      mload\n        /* \"#utility.yul\":12971:12993   */\n      swap1\n      pop\n        /* \"#utility.yul\":13002:13035   */\n      tag_385\n        /* \"#utility.yul\":13029:13034   */\n      dup2\n        /* \"#utility.yul\":13002:13035   */\n      tag_230\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":12898:13041   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13047:13398   */\n    tag_133:\n        /* \"#utility.yul\":13117:13123   */\n      0x00\n        /* \"#utility.yul\":13166:13168   */\n      0x20\n        /* \"#utility.yul\":13154:13163   */\n      dup3\n        /* \"#utility.yul\":13145:13152   */\n      dup5\n        /* \"#utility.yul\":13141:13164   */\n      sub\n        /* \"#utility.yul\":13137:13169   */\n      slt\n        /* \"#utility.yul\":13134:13253   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":13172:13251   */\n      tag_388\n      tag_215\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":13134:13253   */\n    tag_387:\n        /* \"#utility.yul\":13292:13293   */\n      0x00\n        /* \"#utility.yul\":13317:13381   */\n      tag_389\n        /* \"#utility.yul\":13373:13380   */\n      dup5\n        /* \"#utility.yul\":13364:13370   */\n      dup3\n        /* \"#utility.yul\":13353:13362   */\n      dup6\n        /* \"#utility.yul\":13349:13371   */\n      add\n        /* \"#utility.yul\":13317:13381   */\n      tag_248\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":13307:13381   */\n      swap2\n      pop\n        /* \"#utility.yul\":13263:13391   */\n      pop\n        /* \"#utility.yul\":13047:13398   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13404:13583   */\n    tag_249:\n        /* \"#utility.yul\":13544:13575   */\n      0x696e73756666696369656e742d636f6e74726163742d62616c616e6365000000\n        /* \"#utility.yul\":13540:13541   */\n      0x00\n        /* \"#utility.yul\":13532:13538   */\n      dup3\n        /* \"#utility.yul\":13528:13542   */\n      add\n        /* \"#utility.yul\":13521:13576   */\n      mstore\n        /* \"#utility.yul\":13404:13583   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13589:13955   */\n    tag_250:\n        /* \"#utility.yul\":13731:13734   */\n      0x00\n        /* \"#utility.yul\":13752:13819   */\n      tag_392\n        /* \"#utility.yul\":13816:13818   */\n      0x1d\n        /* \"#utility.yul\":13811:13814   */\n      dup4\n        /* \"#utility.yul\":13752:13819   */\n      tag_236\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":13745:13819   */\n      swap2\n      pop\n        /* \"#utility.yul\":13828:13921   */\n      tag_393\n        /* \"#utility.yul\":13917:13920   */\n      dup3\n        /* \"#utility.yul\":13828:13921   */\n      tag_249\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":13946:13948   */\n      0x20\n        /* \"#utility.yul\":13941:13944   */\n      dup3\n        /* \"#utility.yul\":13937:13949   */\n      add\n        /* \"#utility.yul\":13930:13949   */\n      swap1\n      pop\n        /* \"#utility.yul\":13589:13955   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13961:14380   */\n    tag_136:\n        /* \"#utility.yul\":14127:14131   */\n      0x00\n        /* \"#utility.yul\":14165:14167   */\n      0x20\n        /* \"#utility.yul\":14154:14163   */\n      dup3\n        /* \"#utility.yul\":14150:14168   */\n      add\n        /* \"#utility.yul\":14142:14168   */\n      swap1\n      pop\n        /* \"#utility.yul\":14214:14223   */\n      dup2\n        /* \"#utility.yul\":14208:14212   */\n      dup2\n        /* \"#utility.yul\":14204:14224   */\n      sub\n        /* \"#utility.yul\":14200:14201   */\n      0x00\n        /* \"#utility.yul\":14189:14198   */\n      dup4\n        /* \"#utility.yul\":14185:14202   */\n      add\n        /* \"#utility.yul\":14178:14225   */\n      mstore\n        /* \"#utility.yul\":14242:14373   */\n      tag_395\n        /* \"#utility.yul\":14368:14372   */\n      dup2\n        /* \"#utility.yul\":14242:14373   */\n      tag_250\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":14234:14373   */\n      swap1\n      pop\n        /* \"#utility.yul\":13961:14380   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14386:14550   */\n    tag_251:\n        /* \"#utility.yul\":14526:14542   */\n      0x76616c75652d6d69736d61746368000000000000000000000000000000000000\n        /* \"#utility.yul\":14522:14523   */\n      0x00\n        /* \"#utility.yul\":14514:14520   */\n      dup3\n        /* \"#utility.yul\":14510:14524   */\n      add\n        /* \"#utility.yul\":14503:14543   */\n      mstore\n        /* \"#utility.yul\":14386:14550   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14556:14922   */\n    tag_252:\n        /* \"#utility.yul\":14698:14701   */\n      0x00\n        /* \"#utility.yul\":14719:14786   */\n      tag_398\n        /* \"#utility.yul\":14783:14785   */\n      0x0e\n        /* \"#utility.yul\":14778:14781   */\n      dup4\n        /* \"#utility.yul\":14719:14786   */\n      tag_236\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":14712:14786   */\n      swap2\n      pop\n        /* \"#utility.yul\":14795:14888   */\n      tag_399\n        /* \"#utility.yul\":14884:14887   */\n      dup3\n        /* \"#utility.yul\":14795:14888   */\n      tag_251\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":14913:14915   */\n      0x20\n        /* \"#utility.yul\":14908:14911   */\n      dup3\n        /* \"#utility.yul\":14904:14916   */\n      add\n        /* \"#utility.yul\":14897:14916   */\n      swap1\n      pop\n        /* \"#utility.yul\":14556:14922   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14928:15347   */\n    tag_161:\n        /* \"#utility.yul\":15094:15098   */\n      0x00\n        /* \"#utility.yul\":15132:15134   */\n      0x20\n        /* \"#utility.yul\":15121:15130   */\n      dup3\n        /* \"#utility.yul\":15117:15135   */\n      add\n        /* \"#utility.yul\":15109:15135   */\n      swap1\n      pop\n        /* \"#utility.yul\":15181:15190   */\n      dup2\n        /* \"#utility.yul\":15175:15179   */\n      dup2\n        /* \"#utility.yul\":15171:15191   */\n      sub\n        /* \"#utility.yul\":15167:15168   */\n      0x00\n        /* \"#utility.yul\":15156:15165   */\n      dup4\n        /* \"#utility.yul\":15152:15169   */\n      add\n        /* \"#utility.yul\":15145:15192   */\n      mstore\n        /* \"#utility.yul\":15209:15340   */\n      tag_401\n        /* \"#utility.yul\":15335:15339   */\n      dup2\n        /* \"#utility.yul\":15209:15340   */\n      tag_252\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":15201:15340   */\n      swap1\n      pop\n        /* \"#utility.yul\":14928:15347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15353:15518   */\n    tag_253:\n        /* \"#utility.yul\":15493:15510   */\n      0x6574682d73656e642d6661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":15489:15490   */\n      0x00\n        /* \"#utility.yul\":15481:15487   */\n      dup3\n        /* \"#utility.yul\":15477:15491   */\n      add\n        /* \"#utility.yul\":15470:15511   */\n      mstore\n        /* \"#utility.yul\":15353:15518   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15524:15890   */\n    tag_254:\n        /* \"#utility.yul\":15666:15669   */\n      0x00\n        /* \"#utility.yul\":15687:15754   */\n      tag_404\n        /* \"#utility.yul\":15751:15753   */\n      0x0f\n        /* \"#utility.yul\":15746:15749   */\n      dup4\n        /* \"#utility.yul\":15687:15754   */\n      tag_236\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":15680:15754   */\n      swap2\n      pop\n        /* \"#utility.yul\":15763:15856   */\n      tag_405\n        /* \"#utility.yul\":15852:15855   */\n      dup3\n        /* \"#utility.yul\":15763:15856   */\n      tag_253\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":15881:15883   */\n      0x20\n        /* \"#utility.yul\":15876:15879   */\n      dup3\n        /* \"#utility.yul\":15872:15884   */\n      add\n        /* \"#utility.yul\":15865:15884   */\n      swap1\n      pop\n        /* \"#utility.yul\":15524:15890   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15896:16315   */\n    tag_176:\n        /* \"#utility.yul\":16062:16066   */\n      0x00\n        /* \"#utility.yul\":16100:16102   */\n      0x20\n        /* \"#utility.yul\":16089:16098   */\n      dup3\n        /* \"#utility.yul\":16085:16103   */\n      add\n        /* \"#utility.yul\":16077:16103   */\n      swap1\n      pop\n        /* \"#utility.yul\":16149:16158   */\n      dup2\n        /* \"#utility.yul\":16143:16147   */\n      dup2\n        /* \"#utility.yul\":16139:16159   */\n      sub\n        /* \"#utility.yul\":16135:16136   */\n      0x00\n        /* \"#utility.yul\":16124:16133   */\n      dup4\n        /* \"#utility.yul\":16120:16137   */\n      add\n        /* \"#utility.yul\":16113:16160   */\n      mstore\n        /* \"#utility.yul\":16177:16308   */\n      tag_407\n        /* \"#utility.yul\":16303:16307   */\n      dup2\n        /* \"#utility.yul\":16177:16308   */\n      tag_254\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":16169:16308   */\n      swap1\n      pop\n        /* \"#utility.yul\":15896:16315   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16321:16502   */\n    tag_255:\n        /* \"#utility.yul\":16461:16494   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":16457:16458   */\n      0x00\n        /* \"#utility.yul\":16449:16455   */\n      dup3\n        /* \"#utility.yul\":16445:16459   */\n      add\n        /* \"#utility.yul\":16438:16495   */\n      mstore\n        /* \"#utility.yul\":16321:16502   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16508:16874   */\n    tag_256:\n        /* \"#utility.yul\":16650:16653   */\n      0x00\n        /* \"#utility.yul\":16671:16738   */\n      tag_410\n        /* \"#utility.yul\":16735:16737   */\n      0x1f\n        /* \"#utility.yul\":16730:16733   */\n      dup4\n        /* \"#utility.yul\":16671:16738   */\n      tag_236\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":16664:16738   */\n      swap2\n      pop\n        /* \"#utility.yul\":16747:16840   */\n      tag_411\n        /* \"#utility.yul\":16836:16839   */\n      dup3\n        /* \"#utility.yul\":16747:16840   */\n      tag_255\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":16865:16867   */\n      0x20\n        /* \"#utility.yul\":16860:16863   */\n      dup3\n        /* \"#utility.yul\":16856:16868   */\n      add\n        /* \"#utility.yul\":16849:16868   */\n      swap1\n      pop\n        /* \"#utility.yul\":16508:16874   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16880:17299   */\n    tag_188:\n        /* \"#utility.yul\":17046:17050   */\n      0x00\n        /* \"#utility.yul\":17084:17086   */\n      0x20\n        /* \"#utility.yul\":17073:17082   */\n      dup3\n        /* \"#utility.yul\":17069:17087   */\n      add\n        /* \"#utility.yul\":17061:17087   */\n      swap1\n      pop\n        /* \"#utility.yul\":17133:17142   */\n      dup2\n        /* \"#utility.yul\":17127:17131   */\n      dup2\n        /* \"#utility.yul\":17123:17143   */\n      sub\n        /* \"#utility.yul\":17119:17120   */\n      0x00\n        /* \"#utility.yul\":17108:17117   */\n      dup4\n        /* \"#utility.yul\":17104:17121   */\n      add\n        /* \"#utility.yul\":17097:17144   */\n      mstore\n        /* \"#utility.yul\":17161:17292   */\n      tag_413\n        /* \"#utility.yul\":17287:17291   */\n      dup2\n        /* \"#utility.yul\":17161:17292   */\n      tag_256\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":17153:17292   */\n      swap1\n      pop\n        /* \"#utility.yul\":16880:17299   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17305:17747   */\n    tag_192:\n        /* \"#utility.yul\":17454:17458   */\n      0x00\n        /* \"#utility.yul\":17492:17494   */\n      0x60\n        /* \"#utility.yul\":17481:17490   */\n      dup3\n        /* \"#utility.yul\":17477:17495   */\n      add\n        /* \"#utility.yul\":17469:17495   */\n      swap1\n      pop\n        /* \"#utility.yul\":17505:17576   */\n      tag_415\n        /* \"#utility.yul\":17573:17574   */\n      0x00\n        /* \"#utility.yul\":17562:17571   */\n      dup4\n        /* \"#utility.yul\":17558:17575   */\n      add\n        /* \"#utility.yul\":17549:17555   */\n      dup7\n        /* \"#utility.yul\":17505:17576   */\n      tag_235\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":17586:17658   */\n      tag_416\n        /* \"#utility.yul\":17654:17656   */\n      0x20\n        /* \"#utility.yul\":17643:17652   */\n      dup4\n        /* \"#utility.yul\":17639:17657   */\n      add\n        /* \"#utility.yul\":17630:17636   */\n      dup6\n        /* \"#utility.yul\":17586:17658   */\n      tag_235\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":17668:17740   */\n      tag_417\n        /* \"#utility.yul\":17736:17738   */\n      0x40\n        /* \"#utility.yul\":17725:17734   */\n      dup4\n        /* \"#utility.yul\":17721:17739   */\n      add\n        /* \"#utility.yul\":17712:17718   */\n      dup5\n        /* \"#utility.yul\":17668:17740   */\n      tag_240\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":17305:17747   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17753:18085   */\n    tag_205:\n        /* \"#utility.yul\":17874:17878   */\n      0x00\n        /* \"#utility.yul\":17912:17914   */\n      0x40\n        /* \"#utility.yul\":17901:17910   */\n      dup3\n        /* \"#utility.yul\":17897:17915   */\n      add\n        /* \"#utility.yul\":17889:17915   */\n      swap1\n      pop\n        /* \"#utility.yul\":17925:17996   */\n      tag_419\n        /* \"#utility.yul\":17993:17994   */\n      0x00\n        /* \"#utility.yul\":17982:17991   */\n      dup4\n        /* \"#utility.yul\":17978:17995   */\n      add\n        /* \"#utility.yul\":17969:17975   */\n      dup6\n        /* \"#utility.yul\":17925:17996   */\n      tag_235\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":18006:18078   */\n      tag_420\n        /* \"#utility.yul\":18074:18076   */\n      0x20\n        /* \"#utility.yul\":18063:18072   */\n      dup4\n        /* \"#utility.yul\":18059:18077   */\n      add\n        /* \"#utility.yul\":18050:18056   */\n      dup5\n        /* \"#utility.yul\":18006:18078   */\n      tag_240\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":17753:18085   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f7bad7108ed2b561543a3de5b304f23772009fc7bd22663295e568f357442cd564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_256": {
									"entryPoint": null,
									"id": 256,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_941": {
									"entryPoint": null,
									"id": 941,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 157,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:590:10",
										"nodeType": "YulBlock",
										"src": "0:590:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:10",
													"nodeType": "YulBlock",
													"src": "52:81:10",
													"statements": [
														{
															"nativeSrc": "62:65:10",
															"nodeType": "YulAssignment",
															"src": "62:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:10",
																		"nodeType": "YulLiteral",
																		"src": "84:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:10"
																},
																"nativeSrc": "73:54:10",
																"nodeType": "YulFunctionCall",
																"src": "73:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:10",
														"nodeType": "YulTypedName",
														"src": "34:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:10",
														"nodeType": "YulTypedName",
														"src": "44:7:10",
														"type": ""
													}
												],
												"src": "7:126:10"
											},
											{
												"body": {
													"nativeSrc": "184:51:10",
													"nodeType": "YulBlock",
													"src": "184:51:10",
													"statements": [
														{
															"nativeSrc": "194:35:10",
															"nodeType": "YulAssignment",
															"src": "194:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:10"
																},
																"nativeSrc": "205:24:10",
																"nodeType": "YulFunctionCall",
																"src": "205:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:10",
														"nodeType": "YulTypedName",
														"src": "166:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:10",
														"nodeType": "YulTypedName",
														"src": "176:7:10",
														"type": ""
													}
												],
												"src": "139:96:10"
											},
											{
												"body": {
													"nativeSrc": "306:53:10",
													"nodeType": "YulBlock",
													"src": "306:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:10"
																		},
																		"nativeSrc": "328:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:10"
																},
																"nativeSrc": "316:37:10",
																"nodeType": "YulFunctionCall",
																"src": "316:37:10"
															},
															"nativeSrc": "316:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:10",
														"nodeType": "YulTypedName",
														"src": "294:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:10",
														"nodeType": "YulTypedName",
														"src": "301:3:10",
														"type": ""
													}
												],
												"src": "241:118:10"
											},
											{
												"body": {
													"nativeSrc": "463:124:10",
													"nodeType": "YulBlock",
													"src": "463:124:10",
													"statements": [
														{
															"nativeSrc": "473:26:10",
															"nodeType": "YulAssignment",
															"src": "473:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:10",
																		"nodeType": "YulLiteral",
																		"src": "496:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:10"
																},
																"nativeSrc": "481:18:10",
																"nodeType": "YulFunctionCall",
																"src": "481:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:10",
																				"nodeType": "YulLiteral",
																				"src": "577:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:10"
																		},
																		"nativeSrc": "562:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:10"
																},
																"nativeSrc": "509:71:10",
																"nodeType": "YulFunctionCall",
																"src": "509:71:10"
															},
															"nativeSrc": "509:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:10",
														"nodeType": "YulTypedName",
														"src": "435:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:10",
														"nodeType": "YulTypedName",
														"src": "447:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:10",
														"nodeType": "YulTypedName",
														"src": "458:4:10",
														"type": ""
													}
												],
												"src": "365:222:10"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610081575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610078919061019d565b60405180910390fd5b6100908161009d60201b60201c565b50600180819055506101b6565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101878261015e565b9050919050565b6101978161017d565b82525050565b5f6020820190506101b05f83018461018e565b92915050565b611648806101c35f395ff3fe60806040526004361061007e575f3560e01c80638da5cb5b1161004d5780638da5cb5b146101155780639f62eafe1461013f578063b874fa6a14610167578063f2fde38b1461018357610085565b80633e46cd531461008757806344004cc1146100af5780634782f779146100d7578063715018a6146100ff57610085565b3661008557005b005b348015610092575f80fd5b506100ad60048036038101906100a89190610eea565b6101ab565b005b3480156100ba575f80fd5b506100d560048036038101906100d09190610fd8565b610338565b005b3480156100e2575f80fd5b506100fd60048036038101906100f89190611063565b6103e5565b005b34801561010a575f80fd5b5061011361053b565b005b348015610120575f80fd5b5061012961054e565b60405161013691906110b0565b60405180910390f35b34801561014a575f80fd5b5061016560048036038101906101609190610eea565b610575565b005b610181600480360381019061017c91906110c9565b6107c7565b005b34801561018e575f80fd5b506101a960048036038101906101a49190611147565b6109fa565b005b6101b3610a7e565b5f8484905090508282905081146101ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f6906111cc565b60405180910390fd5b5f805b8281101561023c5784848281811061021d5761021c6111ea565b5b905060200201358261022f9190611244565b9150806001019050610202565b505f5b828110156102bf576102b43388888481811061025e5761025d6111ea565b5b90506020020160208101906102739190611147565b878785818110610286576102856111ea565b5b905060200201358b73ffffffffffffffffffffffffffffffffffffffff16610acd909392919063ffffffff16565b80600101905061023f565b503373ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f8a88ad5eb4d4acfb8c47fcc9c5b0e66c5162ea704dd1e08cce235927434e18d2838560405161031f929190611286565b60405180910390a35050610331610b4f565b5050505050565b610340610b58565b610348610a7e565b61037382828573ffffffffffffffffffffffffffffffffffffffff16610bdf9092919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fbfed55bdcd242e3dd0f60ddd7d1e87c67f61c34cd9527b3e6455d841b1025362836040516103d091906112ad565b60405180910390a36103e0610b4f565b505050565b6103ed610b58565b6103f5610a7e565b80471015610438576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042f90611310565b60405180910390fd5b5f8273ffffffffffffffffffffffffffffffffffffffff168260405161045d9061135b565b5f6040518083038185875af1925050503d805f8114610497576040519150601f19603f3d011682016040523d82523d5f602084013e61049c565b606091505b50509050806104e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d7906113b9565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff167f94b2de810873337ed265c5f8cf98c9cffefa06b8607f9a2f1fbaebdfbcfbef1c8360405161052691906112ad565b60405180910390a250610537610b4f565b5050565b610543610b58565b61054c5f610c5e565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61057d610b58565b610585610a7e565b5f8484905090508282905081146105d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c8906111cc565b60405180910390fd5b5f805b8281101561060e578484828181106105ef576105ee6111ea565b5b90506020020135826106019190611244565b91508060010190506105d4565b505f8773ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161064991906110b0565b602060405180830381865afa158015610664573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061068891906113eb565b9050818110156106cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c490611460565b60405180910390fd5b5f5b8381101561074d576107428888838181106106ed576106ec6111ea565b5b90506020020160208101906107029190611147565b878784818110610715576107146111ea565b5b905060200201358b73ffffffffffffffffffffffffffffffffffffffff16610bdf9092919063ffffffff16565b8060010190506106cf565b503073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167f8a88ad5eb4d4acfb8c47fcc9c5b0e66c5162ea704dd1e08cce235927434e18d284866040516107ad929190611286565b60405180910390a35050506107c0610b4f565b5050505050565b6107cf610a7e565b5f84849050905082829050811461081b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610812906111cc565b60405180910390fd5b5f805b8281101561085857848482818110610839576108386111ea565b5b905060200201358261084b9190611244565b915080600101905061081e565b5034811461089b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610892906114c8565b60405180910390fd5b5f5b82811015610999575f8787838181106108b9576108b86111ea565b5b90506020020160208101906108ce9190611147565b73ffffffffffffffffffffffffffffffffffffffff168686848181106108f7576108f66111ea565b5b9050602002013560405161090a9061135b565b5f6040518083038185875af1925050503d805f8114610944576040519150601f19603f3d011682016040523d82523d5f602084013e610949565b606091505b505090508061098d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098490611530565b60405180910390fd5b5080600101905061089d565b503373ffffffffffffffffffffffffffffffffffffffff167f45d6845dd4f0bdd735a522e3076f82702e80547a0e2b1304a2e483bca6d9cdc482846040516109e2929190611286565b60405180910390a250506109f4610b4f565b50505050565b610a02610b58565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a72575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a6991906110b0565b60405180910390fd5b610a7b81610c5e565b50565b600260015403610ac3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aba90611598565b60405180910390fd5b6002600181905550565b610b49848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610b02939291906115b6565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d1f565b50505050565b60018081905550565b610b60610dba565b73ffffffffffffffffffffffffffffffffffffffff16610b7e61054e565b73ffffffffffffffffffffffffffffffffffffffff1614610bdd57610ba1610dba565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610bd491906110b0565b60405180910390fd5b565b610c59838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610c129291906115eb565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d1f565b505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f8060205f8451602086015f885af180610d3e576040513d5f823e3d81fd5b3d92505f519150505f8214610d57576001811415610d72565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610db457836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610dab91906110b0565b60405180910390fd5b50505050565b5f33905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610df282610dc9565b9050919050565b5f610e0382610de8565b9050919050565b610e1381610df9565b8114610e1d575f80fd5b50565b5f81359050610e2e81610e0a565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f840112610e5557610e54610e34565b5b8235905067ffffffffffffffff811115610e7257610e71610e38565b5b602083019150836020820283011115610e8e57610e8d610e3c565b5b9250929050565b5f8083601f840112610eaa57610ea9610e34565b5b8235905067ffffffffffffffff811115610ec757610ec6610e38565b5b602083019150836020820283011115610ee357610ee2610e3c565b5b9250929050565b5f805f805f60608688031215610f0357610f02610dc1565b5b5f610f1088828901610e20565b955050602086013567ffffffffffffffff811115610f3157610f30610dc5565b5b610f3d88828901610e40565b9450945050604086013567ffffffffffffffff811115610f6057610f5f610dc5565b5b610f6c88828901610e95565b92509250509295509295909350565b610f8481610de8565b8114610f8e575f80fd5b50565b5f81359050610f9f81610f7b565b92915050565b5f819050919050565b610fb781610fa5565b8114610fc1575f80fd5b50565b5f81359050610fd281610fae565b92915050565b5f805f60608486031215610fef57610fee610dc1565b5b5f610ffc86828701610e20565b935050602061100d86828701610f91565b925050604061101e86828701610fc4565b9150509250925092565b5f61103282610dc9565b9050919050565b61104281611028565b811461104c575f80fd5b50565b5f8135905061105d81611039565b92915050565b5f806040838503121561107957611078610dc1565b5b5f6110868582860161104f565b925050602061109785828601610fc4565b9150509250929050565b6110aa81610de8565b82525050565b5f6020820190506110c35f8301846110a1565b92915050565b5f805f80604085870312156110e1576110e0610dc1565b5b5f85013567ffffffffffffffff8111156110fe576110fd610dc5565b5b61110a87828801610e40565b9450945050602085013567ffffffffffffffff81111561112d5761112c610dc5565b5b61113987828801610e95565b925092505092959194509250565b5f6020828403121561115c5761115b610dc1565b5b5f61116984828501610f91565b91505092915050565b5f82825260208201905092915050565b7f6c656e6774682d6d69736d6174636800000000000000000000000000000000005f82015250565b5f6111b6600f83611172565b91506111c182611182565b602082019050919050565b5f6020820190508181035f8301526111e3816111aa565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61124e82610fa5565b915061125983610fa5565b925082820190508082111561127157611270611217565b5b92915050565b61128081610fa5565b82525050565b5f6040820190506112995f830185611277565b6112a66020830184611277565b9392505050565b5f6020820190506112c05f830184611277565b92915050565b7f696e73756666696369656e742d657468000000000000000000000000000000005f82015250565b5f6112fa601083611172565b9150611305826112c6565b602082019050919050565b5f6020820190508181035f830152611327816112ee565b9050919050565b5f81905092915050565b50565b5f6113465f8361132e565b915061135182611338565b5f82019050919050565b5f6113658261133b565b9150819050919050565b7f77697468647261772d6661696c656400000000000000000000000000000000005f82015250565b5f6113a3600f83611172565b91506113ae8261136f565b602082019050919050565b5f6020820190508181035f8301526113d081611397565b9050919050565b5f815190506113e581610fae565b92915050565b5f60208284031215611400576113ff610dc1565b5b5f61140d848285016113d7565b91505092915050565b7f696e73756666696369656e742d636f6e74726163742d62616c616e63650000005f82015250565b5f61144a601d83611172565b915061145582611416565b602082019050919050565b5f6020820190508181035f8301526114778161143e565b9050919050565b7f76616c75652d6d69736d617463680000000000000000000000000000000000005f82015250565b5f6114b2600e83611172565b91506114bd8261147e565b602082019050919050565b5f6020820190508181035f8301526114df816114a6565b9050919050565b7f6574682d73656e642d6661696c656400000000000000000000000000000000005f82015250565b5f61151a600f83611172565b9150611525826114e6565b602082019050919050565b5f6020820190508181035f8301526115478161150e565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f611582601f83611172565b915061158d8261154e565b602082019050919050565b5f6020820190508181035f8301526115af81611576565b9050919050565b5f6060820190506115c95f8301866110a1565b6115d660208301856110a1565b6115e36040830184611277565b949350505050565b5f6040820190506115fe5f8301856110a1565b61160b6020830184611277565b939250505056fea2646970667358221220f7bad7108ed2b561543a3de5b304f23772009fc7bd22663295e568f357442cd564736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x19D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x90 DUP2 PUSH2 0x9D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0x1B6 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x187 DUP3 PUSH2 0x15E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x197 DUP2 PUSH2 0x17D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B0 PUSH0 DUP4 ADD DUP5 PUSH2 0x18E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1648 DUP1 PUSH2 0x1C3 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x4D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x9F62EAFE EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0xB874FA6A EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x183 JUMPI PUSH2 0x85 JUMP JUMPDEST DUP1 PUSH4 0x3E46CD53 EQ PUSH2 0x87 JUMPI DUP1 PUSH4 0x44004CC1 EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0x4782F779 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xFF JUMPI PUSH2 0x85 JUMP JUMPDEST CALLDATASIZE PUSH2 0x85 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x92 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xAD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA8 SWAP2 SWAP1 PUSH2 0xEEA JUMP JUMPDEST PUSH2 0x1AB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xD5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0xFD8 JUMP JUMPDEST PUSH2 0x338 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x1063 JUMP JUMPDEST PUSH2 0x3E5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x113 PUSH2 0x53B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x120 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH2 0x54E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x10B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x160 SWAP2 SWAP1 PUSH2 0xEEA JUMP JUMPDEST PUSH2 0x575 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x181 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17C SWAP2 SWAP1 PUSH2 0x10C9 JUMP JUMPDEST PUSH2 0x7C7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH2 0x9FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B3 PUSH2 0xA7E JUMP JUMPDEST PUSH0 DUP5 DUP5 SWAP1 POP SWAP1 POP DUP3 DUP3 SWAP1 POP DUP2 EQ PUSH2 0x1FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F6 SWAP1 PUSH2 0x11CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x23C JUMPI DUP5 DUP5 DUP3 DUP2 DUP2 LT PUSH2 0x21D JUMPI PUSH2 0x21C PUSH2 0x11EA JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x1244 JUMP JUMPDEST SWAP2 POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x202 JUMP JUMPDEST POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2BF JUMPI PUSH2 0x2B4 CALLER DUP9 DUP9 DUP5 DUP2 DUP2 LT PUSH2 0x25E JUMPI PUSH2 0x25D PUSH2 0x11EA JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x1147 JUMP JUMPDEST DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0x286 JUMPI PUSH2 0x285 PUSH2 0x11EA JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xACD SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x23F JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8A88AD5EB4D4ACFB8C47FCC9C5B0E66C5162EA704DD1E08CCE235927434E18D2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH2 0x31F SWAP3 SWAP2 SWAP1 PUSH2 0x1286 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH2 0x331 PUSH2 0xB4F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x340 PUSH2 0xB58 JUMP JUMPDEST PUSH2 0x348 PUSH2 0xA7E JUMP JUMPDEST PUSH2 0x373 DUP3 DUP3 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBDF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBFED55BDCD242E3DD0F60DDD7D1E87C67F61C34CD9527B3E6455D841B1025362 DUP4 PUSH1 0x40 MLOAD PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x3E0 PUSH2 0xB4F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3ED PUSH2 0xB58 JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0xA7E JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x438 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42F SWAP1 PUSH2 0x1310 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x45D SWAP1 PUSH2 0x135B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x497 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x49C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x4E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D7 SWAP1 PUSH2 0x13B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x94B2DE810873337ED265C5F8CF98C9CFFEFA06B8607F9A2F1FBAEBDFBCFBEF1C DUP4 PUSH1 0x40 MLOAD PUSH2 0x526 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x537 PUSH2 0xB4F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x543 PUSH2 0xB58 JUMP JUMPDEST PUSH2 0x54C PUSH0 PUSH2 0xC5E JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x57D PUSH2 0xB58 JUMP JUMPDEST PUSH2 0x585 PUSH2 0xA7E JUMP JUMPDEST PUSH0 DUP5 DUP5 SWAP1 POP SWAP1 POP DUP3 DUP3 SWAP1 POP DUP2 EQ PUSH2 0x5D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x11CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x60E JUMPI DUP5 DUP5 DUP3 DUP2 DUP2 LT PUSH2 0x5EF JUMPI PUSH2 0x5EE PUSH2 0x11EA JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 PUSH2 0x601 SWAP2 SWAP1 PUSH2 0x1244 JUMP JUMPDEST SWAP2 POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x5D4 JUMP JUMPDEST POP PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x649 SWAP2 SWAP1 PUSH2 0x10B0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x664 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x688 SWAP2 SWAP1 PUSH2 0x13EB JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x6CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C4 SWAP1 PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x74D JUMPI PUSH2 0x742 DUP9 DUP9 DUP4 DUP2 DUP2 LT PUSH2 0x6ED JUMPI PUSH2 0x6EC PUSH2 0x11EA JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x702 SWAP2 SWAP1 PUSH2 0x1147 JUMP JUMPDEST DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0x715 JUMPI PUSH2 0x714 PUSH2 0x11EA JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBDF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x6CF JUMP JUMPDEST POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8A88AD5EB4D4ACFB8C47FCC9C5B0E66C5162EA704DD1E08CCE235927434E18D2 DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x7AD SWAP3 SWAP2 SWAP1 PUSH2 0x1286 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP PUSH2 0x7C0 PUSH2 0xB4F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7CF PUSH2 0xA7E JUMP JUMPDEST PUSH0 DUP5 DUP5 SWAP1 POP SWAP1 POP DUP3 DUP3 SWAP1 POP DUP2 EQ PUSH2 0x81B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x812 SWAP1 PUSH2 0x11CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x858 JUMPI DUP5 DUP5 DUP3 DUP2 DUP2 LT PUSH2 0x839 JUMPI PUSH2 0x838 PUSH2 0x11EA JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 PUSH2 0x84B SWAP2 SWAP1 PUSH2 0x1244 JUMP JUMPDEST SWAP2 POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x81E JUMP JUMPDEST POP CALLVALUE DUP2 EQ PUSH2 0x89B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x892 SWAP1 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x999 JUMPI PUSH0 DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x8B9 JUMPI PUSH2 0x8B8 PUSH2 0x11EA JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x8CE SWAP2 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0x8F7 JUMPI PUSH2 0x8F6 PUSH2 0x11EA JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH2 0x90A SWAP1 PUSH2 0x135B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x944 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x949 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x98D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x984 SWAP1 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x89D JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x45D6845DD4F0BDD735A522E3076F82702E80547A0E2B1304A2E483BCA6D9CDC4 DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0x9E2 SWAP3 SWAP2 SWAP1 PUSH2 0x1286 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x9F4 PUSH2 0xB4F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xA02 PUSH2 0xB58 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA72 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA69 SWAP2 SWAP1 PUSH2 0x10B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA7B DUP2 PUSH2 0xC5E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xAC3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABA SWAP1 PUSH2 0x1598 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xB49 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xB02 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xD1F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xB60 PUSH2 0xDBA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB7E PUSH2 0x54E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBDD JUMPI PUSH2 0xBA1 PUSH2 0xDBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD4 SWAP2 SWAP1 PUSH2 0x10B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xC59 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xC12 SWAP3 SWAP2 SWAP1 PUSH2 0x15EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xD1F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xD3E JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0xD57 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xD72 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xDB4 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDAB SWAP2 SWAP1 PUSH2 0x10B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDF2 DUP3 PUSH2 0xDC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE03 DUP3 PUSH2 0xDE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE13 DUP2 PUSH2 0xDF9 JUMP JUMPDEST DUP2 EQ PUSH2 0xE1D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE2E DUP2 PUSH2 0xE0A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xE55 JUMPI PUSH2 0xE54 PUSH2 0xE34 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE72 JUMPI PUSH2 0xE71 PUSH2 0xE38 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xE8E JUMPI PUSH2 0xE8D PUSH2 0xE3C JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xEAA JUMPI PUSH2 0xEA9 PUSH2 0xE34 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEC7 JUMPI PUSH2 0xEC6 PUSH2 0xE38 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xEE3 JUMPI PUSH2 0xEE2 PUSH2 0xE3C JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xF03 JUMPI PUSH2 0xF02 PUSH2 0xDC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF10 DUP9 DUP3 DUP10 ADD PUSH2 0xE20 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF31 JUMPI PUSH2 0xF30 PUSH2 0xDC5 JUMP JUMPDEST JUMPDEST PUSH2 0xF3D DUP9 DUP3 DUP10 ADD PUSH2 0xE40 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF60 JUMPI PUSH2 0xF5F PUSH2 0xDC5 JUMP JUMPDEST JUMPDEST PUSH2 0xF6C DUP9 DUP3 DUP10 ADD PUSH2 0xE95 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0xF84 DUP2 PUSH2 0xDE8 JUMP JUMPDEST DUP2 EQ PUSH2 0xF8E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF9F DUP2 PUSH2 0xF7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFB7 DUP2 PUSH2 0xFA5 JUMP JUMPDEST DUP2 EQ PUSH2 0xFC1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFD2 DUP2 PUSH2 0xFAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFEF JUMPI PUSH2 0xFEE PUSH2 0xDC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFFC DUP7 DUP3 DUP8 ADD PUSH2 0xE20 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x100D DUP7 DUP3 DUP8 ADD PUSH2 0xF91 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x101E DUP7 DUP3 DUP8 ADD PUSH2 0xFC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH2 0x1032 DUP3 PUSH2 0xDC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1042 DUP2 PUSH2 0x1028 JUMP JUMPDEST DUP2 EQ PUSH2 0x104C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x105D DUP2 PUSH2 0x1039 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1079 JUMPI PUSH2 0x1078 PUSH2 0xDC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1086 DUP6 DUP3 DUP7 ADD PUSH2 0x104F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1097 DUP6 DUP3 DUP7 ADD PUSH2 0xFC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x10AA DUP2 PUSH2 0xDE8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10C3 PUSH0 DUP4 ADD DUP5 PUSH2 0x10A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x10E1 JUMPI PUSH2 0x10E0 PUSH2 0xDC1 JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10FE JUMPI PUSH2 0x10FD PUSH2 0xDC5 JUMP JUMPDEST JUMPDEST PUSH2 0x110A DUP8 DUP3 DUP9 ADD PUSH2 0xE40 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x112D JUMPI PUSH2 0x112C PUSH2 0xDC5 JUMP JUMPDEST JUMPDEST PUSH2 0x1139 DUP8 DUP3 DUP9 ADD PUSH2 0xE95 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x115C JUMPI PUSH2 0x115B PUSH2 0xDC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1169 DUP5 DUP3 DUP6 ADD PUSH2 0xF91 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6C656E6774682D6D69736D617463680000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11B6 PUSH1 0xF DUP4 PUSH2 0x1172 JUMP JUMPDEST SWAP2 POP PUSH2 0x11C1 DUP3 PUSH2 0x1182 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11E3 DUP2 PUSH2 0x11AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x124E DUP3 PUSH2 0xFA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1259 DUP4 PUSH2 0xFA5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1271 JUMPI PUSH2 0x1270 PUSH2 0x1217 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1280 DUP2 PUSH2 0xFA5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1299 PUSH0 DUP4 ADD DUP6 PUSH2 0x1277 JUMP JUMPDEST PUSH2 0x12A6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1277 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12C0 PUSH0 DUP4 ADD DUP5 PUSH2 0x1277 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x696E73756666696369656E742D65746800000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12FA PUSH1 0x10 DUP4 PUSH2 0x1172 JUMP JUMPDEST SWAP2 POP PUSH2 0x1305 DUP3 PUSH2 0x12C6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1327 DUP2 PUSH2 0x12EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1346 PUSH0 DUP4 PUSH2 0x132E JUMP JUMPDEST SWAP2 POP PUSH2 0x1351 DUP3 PUSH2 0x1338 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1365 DUP3 PUSH2 0x133B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x77697468647261772D6661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13A3 PUSH1 0xF DUP4 PUSH2 0x1172 JUMP JUMPDEST SWAP2 POP PUSH2 0x13AE DUP3 PUSH2 0x136F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13D0 DUP2 PUSH2 0x1397 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x13E5 DUP2 PUSH2 0xFAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1400 JUMPI PUSH2 0x13FF PUSH2 0xDC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x140D DUP5 DUP3 DUP6 ADD PUSH2 0x13D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x696E73756666696369656E742D636F6E74726163742D62616C616E6365000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x144A PUSH1 0x1D DUP4 PUSH2 0x1172 JUMP JUMPDEST SWAP2 POP PUSH2 0x1455 DUP3 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1477 DUP2 PUSH2 0x143E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x76616C75652D6D69736D61746368000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14B2 PUSH1 0xE DUP4 PUSH2 0x1172 JUMP JUMPDEST SWAP2 POP PUSH2 0x14BD DUP3 PUSH2 0x147E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14DF DUP2 PUSH2 0x14A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6574682D73656E642D6661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x151A PUSH1 0xF DUP4 PUSH2 0x1172 JUMP JUMPDEST SWAP2 POP PUSH2 0x1525 DUP3 PUSH2 0x14E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1547 DUP2 PUSH2 0x150E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1582 PUSH1 0x1F DUP4 PUSH2 0x1172 JUMP JUMPDEST SWAP2 POP PUSH2 0x158D DUP3 PUSH2 0x154E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15AF DUP2 PUSH2 0x1576 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x15C9 PUSH0 DUP4 ADD DUP7 PUSH2 0x10A1 JUMP JUMPDEST PUSH2 0x15D6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x10A1 JUMP JUMPDEST PUSH2 0x15E3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1277 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x15FE PUSH0 DUP4 ADD DUP6 PUSH2 0x10A1 JUMP JUMPDEST PUSH2 0x160B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1277 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0xBA 0xD7 LT DUP15 0xD2 0xB5 PUSH2 0x543A RETURNDATASIZE 0xE5 0xB3 DIV CALLCODE CALLDATACOPY PUSH19 0x9FC7BD22663295E568F357442CD564736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "478:4064:9:-:0;;;926:37;;;;;;;;;;948:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:4;1821:7;:22;;;;478:4064:9;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:10:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;478:4064:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1306": {
									"entryPoint": null,
									"id": 1306,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1310": {
									"entryPoint": null,
									"id": 1310,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_802": {
									"entryPoint": 3359,
									"id": 802,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2904,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_856": {
									"entryPoint": 3514,
									"id": 856,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_290": {
									"entryPoint": 2895,
									"id": 290,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_282": {
									"entryPoint": 2686,
									"id": 282,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3166,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@bulkTransferERC20FromContract_1227": {
									"entryPoint": 1397,
									"id": 1227,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@bulkTransferERC20_1121": {
									"entryPoint": 427,
									"id": 1121,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@bulkTransferETH_1034": {
									"entryPoint": 1991,
									"id": 1034,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 1358,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1339,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_452": {
									"entryPoint": 2765,
									"id": 452,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_425": {
									"entryPoint": 3039,
									"id": 425,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 2554,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawERC20_1302": {
									"entryPoint": 824,
									"id": 1302,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@withdrawETH_1270": {
									"entryPoint": 997,
									"id": 1270,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3985,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 4175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 3648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 3733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_contract$_IERC20_$380": {
									"entryPoint": 3616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 5079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_uint256": {
									"entryPoint": 4195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 4297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_contract$_IERC20_$380t_addresst_uint256": {
									"entryPoint": 4056,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_contract$_IERC20_$380t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 3818,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5099,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_32f2af800164601bd8ed4b85bf247cb53750152b9e1fc05cbced958558411142_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4846,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8b43d355e049cab583890bb85706334dd851ea9c087cc2a88fabf6a4dae5875e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5015,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc88e57dc80be025bfe09afbca2cd1f527cb24e266aaafb93419be205c17fd16_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5286,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d63fdbed4427467445645d3049f905a5792b7d28d81f2510cffd5333dc77e0e4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5182,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_de8e3464a6f953d7c88413d1e5ad8b13ba277be3f42ee326a98c5cbafed36f1d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5494,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f12c488a23a22a5ef0e34ac4c3b8a552738eb834b777e83839a622bf4d805954_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5390,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5558,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5611,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_32f2af800164601bd8ed4b85bf247cb53750152b9e1fc05cbced958558411142__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4880,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8b43d355e049cab583890bb85706334dd851ea9c087cc2a88fabf6a4dae5875e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5049,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc88e57dc80be025bfe09afbca2cd1f527cb24e266aaafb93419be205c17fd16__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5320,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d63fdbed4427467445645d3049f905a5792b7d28d81f2510cffd5333dc77e0e4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5216,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_de8e3464a6f953d7c88413d1e5ad8b13ba277be3f42ee326a98c5cbafed36f1d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f12c488a23a22a5ef0e34ac4c3b8a552738eb834b777e83839a622bf4d805954__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4742,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4910,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 4136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$380": {
									"entryPoint": 3577,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3529,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4005,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4631,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4586,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 3640,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 3636,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 3644,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 3525,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3521,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_32f2af800164601bd8ed4b85bf247cb53750152b9e1fc05cbced958558411142": {
									"entryPoint": 4806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8b43d355e049cab583890bb85706334dd851ea9c087cc2a88fabf6a4dae5875e": {
									"entryPoint": 4975,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 4920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc88e57dc80be025bfe09afbca2cd1f527cb24e266aaafb93419be205c17fd16": {
									"entryPoint": 5246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d63fdbed4427467445645d3049f905a5792b7d28d81f2510cffd5333dc77e0e4": {
									"entryPoint": 5142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_de8e3464a6f953d7c88413d1e5ad8b13ba277be3f42ee326a98c5cbafed36f1d": {
									"entryPoint": 4482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 5454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f12c488a23a22a5ef0e34ac4c3b8a552738eb834b777e83839a622bf4d805954": {
									"entryPoint": 5350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3963,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 4153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$380": {
									"entryPoint": 3594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4014,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:18088:10",
										"nodeType": "YulBlock",
										"src": "0:18088:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:81:10",
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nativeSrc": "389:65:10",
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:10",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nativeSrc": "400:54:10",
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nativeSrc": "511:51:10",
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nativeSrc": "521:35:10",
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nativeSrc": "532:24:10",
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:10",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:10",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nativeSrc": "627:51:10",
													"nodeType": "YulBlock",
													"src": "627:51:10",
													"statements": [
														{
															"nativeSrc": "637:35:10",
															"nodeType": "YulAssignment",
															"src": "637:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "666:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "666:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "648:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "648:17:10"
																},
																"nativeSrc": "648:24:10",
																"nodeType": "YulFunctionCall",
																"src": "648:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "637:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "637:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$380",
												"nativeSrc": "568:110:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "609:5:10",
														"nodeType": "YulTypedName",
														"src": "609:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "619:7:10",
														"nodeType": "YulTypedName",
														"src": "619:7:10",
														"type": ""
													}
												],
												"src": "568:110:10"
											},
											{
												"body": {
													"nativeSrc": "741:93:10",
													"nodeType": "YulBlock",
													"src": "741:93:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "812:16:10",
																"nodeType": "YulBlock",
																"src": "812:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "821:1:10",
																					"nodeType": "YulLiteral",
																					"src": "821:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "824:1:10",
																					"nodeType": "YulLiteral",
																					"src": "824:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "814:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "814:6:10"
																			},
																			"nativeSrc": "814:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "814:12:10"
																		},
																		"nativeSrc": "814:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "814:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "764:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "764:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "803:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "803:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$380",
																					"nativeSrc": "771:31:10",
																					"nodeType": "YulIdentifier",
																					"src": "771:31:10"
																				},
																				"nativeSrc": "771:38:10",
																				"nodeType": "YulFunctionCall",
																				"src": "771:38:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "761:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "761:2:10"
																		},
																		"nativeSrc": "761:49:10",
																		"nodeType": "YulFunctionCall",
																		"src": "761:49:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "754:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "754:6:10"
																},
																"nativeSrc": "754:57:10",
																"nodeType": "YulFunctionCall",
																"src": "754:57:10"
															},
															"nativeSrc": "751:77:10",
															"nodeType": "YulIf",
															"src": "751:77:10"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$380",
												"nativeSrc": "684:150:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "734:5:10",
														"nodeType": "YulTypedName",
														"src": "734:5:10",
														"type": ""
													}
												],
												"src": "684:150:10"
											},
											{
												"body": {
													"nativeSrc": "906:101:10",
													"nodeType": "YulBlock",
													"src": "906:101:10",
													"statements": [
														{
															"nativeSrc": "916:29:10",
															"nodeType": "YulAssignment",
															"src": "916:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "938:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "938:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "925:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "925:12:10"
																},
																"nativeSrc": "925:20:10",
																"nodeType": "YulFunctionCall",
																"src": "925:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "916:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "916:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "995:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "995:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$380",
																	"nativeSrc": "954:40:10",
																	"nodeType": "YulIdentifier",
																	"src": "954:40:10"
																},
																"nativeSrc": "954:47:10",
																"nodeType": "YulFunctionCall",
																"src": "954:47:10"
															},
															"nativeSrc": "954:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "954:47:10"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$380",
												"nativeSrc": "840:167:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "884:6:10",
														"nodeType": "YulTypedName",
														"src": "884:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "892:3:10",
														"nodeType": "YulTypedName",
														"src": "892:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "900:5:10",
														"nodeType": "YulTypedName",
														"src": "900:5:10",
														"type": ""
													}
												],
												"src": "840:167:10"
											},
											{
												"body": {
													"nativeSrc": "1102:28:10",
													"nodeType": "YulBlock",
													"src": "1102:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1119:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1119:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1122:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1122:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1112:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1112:6:10"
																},
																"nativeSrc": "1112:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1112:12:10"
															},
															"nativeSrc": "1112:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1112:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "1013:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1013:117:10"
											},
											{
												"body": {
													"nativeSrc": "1225:28:10",
													"nodeType": "YulBlock",
													"src": "1225:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1242:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1242:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1245:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1245:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1235:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1235:6:10"
																},
																"nativeSrc": "1235:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1235:12:10"
															},
															"nativeSrc": "1235:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1235:12:10"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "1136:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1136:117:10"
											},
											{
												"body": {
													"nativeSrc": "1348:28:10",
													"nodeType": "YulBlock",
													"src": "1348:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1365:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1365:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1368:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1368:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1358:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1358:6:10"
																},
																"nativeSrc": "1358:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1358:12:10"
															},
															"nativeSrc": "1358:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1358:12:10"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "1259:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1259:117:10"
											},
											{
												"body": {
													"nativeSrc": "1489:478:10",
													"nodeType": "YulBlock",
													"src": "1489:478:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1538:83:10",
																"nodeType": "YulBlock",
																"src": "1538:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "1540:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1540:77:10"
																			},
																			"nativeSrc": "1540:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1540:79:10"
																		},
																		"nativeSrc": "1540:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1540:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "1517:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1517:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1525:4:10",
																						"nodeType": "YulLiteral",
																						"src": "1525:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1513:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1513:3:10"
																				},
																				"nativeSrc": "1513:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1513:17:10"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "1532:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1532:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1509:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1509:3:10"
																		},
																		"nativeSrc": "1509:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1509:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1502:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1502:6:10"
																},
																"nativeSrc": "1502:35:10",
																"nodeType": "YulFunctionCall",
																"src": "1502:35:10"
															},
															"nativeSrc": "1499:122:10",
															"nodeType": "YulIf",
															"src": "1499:122:10"
														},
														{
															"nativeSrc": "1630:30:10",
															"nodeType": "YulAssignment",
															"src": "1630:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1653:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1653:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1640:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1640:12:10"
																},
																"nativeSrc": "1640:20:10",
																"nodeType": "YulFunctionCall",
																"src": "1640:20:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1630:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1630:6:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1703:83:10",
																"nodeType": "YulBlock",
																"src": "1703:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "1705:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1705:77:10"
																			},
																			"nativeSrc": "1705:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1705:79:10"
																		},
																		"nativeSrc": "1705:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1705:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1675:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1675:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1683:18:10",
																		"nodeType": "YulLiteral",
																		"src": "1683:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1672:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1672:2:10"
																},
																"nativeSrc": "1672:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1672:30:10"
															},
															"nativeSrc": "1669:117:10",
															"nodeType": "YulIf",
															"src": "1669:117:10"
														},
														{
															"nativeSrc": "1795:29:10",
															"nodeType": "YulAssignment",
															"src": "1795:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1811:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1811:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1819:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1819:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1807:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1807:3:10"
																},
																"nativeSrc": "1807:17:10",
																"nodeType": "YulFunctionCall",
																"src": "1807:17:10"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "1795:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "1795:8:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1878:83:10",
																"nodeType": "YulBlock",
																"src": "1878:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "1880:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1880:77:10"
																			},
																			"nativeSrc": "1880:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1880:79:10"
																		},
																		"nativeSrc": "1880:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1880:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "1843:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "1843:8:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "1857:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1857:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1865:4:10",
																						"nodeType": "YulLiteral",
																						"src": "1865:4:10",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "1853:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1853:3:10"
																				},
																				"nativeSrc": "1853:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1853:17:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1839:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1839:3:10"
																		},
																		"nativeSrc": "1839:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1839:32:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "1873:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1873:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1836:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1836:2:10"
																},
																"nativeSrc": "1836:41:10",
																"nodeType": "YulFunctionCall",
																"src": "1836:41:10"
															},
															"nativeSrc": "1833:128:10",
															"nodeType": "YulIf",
															"src": "1833:128:10"
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
												"nativeSrc": "1399:568:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1456:6:10",
														"nodeType": "YulTypedName",
														"src": "1456:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1464:3:10",
														"nodeType": "YulTypedName",
														"src": "1464:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "1472:8:10",
														"nodeType": "YulTypedName",
														"src": "1472:8:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1482:6:10",
														"nodeType": "YulTypedName",
														"src": "1482:6:10",
														"type": ""
													}
												],
												"src": "1399:568:10"
											},
											{
												"body": {
													"nativeSrc": "2080:478:10",
													"nodeType": "YulBlock",
													"src": "2080:478:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2129:83:10",
																"nodeType": "YulBlock",
																"src": "2129:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2131:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2131:77:10"
																			},
																			"nativeSrc": "2131:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2131:79:10"
																		},
																		"nativeSrc": "2131:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2131:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2108:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2108:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2116:4:10",
																						"nodeType": "YulLiteral",
																						"src": "2116:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2104:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2104:3:10"
																				},
																				"nativeSrc": "2104:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2104:17:10"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2123:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2123:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2100:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2100:3:10"
																		},
																		"nativeSrc": "2100:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2100:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2093:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2093:6:10"
																},
																"nativeSrc": "2093:35:10",
																"nodeType": "YulFunctionCall",
																"src": "2093:35:10"
															},
															"nativeSrc": "2090:122:10",
															"nodeType": "YulIf",
															"src": "2090:122:10"
														},
														{
															"nativeSrc": "2221:30:10",
															"nodeType": "YulAssignment",
															"src": "2221:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2244:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2244:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2231:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2231:12:10"
																},
																"nativeSrc": "2231:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2231:20:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2221:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2221:6:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2294:83:10",
																"nodeType": "YulBlock",
																"src": "2294:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "2296:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2296:77:10"
																			},
																			"nativeSrc": "2296:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2296:79:10"
																		},
																		"nativeSrc": "2296:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2296:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2266:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2266:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2274:18:10",
																		"nodeType": "YulLiteral",
																		"src": "2274:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2263:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2263:2:10"
																},
																"nativeSrc": "2263:30:10",
																"nodeType": "YulFunctionCall",
																"src": "2263:30:10"
															},
															"nativeSrc": "2260:117:10",
															"nodeType": "YulIf",
															"src": "2260:117:10"
														},
														{
															"nativeSrc": "2386:29:10",
															"nodeType": "YulAssignment",
															"src": "2386:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2402:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2402:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2410:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2410:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2398:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2398:3:10"
																},
																"nativeSrc": "2398:17:10",
																"nodeType": "YulFunctionCall",
																"src": "2398:17:10"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "2386:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "2386:8:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2469:83:10",
																"nodeType": "YulBlock",
																"src": "2469:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "2471:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2471:77:10"
																			},
																			"nativeSrc": "2471:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2471:79:10"
																		},
																		"nativeSrc": "2471:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2471:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "2434:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "2434:8:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "2448:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2448:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2456:4:10",
																						"nodeType": "YulLiteral",
																						"src": "2456:4:10",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "2444:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2444:3:10"
																				},
																				"nativeSrc": "2444:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2444:17:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2430:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2430:3:10"
																		},
																		"nativeSrc": "2430:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2430:32:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2464:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2464:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2427:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2427:2:10"
																},
																"nativeSrc": "2427:41:10",
																"nodeType": "YulFunctionCall",
																"src": "2427:41:10"
															},
															"nativeSrc": "2424:128:10",
															"nodeType": "YulIf",
															"src": "2424:128:10"
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "1990:568:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2047:6:10",
														"nodeType": "YulTypedName",
														"src": "2047:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2055:3:10",
														"nodeType": "YulTypedName",
														"src": "2055:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "2063:8:10",
														"nodeType": "YulTypedName",
														"src": "2063:8:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2073:6:10",
														"nodeType": "YulTypedName",
														"src": "2073:6:10",
														"type": ""
													}
												],
												"src": "1990:568:10"
											},
											{
												"body": {
													"nativeSrc": "2748:923:10",
													"nodeType": "YulBlock",
													"src": "2748:923:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2794:83:10",
																"nodeType": "YulBlock",
																"src": "2794:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2796:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2796:77:10"
																			},
																			"nativeSrc": "2796:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2796:79:10"
																		},
																		"nativeSrc": "2796:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2796:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2769:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2769:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2778:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2778:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2765:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2765:3:10"
																		},
																		"nativeSrc": "2765:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2765:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2790:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2790:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2761:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2761:3:10"
																},
																"nativeSrc": "2761:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2761:32:10"
															},
															"nativeSrc": "2758:119:10",
															"nodeType": "YulIf",
															"src": "2758:119:10"
														},
														{
															"nativeSrc": "2887:131:10",
															"nodeType": "YulBlock",
															"src": "2887:131:10",
															"statements": [
																{
																	"nativeSrc": "2902:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2902:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2916:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2916:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2906:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2906:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2931:77:10",
																	"nodeType": "YulAssignment",
																	"src": "2931:77:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2980:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2980:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2991:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2991:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2976:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2976:3:10"
																				},
																				"nativeSrc": "2976:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2976:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3000:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3000:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$380",
																			"nativeSrc": "2941:34:10",
																			"nodeType": "YulIdentifier",
																			"src": "2941:34:10"
																		},
																		"nativeSrc": "2941:67:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2941:67:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2931:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2931:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3028:313:10",
															"nodeType": "YulBlock",
															"src": "3028:313:10",
															"statements": [
																{
																	"nativeSrc": "3043:46:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3043:46:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3074:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3074:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3085:2:10",
																						"nodeType": "YulLiteral",
																						"src": "3085:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3070:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3070:3:10"
																				},
																				"nativeSrc": "3070:18:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3070:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "3057:12:10",
																			"nodeType": "YulIdentifier",
																			"src": "3057:12:10"
																		},
																		"nativeSrc": "3057:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3057:32:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3047:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3047:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3136:83:10",
																		"nodeType": "YulBlock",
																		"src": "3136:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3138:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "3138:77:10"
																					},
																					"nativeSrc": "3138:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "3138:79:10"
																				},
																				"nativeSrc": "3138:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "3138:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3108:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3108:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3116:18:10",
																				"nodeType": "YulLiteral",
																				"src": "3116:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3105:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3105:2:10"
																		},
																		"nativeSrc": "3105:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3105:30:10"
																	},
																	"nativeSrc": "3102:117:10",
																	"nodeType": "YulIf",
																	"src": "3102:117:10"
																},
																{
																	"nativeSrc": "3233:98:10",
																	"nodeType": "YulAssignment",
																	"src": "3233:98:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3303:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3303:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3314:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3314:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3299:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3299:3:10"
																				},
																				"nativeSrc": "3299:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3299:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3323:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3323:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
																			"nativeSrc": "3251:47:10",
																			"nodeType": "YulIdentifier",
																			"src": "3251:47:10"
																		},
																		"nativeSrc": "3251:80:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3251:80:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3233:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3233:6:10"
																		},
																		{
																			"name": "value2",
																			"nativeSrc": "3241:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3241:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3351:313:10",
															"nodeType": "YulBlock",
															"src": "3351:313:10",
															"statements": [
																{
																	"nativeSrc": "3366:46:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3366:46:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3397:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3397:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3408:2:10",
																						"nodeType": "YulLiteral",
																						"src": "3408:2:10",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3393:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3393:3:10"
																				},
																				"nativeSrc": "3393:18:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3393:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "3380:12:10",
																			"nodeType": "YulIdentifier",
																			"src": "3380:12:10"
																		},
																		"nativeSrc": "3380:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3380:32:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3370:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3370:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3459:83:10",
																		"nodeType": "YulBlock",
																		"src": "3459:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3461:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "3461:77:10"
																					},
																					"nativeSrc": "3461:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "3461:79:10"
																				},
																				"nativeSrc": "3461:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "3461:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3431:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3431:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3439:18:10",
																				"nodeType": "YulLiteral",
																				"src": "3439:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3428:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3428:2:10"
																		},
																		"nativeSrc": "3428:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3428:30:10"
																	},
																	"nativeSrc": "3425:117:10",
																	"nodeType": "YulIf",
																	"src": "3425:117:10"
																},
																{
																	"nativeSrc": "3556:98:10",
																	"nodeType": "YulAssignment",
																	"src": "3556:98:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3626:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3626:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3637:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3637:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3622:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3622:3:10"
																				},
																				"nativeSrc": "3622:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3622:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3646:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3646:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
																			"nativeSrc": "3574:47:10",
																			"nodeType": "YulIdentifier",
																			"src": "3574:47:10"
																		},
																		"nativeSrc": "3574:80:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3574:80:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "3556:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3556:6:10"
																		},
																		{
																			"name": "value4",
																			"nativeSrc": "3564:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3564:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$380t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "2564:1107:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2686:9:10",
														"nodeType": "YulTypedName",
														"src": "2686:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2697:7:10",
														"nodeType": "YulTypedName",
														"src": "2697:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2709:6:10",
														"nodeType": "YulTypedName",
														"src": "2709:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2717:6:10",
														"nodeType": "YulTypedName",
														"src": "2717:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2725:6:10",
														"nodeType": "YulTypedName",
														"src": "2725:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2733:6:10",
														"nodeType": "YulTypedName",
														"src": "2733:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2741:6:10",
														"nodeType": "YulTypedName",
														"src": "2741:6:10",
														"type": ""
													}
												],
												"src": "2564:1107:10"
											},
											{
												"body": {
													"nativeSrc": "3720:79:10",
													"nodeType": "YulBlock",
													"src": "3720:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3777:16:10",
																"nodeType": "YulBlock",
																"src": "3777:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3786:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3786:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3789:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3789:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3779:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3779:6:10"
																			},
																			"nativeSrc": "3779:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3779:12:10"
																		},
																		"nativeSrc": "3779:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3779:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3743:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3743:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3768:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3768:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3750:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "3750:17:10"
																				},
																				"nativeSrc": "3750:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3750:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3740:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3740:2:10"
																		},
																		"nativeSrc": "3740:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3740:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3733:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3733:6:10"
																},
																"nativeSrc": "3733:43:10",
																"nodeType": "YulFunctionCall",
																"src": "3733:43:10"
															},
															"nativeSrc": "3730:63:10",
															"nodeType": "YulIf",
															"src": "3730:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3677:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3713:5:10",
														"nodeType": "YulTypedName",
														"src": "3713:5:10",
														"type": ""
													}
												],
												"src": "3677:122:10"
											},
											{
												"body": {
													"nativeSrc": "3857:87:10",
													"nodeType": "YulBlock",
													"src": "3857:87:10",
													"statements": [
														{
															"nativeSrc": "3867:29:10",
															"nodeType": "YulAssignment",
															"src": "3867:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3889:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3889:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3876:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3876:12:10"
																},
																"nativeSrc": "3876:20:10",
																"nodeType": "YulFunctionCall",
																"src": "3876:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3867:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3867:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3932:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3932:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3905:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "3905:26:10"
																},
																"nativeSrc": "3905:33:10",
																"nodeType": "YulFunctionCall",
																"src": "3905:33:10"
															},
															"nativeSrc": "3905:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "3905:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3805:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3835:6:10",
														"nodeType": "YulTypedName",
														"src": "3835:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3843:3:10",
														"nodeType": "YulTypedName",
														"src": "3843:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3851:5:10",
														"nodeType": "YulTypedName",
														"src": "3851:5:10",
														"type": ""
													}
												],
												"src": "3805:139:10"
											},
											{
												"body": {
													"nativeSrc": "3995:32:10",
													"nodeType": "YulBlock",
													"src": "3995:32:10",
													"statements": [
														{
															"nativeSrc": "4005:16:10",
															"nodeType": "YulAssignment",
															"src": "4005:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "4016:5:10",
																"nodeType": "YulIdentifier",
																"src": "4016:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4005:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "4005:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3950:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3977:5:10",
														"nodeType": "YulTypedName",
														"src": "3977:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3987:7:10",
														"nodeType": "YulTypedName",
														"src": "3987:7:10",
														"type": ""
													}
												],
												"src": "3950:77:10"
											},
											{
												"body": {
													"nativeSrc": "4076:79:10",
													"nodeType": "YulBlock",
													"src": "4076:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4133:16:10",
																"nodeType": "YulBlock",
																"src": "4133:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4142:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4142:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4145:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4145:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4135:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4135:6:10"
																			},
																			"nativeSrc": "4135:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4135:12:10"
																		},
																		"nativeSrc": "4135:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4135:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4099:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4099:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4124:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4124:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "4106:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "4106:17:10"
																				},
																				"nativeSrc": "4106:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4106:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4096:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "4096:2:10"
																		},
																		"nativeSrc": "4096:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4096:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4089:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4089:6:10"
																},
																"nativeSrc": "4089:43:10",
																"nodeType": "YulFunctionCall",
																"src": "4089:43:10"
															},
															"nativeSrc": "4086:63:10",
															"nodeType": "YulIf",
															"src": "4086:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "4033:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4069:5:10",
														"nodeType": "YulTypedName",
														"src": "4069:5:10",
														"type": ""
													}
												],
												"src": "4033:122:10"
											},
											{
												"body": {
													"nativeSrc": "4213:87:10",
													"nodeType": "YulBlock",
													"src": "4213:87:10",
													"statements": [
														{
															"nativeSrc": "4223:29:10",
															"nodeType": "YulAssignment",
															"src": "4223:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4245:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4245:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4232:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "4232:12:10"
																},
																"nativeSrc": "4232:20:10",
																"nodeType": "YulFunctionCall",
																"src": "4232:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4223:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4223:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4288:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4288:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "4261:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "4261:26:10"
																},
																"nativeSrc": "4261:33:10",
																"nodeType": "YulFunctionCall",
																"src": "4261:33:10"
															},
															"nativeSrc": "4261:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "4261:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "4161:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4191:6:10",
														"nodeType": "YulTypedName",
														"src": "4191:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4199:3:10",
														"nodeType": "YulTypedName",
														"src": "4199:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4207:5:10",
														"nodeType": "YulTypedName",
														"src": "4207:5:10",
														"type": ""
													}
												],
												"src": "4161:139:10"
											},
											{
												"body": {
													"nativeSrc": "4420:533:10",
													"nodeType": "YulBlock",
													"src": "4420:533:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4466:83:10",
																"nodeType": "YulBlock",
																"src": "4466:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4468:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4468:77:10"
																			},
																			"nativeSrc": "4468:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4468:79:10"
																		},
																		"nativeSrc": "4468:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4468:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4441:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4441:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4450:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4450:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4437:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4437:3:10"
																		},
																		"nativeSrc": "4437:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4437:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4462:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4462:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4433:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4433:3:10"
																},
																"nativeSrc": "4433:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4433:32:10"
															},
															"nativeSrc": "4430:119:10",
															"nodeType": "YulIf",
															"src": "4430:119:10"
														},
														{
															"nativeSrc": "4559:131:10",
															"nodeType": "YulBlock",
															"src": "4559:131:10",
															"statements": [
																{
																	"nativeSrc": "4574:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4574:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4588:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4588:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4578:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4578:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4603:77:10",
																	"nodeType": "YulAssignment",
																	"src": "4603:77:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4652:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4652:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4663:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4663:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4648:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4648:3:10"
																				},
																				"nativeSrc": "4648:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4648:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4672:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4672:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$380",
																			"nativeSrc": "4613:34:10",
																			"nodeType": "YulIdentifier",
																			"src": "4613:34:10"
																		},
																		"nativeSrc": "4613:67:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4613:67:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4603:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4603:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4700:118:10",
															"nodeType": "YulBlock",
															"src": "4700:118:10",
															"statements": [
																{
																	"nativeSrc": "4715:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4715:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4729:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4729:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4719:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4719:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4745:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4745:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4780:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4780:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4791:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4791:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4776:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4776:3:10"
																				},
																				"nativeSrc": "4776:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4776:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4800:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4800:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4755:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4755:20:10"
																		},
																		"nativeSrc": "4755:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4755:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4745:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4745:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4828:118:10",
															"nodeType": "YulBlock",
															"src": "4828:118:10",
															"statements": [
																{
																	"nativeSrc": "4843:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4843:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4857:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4857:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4847:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4847:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4873:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4873:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4908:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4908:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4919:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4919:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4904:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4904:3:10"
																				},
																				"nativeSrc": "4904:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4904:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4928:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4928:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4883:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4883:20:10"
																		},
																		"nativeSrc": "4883:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4883:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4873:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4873:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$380t_addresst_uint256",
												"nativeSrc": "4306:647:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4374:9:10",
														"nodeType": "YulTypedName",
														"src": "4374:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4385:7:10",
														"nodeType": "YulTypedName",
														"src": "4385:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4397:6:10",
														"nodeType": "YulTypedName",
														"src": "4397:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4405:6:10",
														"nodeType": "YulTypedName",
														"src": "4405:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4413:6:10",
														"nodeType": "YulTypedName",
														"src": "4413:6:10",
														"type": ""
													}
												],
												"src": "4306:647:10"
											},
											{
												"body": {
													"nativeSrc": "5012:51:10",
													"nodeType": "YulBlock",
													"src": "5012:51:10",
													"statements": [
														{
															"nativeSrc": "5022:35:10",
															"nodeType": "YulAssignment",
															"src": "5022:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5051:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5051:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5033:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "5033:17:10"
																},
																"nativeSrc": "5033:24:10",
																"nodeType": "YulFunctionCall",
																"src": "5033:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5022:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "5022:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "4959:104:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4994:5:10",
														"nodeType": "YulTypedName",
														"src": "4994:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5004:7:10",
														"nodeType": "YulTypedName",
														"src": "5004:7:10",
														"type": ""
													}
												],
												"src": "4959:104:10"
											},
											{
												"body": {
													"nativeSrc": "5120:87:10",
													"nodeType": "YulBlock",
													"src": "5120:87:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5185:16:10",
																"nodeType": "YulBlock",
																"src": "5185:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5194:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5194:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5197:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5197:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5187:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5187:6:10"
																			},
																			"nativeSrc": "5187:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5187:12:10"
																		},
																		"nativeSrc": "5187:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5187:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5143:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5143:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5176:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "5176:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nativeSrc": "5150:25:10",
																					"nodeType": "YulIdentifier",
																					"src": "5150:25:10"
																				},
																				"nativeSrc": "5150:32:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5150:32:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5140:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "5140:2:10"
																		},
																		"nativeSrc": "5140:43:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5140:43:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5133:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5133:6:10"
																},
																"nativeSrc": "5133:51:10",
																"nodeType": "YulFunctionCall",
																"src": "5133:51:10"
															},
															"nativeSrc": "5130:71:10",
															"nodeType": "YulIf",
															"src": "5130:71:10"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nativeSrc": "5069:138:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5113:5:10",
														"nodeType": "YulTypedName",
														"src": "5113:5:10",
														"type": ""
													}
												],
												"src": "5069:138:10"
											},
											{
												"body": {
													"nativeSrc": "5273:95:10",
													"nodeType": "YulBlock",
													"src": "5273:95:10",
													"statements": [
														{
															"nativeSrc": "5283:29:10",
															"nodeType": "YulAssignment",
															"src": "5283:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5305:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5305:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5292:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "5292:12:10"
																},
																"nativeSrc": "5292:20:10",
																"nodeType": "YulFunctionCall",
																"src": "5292:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5283:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "5283:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5356:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5356:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nativeSrc": "5321:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "5321:34:10"
																},
																"nativeSrc": "5321:41:10",
																"nodeType": "YulFunctionCall",
																"src": "5321:41:10"
															},
															"nativeSrc": "5321:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "5321:41:10"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nativeSrc": "5213:155:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5251:6:10",
														"nodeType": "YulTypedName",
														"src": "5251:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5259:3:10",
														"nodeType": "YulTypedName",
														"src": "5259:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5267:5:10",
														"nodeType": "YulTypedName",
														"src": "5267:5:10",
														"type": ""
													}
												],
												"src": "5213:155:10"
											},
											{
												"body": {
													"nativeSrc": "5465:399:10",
													"nodeType": "YulBlock",
													"src": "5465:399:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5511:83:10",
																"nodeType": "YulBlock",
																"src": "5511:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5513:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "5513:77:10"
																			},
																			"nativeSrc": "5513:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5513:79:10"
																		},
																		"nativeSrc": "5513:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5513:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5486:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5486:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5495:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5495:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5482:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5482:3:10"
																		},
																		"nativeSrc": "5482:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5482:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5507:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5507:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5478:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5478:3:10"
																},
																"nativeSrc": "5478:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5478:32:10"
															},
															"nativeSrc": "5475:119:10",
															"nodeType": "YulIf",
															"src": "5475:119:10"
														},
														{
															"nativeSrc": "5604:125:10",
															"nodeType": "YulBlock",
															"src": "5604:125:10",
															"statements": [
																{
																	"nativeSrc": "5619:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5619:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5633:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5633:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5623:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5623:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5648:71:10",
																	"nodeType": "YulAssignment",
																	"src": "5648:71:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5691:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5691:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5702:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5702:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5687:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5687:3:10"
																				},
																				"nativeSrc": "5687:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5687:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5711:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5711:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nativeSrc": "5658:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "5658:28:10"
																		},
																		"nativeSrc": "5658:61:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5658:61:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5648:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5648:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5739:118:10",
															"nodeType": "YulBlock",
															"src": "5739:118:10",
															"statements": [
																{
																	"nativeSrc": "5754:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5754:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5768:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5768:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5758:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5758:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5784:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5784:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5819:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5819:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5830:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5830:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5815:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5815:3:10"
																				},
																				"nativeSrc": "5815:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5815:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5839:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5839:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5794:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5794:20:10"
																		},
																		"nativeSrc": "5794:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5794:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5784:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5784:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_uint256",
												"nativeSrc": "5374:490:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5427:9:10",
														"nodeType": "YulTypedName",
														"src": "5427:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5438:7:10",
														"nodeType": "YulTypedName",
														"src": "5438:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5450:6:10",
														"nodeType": "YulTypedName",
														"src": "5450:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5458:6:10",
														"nodeType": "YulTypedName",
														"src": "5458:6:10",
														"type": ""
													}
												],
												"src": "5374:490:10"
											},
											{
												"body": {
													"nativeSrc": "5935:53:10",
													"nodeType": "YulBlock",
													"src": "5935:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5952:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5952:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5975:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5975:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5957:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "5957:17:10"
																		},
																		"nativeSrc": "5957:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5957:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5945:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5945:6:10"
																},
																"nativeSrc": "5945:37:10",
																"nodeType": "YulFunctionCall",
																"src": "5945:37:10"
															},
															"nativeSrc": "5945:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "5945:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5870:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5923:5:10",
														"nodeType": "YulTypedName",
														"src": "5923:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5930:3:10",
														"nodeType": "YulTypedName",
														"src": "5930:3:10",
														"type": ""
													}
												],
												"src": "5870:118:10"
											},
											{
												"body": {
													"nativeSrc": "6092:124:10",
													"nodeType": "YulBlock",
													"src": "6092:124:10",
													"statements": [
														{
															"nativeSrc": "6102:26:10",
															"nodeType": "YulAssignment",
															"src": "6102:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6114:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6114:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6125:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6125:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6110:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6110:3:10"
																},
																"nativeSrc": "6110:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6110:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6102:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6102:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6182:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6182:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6195:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6195:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6206:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6206:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6191:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6191:3:10"
																		},
																		"nativeSrc": "6191:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6191:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6138:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "6138:43:10"
																},
																"nativeSrc": "6138:71:10",
																"nodeType": "YulFunctionCall",
																"src": "6138:71:10"
															},
															"nativeSrc": "6138:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "6138:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5994:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6064:9:10",
														"nodeType": "YulTypedName",
														"src": "6064:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6076:6:10",
														"nodeType": "YulTypedName",
														"src": "6076:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6087:4:10",
														"nodeType": "YulTypedName",
														"src": "6087:4:10",
														"type": ""
													}
												],
												"src": "5994:222:10"
											},
											{
												"body": {
													"nativeSrc": "6375:781:10",
													"nodeType": "YulBlock",
													"src": "6375:781:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6421:83:10",
																"nodeType": "YulBlock",
																"src": "6421:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6423:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "6423:77:10"
																			},
																			"nativeSrc": "6423:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6423:79:10"
																		},
																		"nativeSrc": "6423:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6423:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6396:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6396:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6405:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6405:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6392:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6392:3:10"
																		},
																		"nativeSrc": "6392:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6392:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6417:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6417:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6388:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6388:3:10"
																},
																"nativeSrc": "6388:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6388:32:10"
															},
															"nativeSrc": "6385:119:10",
															"nodeType": "YulIf",
															"src": "6385:119:10"
														},
														{
															"nativeSrc": "6514:312:10",
															"nodeType": "YulBlock",
															"src": "6514:312:10",
															"statements": [
																{
																	"nativeSrc": "6529:45:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6529:45:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6560:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6560:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6571:1:10",
																						"nodeType": "YulLiteral",
																						"src": "6571:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6556:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6556:3:10"
																				},
																				"nativeSrc": "6556:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6556:17:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "6543:12:10",
																			"nodeType": "YulIdentifier",
																			"src": "6543:12:10"
																		},
																		"nativeSrc": "6543:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6543:31:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6533:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6533:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "6621:83:10",
																		"nodeType": "YulBlock",
																		"src": "6621:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "6623:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "6623:77:10"
																					},
																					"nativeSrc": "6623:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6623:79:10"
																				},
																				"nativeSrc": "6623:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "6623:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6593:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6593:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6601:18:10",
																				"nodeType": "YulLiteral",
																				"src": "6601:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6590:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "6590:2:10"
																		},
																		"nativeSrc": "6590:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6590:30:10"
																	},
																	"nativeSrc": "6587:117:10",
																	"nodeType": "YulIf",
																	"src": "6587:117:10"
																},
																{
																	"nativeSrc": "6718:98:10",
																	"nodeType": "YulAssignment",
																	"src": "6718:98:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6788:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6788:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6799:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6799:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6784:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6784:3:10"
																				},
																				"nativeSrc": "6784:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6784:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6808:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6808:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
																			"nativeSrc": "6736:47:10",
																			"nodeType": "YulIdentifier",
																			"src": "6736:47:10"
																		},
																		"nativeSrc": "6736:80:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6736:80:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6718:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6718:6:10"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "6726:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6726:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6836:313:10",
															"nodeType": "YulBlock",
															"src": "6836:313:10",
															"statements": [
																{
																	"nativeSrc": "6851:46:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6851:46:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6882:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6882:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6893:2:10",
																						"nodeType": "YulLiteral",
																						"src": "6893:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6878:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6878:3:10"
																				},
																				"nativeSrc": "6878:18:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6878:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "6865:12:10",
																			"nodeType": "YulIdentifier",
																			"src": "6865:12:10"
																		},
																		"nativeSrc": "6865:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6865:32:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6855:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6855:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "6944:83:10",
																		"nodeType": "YulBlock",
																		"src": "6944:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "6946:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "6946:77:10"
																					},
																					"nativeSrc": "6946:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6946:79:10"
																				},
																				"nativeSrc": "6946:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "6946:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6916:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6916:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6924:18:10",
																				"nodeType": "YulLiteral",
																				"src": "6924:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6913:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "6913:2:10"
																		},
																		"nativeSrc": "6913:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6913:30:10"
																	},
																	"nativeSrc": "6910:117:10",
																	"nodeType": "YulIf",
																	"src": "6910:117:10"
																},
																{
																	"nativeSrc": "7041:98:10",
																	"nodeType": "YulAssignment",
																	"src": "7041:98:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7111:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7111:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7122:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7122:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7107:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7107:3:10"
																				},
																				"nativeSrc": "7107:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7107:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7131:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7131:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
																			"nativeSrc": "7059:47:10",
																			"nodeType": "YulIdentifier",
																			"src": "7059:47:10"
																		},
																		"nativeSrc": "7059:80:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7059:80:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "7041:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7041:6:10"
																		},
																		{
																			"name": "value3",
																			"nativeSrc": "7049:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7049:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "6222:934:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6321:9:10",
														"nodeType": "YulTypedName",
														"src": "6321:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6332:7:10",
														"nodeType": "YulTypedName",
														"src": "6332:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6344:6:10",
														"nodeType": "YulTypedName",
														"src": "6344:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6352:6:10",
														"nodeType": "YulTypedName",
														"src": "6352:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6360:6:10",
														"nodeType": "YulTypedName",
														"src": "6360:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6368:6:10",
														"nodeType": "YulTypedName",
														"src": "6368:6:10",
														"type": ""
													}
												],
												"src": "6222:934:10"
											},
											{
												"body": {
													"nativeSrc": "7228:263:10",
													"nodeType": "YulBlock",
													"src": "7228:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "7274:83:10",
																"nodeType": "YulBlock",
																"src": "7274:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7276:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "7276:77:10"
																			},
																			"nativeSrc": "7276:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7276:79:10"
																		},
																		"nativeSrc": "7276:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7276:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7249:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7249:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7258:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7258:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7245:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7245:3:10"
																		},
																		"nativeSrc": "7245:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7245:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7270:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7270:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7241:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7241:3:10"
																},
																"nativeSrc": "7241:32:10",
																"nodeType": "YulFunctionCall",
																"src": "7241:32:10"
															},
															"nativeSrc": "7238:119:10",
															"nodeType": "YulIf",
															"src": "7238:119:10"
														},
														{
															"nativeSrc": "7367:117:10",
															"nodeType": "YulBlock",
															"src": "7367:117:10",
															"statements": [
																{
																	"nativeSrc": "7382:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7382:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7396:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7396:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7386:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7386:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7411:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7411:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7446:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7446:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7457:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7457:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7442:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7442:3:10"
																				},
																				"nativeSrc": "7442:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7442:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7466:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7466:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7421:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7421:20:10"
																		},
																		"nativeSrc": "7421:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7421:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7411:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7411:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7162:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7198:9:10",
														"nodeType": "YulTypedName",
														"src": "7198:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7209:7:10",
														"nodeType": "YulTypedName",
														"src": "7209:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7221:6:10",
														"nodeType": "YulTypedName",
														"src": "7221:6:10",
														"type": ""
													}
												],
												"src": "7162:329:10"
											},
											{
												"body": {
													"nativeSrc": "7593:73:10",
													"nodeType": "YulBlock",
													"src": "7593:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7610:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7610:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7615:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7615:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7603:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7603:6:10"
																},
																"nativeSrc": "7603:19:10",
																"nodeType": "YulFunctionCall",
																"src": "7603:19:10"
															},
															"nativeSrc": "7603:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "7603:19:10"
														},
														{
															"nativeSrc": "7631:29:10",
															"nodeType": "YulAssignment",
															"src": "7631:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7650:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7650:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7655:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7655:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7646:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7646:3:10"
																},
																"nativeSrc": "7646:14:10",
																"nodeType": "YulFunctionCall",
																"src": "7646:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7631:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "7631:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7497:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7565:3:10",
														"nodeType": "YulTypedName",
														"src": "7565:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7570:6:10",
														"nodeType": "YulTypedName",
														"src": "7570:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7581:11:10",
														"nodeType": "YulTypedName",
														"src": "7581:11:10",
														"type": ""
													}
												],
												"src": "7497:169:10"
											},
											{
												"body": {
													"nativeSrc": "7778:59:10",
													"nodeType": "YulBlock",
													"src": "7778:59:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7800:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7800:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7808:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7808:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7796:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7796:3:10"
																		},
																		"nativeSrc": "7796:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7796:14:10"
																	},
																	{
																		"hexValue": "6c656e6774682d6d69736d61746368",
																		"kind": "string",
																		"nativeSrc": "7812:17:10",
																		"nodeType": "YulLiteral",
																		"src": "7812:17:10",
																		"type": "",
																		"value": "length-mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7789:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7789:6:10"
																},
																"nativeSrc": "7789:41:10",
																"nodeType": "YulFunctionCall",
																"src": "7789:41:10"
															},
															"nativeSrc": "7789:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "7789:41:10"
														}
													]
												},
												"name": "store_literal_in_memory_de8e3464a6f953d7c88413d1e5ad8b13ba277be3f42ee326a98c5cbafed36f1d",
												"nativeSrc": "7672:165:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7770:6:10",
														"nodeType": "YulTypedName",
														"src": "7770:6:10",
														"type": ""
													}
												],
												"src": "7672:165:10"
											},
											{
												"body": {
													"nativeSrc": "7989:220:10",
													"nodeType": "YulBlock",
													"src": "7989:220:10",
													"statements": [
														{
															"nativeSrc": "7999:74:10",
															"nodeType": "YulAssignment",
															"src": "7999:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8065:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8065:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8070:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8070:2:10",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8006:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "8006:58:10"
																},
																"nativeSrc": "8006:67:10",
																"nodeType": "YulFunctionCall",
																"src": "8006:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7999:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7999:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8171:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8171:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_de8e3464a6f953d7c88413d1e5ad8b13ba277be3f42ee326a98c5cbafed36f1d",
																	"nativeSrc": "8082:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "8082:88:10"
																},
																"nativeSrc": "8082:93:10",
																"nodeType": "YulFunctionCall",
																"src": "8082:93:10"
															},
															"nativeSrc": "8082:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "8082:93:10"
														},
														{
															"nativeSrc": "8184:19:10",
															"nodeType": "YulAssignment",
															"src": "8184:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8195:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8195:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8200:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8200:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8191:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8191:3:10"
																},
																"nativeSrc": "8191:12:10",
																"nodeType": "YulFunctionCall",
																"src": "8191:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8184:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8184:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_de8e3464a6f953d7c88413d1e5ad8b13ba277be3f42ee326a98c5cbafed36f1d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7843:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7977:3:10",
														"nodeType": "YulTypedName",
														"src": "7977:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7985:3:10",
														"nodeType": "YulTypedName",
														"src": "7985:3:10",
														"type": ""
													}
												],
												"src": "7843:366:10"
											},
											{
												"body": {
													"nativeSrc": "8386:248:10",
													"nodeType": "YulBlock",
													"src": "8386:248:10",
													"statements": [
														{
															"nativeSrc": "8396:26:10",
															"nodeType": "YulAssignment",
															"src": "8396:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8408:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8408:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8419:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8419:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8404:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8404:3:10"
																},
																"nativeSrc": "8404:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8404:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8396:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8396:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8443:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8443:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8454:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8454:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8439:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8439:3:10"
																		},
																		"nativeSrc": "8439:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8439:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8462:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "8462:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8468:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8468:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8458:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8458:3:10"
																		},
																		"nativeSrc": "8458:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8458:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8432:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8432:6:10"
																},
																"nativeSrc": "8432:47:10",
																"nodeType": "YulFunctionCall",
																"src": "8432:47:10"
															},
															"nativeSrc": "8432:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "8432:47:10"
														},
														{
															"nativeSrc": "8488:139:10",
															"nodeType": "YulAssignment",
															"src": "8488:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8622:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8622:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_de8e3464a6f953d7c88413d1e5ad8b13ba277be3f42ee326a98c5cbafed36f1d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8496:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "8496:124:10"
																},
																"nativeSrc": "8496:131:10",
																"nodeType": "YulFunctionCall",
																"src": "8496:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8488:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8488:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_de8e3464a6f953d7c88413d1e5ad8b13ba277be3f42ee326a98c5cbafed36f1d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8215:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8366:9:10",
														"nodeType": "YulTypedName",
														"src": "8366:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8381:4:10",
														"nodeType": "YulTypedName",
														"src": "8381:4:10",
														"type": ""
													}
												],
												"src": "8215:419:10"
											},
											{
												"body": {
													"nativeSrc": "8668:152:10",
													"nodeType": "YulBlock",
													"src": "8668:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8685:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8685:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8688:77:10",
																		"nodeType": "YulLiteral",
																		"src": "8688:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8678:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8678:6:10"
																},
																"nativeSrc": "8678:88:10",
																"nodeType": "YulFunctionCall",
																"src": "8678:88:10"
															},
															"nativeSrc": "8678:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "8678:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8782:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8782:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8785:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8785:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8775:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8775:6:10"
																},
																"nativeSrc": "8775:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8775:15:10"
															},
															"nativeSrc": "8775:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "8775:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8806:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8806:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8809:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8809:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8799:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8799:6:10"
																},
																"nativeSrc": "8799:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8799:15:10"
															},
															"nativeSrc": "8799:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "8799:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "8640:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "8640:180:10"
											},
											{
												"body": {
													"nativeSrc": "8854:152:10",
													"nodeType": "YulBlock",
													"src": "8854:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8871:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8871:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8874:77:10",
																		"nodeType": "YulLiteral",
																		"src": "8874:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8864:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8864:6:10"
																},
																"nativeSrc": "8864:88:10",
																"nodeType": "YulFunctionCall",
																"src": "8864:88:10"
															},
															"nativeSrc": "8864:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "8864:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8968:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8968:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8971:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8971:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8961:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8961:6:10"
																},
																"nativeSrc": "8961:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8961:15:10"
															},
															"nativeSrc": "8961:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "8961:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8992:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8992:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8995:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8995:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8985:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8985:6:10"
																},
																"nativeSrc": "8985:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8985:15:10"
															},
															"nativeSrc": "8985:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "8985:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8826:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "8826:180:10"
											},
											{
												"body": {
													"nativeSrc": "9056:147:10",
													"nodeType": "YulBlock",
													"src": "9056:147:10",
													"statements": [
														{
															"nativeSrc": "9066:25:10",
															"nodeType": "YulAssignment",
															"src": "9066:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9089:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9089:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9071:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "9071:17:10"
																},
																"nativeSrc": "9071:20:10",
																"nodeType": "YulFunctionCall",
																"src": "9071:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9066:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "9066:1:10"
																}
															]
														},
														{
															"nativeSrc": "9100:25:10",
															"nodeType": "YulAssignment",
															"src": "9100:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9123:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9123:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9105:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "9105:17:10"
																},
																"nativeSrc": "9105:20:10",
																"nodeType": "YulFunctionCall",
																"src": "9105:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9100:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "9100:1:10"
																}
															]
														},
														{
															"nativeSrc": "9134:16:10",
															"nodeType": "YulAssignment",
															"src": "9134:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9145:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9145:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9148:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9148:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9141:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9141:3:10"
																},
																"nativeSrc": "9141:9:10",
																"nodeType": "YulFunctionCall",
																"src": "9141:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9134:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9134:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9174:22:10",
																"nodeType": "YulBlock",
																"src": "9174:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9176:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "9176:16:10"
																			},
																			"nativeSrc": "9176:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9176:18:10"
																		},
																		"nativeSrc": "9176:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9176:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9166:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9166:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9169:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9169:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9163:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "9163:2:10"
																},
																"nativeSrc": "9163:10:10",
																"nodeType": "YulFunctionCall",
																"src": "9163:10:10"
															},
															"nativeSrc": "9160:36:10",
															"nodeType": "YulIf",
															"src": "9160:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9012:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9043:1:10",
														"nodeType": "YulTypedName",
														"src": "9043:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9046:1:10",
														"nodeType": "YulTypedName",
														"src": "9046:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9052:3:10",
														"nodeType": "YulTypedName",
														"src": "9052:3:10",
														"type": ""
													}
												],
												"src": "9012:191:10"
											},
											{
												"body": {
													"nativeSrc": "9274:53:10",
													"nodeType": "YulBlock",
													"src": "9274:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9291:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9291:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9314:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "9314:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "9296:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "9296:17:10"
																		},
																		"nativeSrc": "9296:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9296:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9284:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9284:6:10"
																},
																"nativeSrc": "9284:37:10",
																"nodeType": "YulFunctionCall",
																"src": "9284:37:10"
															},
															"nativeSrc": "9284:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "9284:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "9209:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9262:5:10",
														"nodeType": "YulTypedName",
														"src": "9262:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9269:3:10",
														"nodeType": "YulTypedName",
														"src": "9269:3:10",
														"type": ""
													}
												],
												"src": "9209:118:10"
											},
											{
												"body": {
													"nativeSrc": "9459:206:10",
													"nodeType": "YulBlock",
													"src": "9459:206:10",
													"statements": [
														{
															"nativeSrc": "9469:26:10",
															"nodeType": "YulAssignment",
															"src": "9469:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9481:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9481:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9492:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9492:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9477:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9477:3:10"
																},
																"nativeSrc": "9477:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9477:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9469:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9469:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9549:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9549:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9562:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9562:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9573:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9573:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9558:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9558:3:10"
																		},
																		"nativeSrc": "9558:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9558:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9505:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9505:43:10"
																},
																"nativeSrc": "9505:71:10",
																"nodeType": "YulFunctionCall",
																"src": "9505:71:10"
															},
															"nativeSrc": "9505:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "9505:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9630:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9630:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9643:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9643:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9654:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9654:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9639:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9639:3:10"
																		},
																		"nativeSrc": "9639:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9639:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9586:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9586:43:10"
																},
																"nativeSrc": "9586:72:10",
																"nodeType": "YulFunctionCall",
																"src": "9586:72:10"
															},
															"nativeSrc": "9586:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "9586:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9333:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9423:9:10",
														"nodeType": "YulTypedName",
														"src": "9423:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9435:6:10",
														"nodeType": "YulTypedName",
														"src": "9435:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9443:6:10",
														"nodeType": "YulTypedName",
														"src": "9443:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9454:4:10",
														"nodeType": "YulTypedName",
														"src": "9454:4:10",
														"type": ""
													}
												],
												"src": "9333:332:10"
											},
											{
												"body": {
													"nativeSrc": "9769:124:10",
													"nodeType": "YulBlock",
													"src": "9769:124:10",
													"statements": [
														{
															"nativeSrc": "9779:26:10",
															"nodeType": "YulAssignment",
															"src": "9779:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9791:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9791:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9802:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9802:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9787:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9787:3:10"
																},
																"nativeSrc": "9787:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9787:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9779:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9779:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9859:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9859:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9872:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9872:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9883:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9883:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9868:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9868:3:10"
																		},
																		"nativeSrc": "9868:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9868:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9815:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9815:43:10"
																},
																"nativeSrc": "9815:71:10",
																"nodeType": "YulFunctionCall",
																"src": "9815:71:10"
															},
															"nativeSrc": "9815:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "9815:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "9671:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9741:9:10",
														"nodeType": "YulTypedName",
														"src": "9741:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9753:6:10",
														"nodeType": "YulTypedName",
														"src": "9753:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9764:4:10",
														"nodeType": "YulTypedName",
														"src": "9764:4:10",
														"type": ""
													}
												],
												"src": "9671:222:10"
											},
											{
												"body": {
													"nativeSrc": "10005:60:10",
													"nodeType": "YulBlock",
													"src": "10005:60:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10027:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10027:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10035:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10035:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10023:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10023:3:10"
																		},
																		"nativeSrc": "10023:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10023:14:10"
																	},
																	{
																		"hexValue": "696e73756666696369656e742d657468",
																		"kind": "string",
																		"nativeSrc": "10039:18:10",
																		"nodeType": "YulLiteral",
																		"src": "10039:18:10",
																		"type": "",
																		"value": "insufficient-eth"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10016:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10016:6:10"
																},
																"nativeSrc": "10016:42:10",
																"nodeType": "YulFunctionCall",
																"src": "10016:42:10"
															},
															"nativeSrc": "10016:42:10",
															"nodeType": "YulExpressionStatement",
															"src": "10016:42:10"
														}
													]
												},
												"name": "store_literal_in_memory_32f2af800164601bd8ed4b85bf247cb53750152b9e1fc05cbced958558411142",
												"nativeSrc": "9899:166:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9997:6:10",
														"nodeType": "YulTypedName",
														"src": "9997:6:10",
														"type": ""
													}
												],
												"src": "9899:166:10"
											},
											{
												"body": {
													"nativeSrc": "10217:220:10",
													"nodeType": "YulBlock",
													"src": "10217:220:10",
													"statements": [
														{
															"nativeSrc": "10227:74:10",
															"nodeType": "YulAssignment",
															"src": "10227:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10293:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10293:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10298:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10298:2:10",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10234:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "10234:58:10"
																},
																"nativeSrc": "10234:67:10",
																"nodeType": "YulFunctionCall",
																"src": "10234:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10227:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10227:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10399:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10399:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_32f2af800164601bd8ed4b85bf247cb53750152b9e1fc05cbced958558411142",
																	"nativeSrc": "10310:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "10310:88:10"
																},
																"nativeSrc": "10310:93:10",
																"nodeType": "YulFunctionCall",
																"src": "10310:93:10"
															},
															"nativeSrc": "10310:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "10310:93:10"
														},
														{
															"nativeSrc": "10412:19:10",
															"nodeType": "YulAssignment",
															"src": "10412:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10423:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10423:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10428:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10428:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10419:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10419:3:10"
																},
																"nativeSrc": "10419:12:10",
																"nodeType": "YulFunctionCall",
																"src": "10419:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10412:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10412:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_32f2af800164601bd8ed4b85bf247cb53750152b9e1fc05cbced958558411142_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10071:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10205:3:10",
														"nodeType": "YulTypedName",
														"src": "10205:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10213:3:10",
														"nodeType": "YulTypedName",
														"src": "10213:3:10",
														"type": ""
													}
												],
												"src": "10071:366:10"
											},
											{
												"body": {
													"nativeSrc": "10614:248:10",
													"nodeType": "YulBlock",
													"src": "10614:248:10",
													"statements": [
														{
															"nativeSrc": "10624:26:10",
															"nodeType": "YulAssignment",
															"src": "10624:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10636:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10636:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10647:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10647:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10632:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10632:3:10"
																},
																"nativeSrc": "10632:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10632:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10624:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10624:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10671:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10671:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10682:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10682:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10667:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10667:3:10"
																		},
																		"nativeSrc": "10667:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10667:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10690:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "10690:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10696:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10696:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10686:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10686:3:10"
																		},
																		"nativeSrc": "10686:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10686:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10660:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10660:6:10"
																},
																"nativeSrc": "10660:47:10",
																"nodeType": "YulFunctionCall",
																"src": "10660:47:10"
															},
															"nativeSrc": "10660:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "10660:47:10"
														},
														{
															"nativeSrc": "10716:139:10",
															"nodeType": "YulAssignment",
															"src": "10716:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10850:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10850:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_32f2af800164601bd8ed4b85bf247cb53750152b9e1fc05cbced958558411142_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10724:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "10724:124:10"
																},
																"nativeSrc": "10724:131:10",
																"nodeType": "YulFunctionCall",
																"src": "10724:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10716:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10716:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_32f2af800164601bd8ed4b85bf247cb53750152b9e1fc05cbced958558411142__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10443:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10594:9:10",
														"nodeType": "YulTypedName",
														"src": "10594:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10609:4:10",
														"nodeType": "YulTypedName",
														"src": "10609:4:10",
														"type": ""
													}
												],
												"src": "10443:419:10"
											},
											{
												"body": {
													"nativeSrc": "10981:34:10",
													"nodeType": "YulBlock",
													"src": "10981:34:10",
													"statements": [
														{
															"nativeSrc": "10991:18:10",
															"nodeType": "YulAssignment",
															"src": "10991:18:10",
															"value": {
																"name": "pos",
																"nativeSrc": "11006:3:10",
																"nodeType": "YulIdentifier",
																"src": "11006:3:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "10991:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "10991:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "10868:147:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10953:3:10",
														"nodeType": "YulTypedName",
														"src": "10953:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10958:6:10",
														"nodeType": "YulTypedName",
														"src": "10958:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "10969:11:10",
														"nodeType": "YulTypedName",
														"src": "10969:11:10",
														"type": ""
													}
												],
												"src": "10868:147:10"
											},
											{
												"body": {
													"nativeSrc": "11127:8:10",
													"nodeType": "YulBlock",
													"src": "11127:8:10",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "11021:114:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11119:6:10",
														"nodeType": "YulTypedName",
														"src": "11119:6:10",
														"type": ""
													}
												],
												"src": "11021:114:10"
											},
											{
												"body": {
													"nativeSrc": "11304:235:10",
													"nodeType": "YulBlock",
													"src": "11304:235:10",
													"statements": [
														{
															"nativeSrc": "11314:90:10",
															"nodeType": "YulAssignment",
															"src": "11314:90:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11397:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11397:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11402:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11402:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "11321:75:10",
																	"nodeType": "YulIdentifier",
																	"src": "11321:75:10"
																},
																"nativeSrc": "11321:83:10",
																"nodeType": "YulFunctionCall",
																"src": "11321:83:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11314:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11314:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11502:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11502:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "11413:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "11413:88:10"
																},
																"nativeSrc": "11413:93:10",
																"nodeType": "YulFunctionCall",
																"src": "11413:93:10"
															},
															"nativeSrc": "11413:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "11413:93:10"
														},
														{
															"nativeSrc": "11515:18:10",
															"nodeType": "YulAssignment",
															"src": "11515:18:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11526:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11526:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11531:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11531:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11522:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11522:3:10"
																},
																"nativeSrc": "11522:11:10",
																"nodeType": "YulFunctionCall",
																"src": "11522:11:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11515:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11515:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "11141:398:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11292:3:10",
														"nodeType": "YulTypedName",
														"src": "11292:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11300:3:10",
														"nodeType": "YulTypedName",
														"src": "11300:3:10",
														"type": ""
													}
												],
												"src": "11141:398:10"
											},
											{
												"body": {
													"nativeSrc": "11733:191:10",
													"nodeType": "YulBlock",
													"src": "11733:191:10",
													"statements": [
														{
															"nativeSrc": "11744:154:10",
															"nodeType": "YulAssignment",
															"src": "11744:154:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11894:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11894:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "11751:141:10",
																	"nodeType": "YulIdentifier",
																	"src": "11751:141:10"
																},
																"nativeSrc": "11751:147:10",
																"nodeType": "YulFunctionCall",
																"src": "11751:147:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11744:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11744:3:10"
																}
															]
														},
														{
															"nativeSrc": "11908:10:10",
															"nodeType": "YulAssignment",
															"src": "11908:10:10",
															"value": {
																"name": "pos",
																"nativeSrc": "11915:3:10",
																"nodeType": "YulIdentifier",
																"src": "11915:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11908:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11908:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "11545:379:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11720:3:10",
														"nodeType": "YulTypedName",
														"src": "11720:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11729:3:10",
														"nodeType": "YulTypedName",
														"src": "11729:3:10",
														"type": ""
													}
												],
												"src": "11545:379:10"
											},
											{
												"body": {
													"nativeSrc": "12036:59:10",
													"nodeType": "YulBlock",
													"src": "12036:59:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12058:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "12058:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12066:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12066:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12054:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12054:3:10"
																		},
																		"nativeSrc": "12054:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12054:14:10"
																	},
																	{
																		"hexValue": "77697468647261772d6661696c6564",
																		"kind": "string",
																		"nativeSrc": "12070:17:10",
																		"nodeType": "YulLiteral",
																		"src": "12070:17:10",
																		"type": "",
																		"value": "withdraw-failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12047:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12047:6:10"
																},
																"nativeSrc": "12047:41:10",
																"nodeType": "YulFunctionCall",
																"src": "12047:41:10"
															},
															"nativeSrc": "12047:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "12047:41:10"
														}
													]
												},
												"name": "store_literal_in_memory_8b43d355e049cab583890bb85706334dd851ea9c087cc2a88fabf6a4dae5875e",
												"nativeSrc": "11930:165:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12028:6:10",
														"nodeType": "YulTypedName",
														"src": "12028:6:10",
														"type": ""
													}
												],
												"src": "11930:165:10"
											},
											{
												"body": {
													"nativeSrc": "12247:220:10",
													"nodeType": "YulBlock",
													"src": "12247:220:10",
													"statements": [
														{
															"nativeSrc": "12257:74:10",
															"nodeType": "YulAssignment",
															"src": "12257:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12323:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12323:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12328:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12328:2:10",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12264:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "12264:58:10"
																},
																"nativeSrc": "12264:67:10",
																"nodeType": "YulFunctionCall",
																"src": "12264:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12257:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12257:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12429:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12429:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8b43d355e049cab583890bb85706334dd851ea9c087cc2a88fabf6a4dae5875e",
																	"nativeSrc": "12340:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "12340:88:10"
																},
																"nativeSrc": "12340:93:10",
																"nodeType": "YulFunctionCall",
																"src": "12340:93:10"
															},
															"nativeSrc": "12340:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "12340:93:10"
														},
														{
															"nativeSrc": "12442:19:10",
															"nodeType": "YulAssignment",
															"src": "12442:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12453:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12453:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12458:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12458:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12449:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12449:3:10"
																},
																"nativeSrc": "12449:12:10",
																"nodeType": "YulFunctionCall",
																"src": "12449:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12442:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12442:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8b43d355e049cab583890bb85706334dd851ea9c087cc2a88fabf6a4dae5875e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12101:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12235:3:10",
														"nodeType": "YulTypedName",
														"src": "12235:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12243:3:10",
														"nodeType": "YulTypedName",
														"src": "12243:3:10",
														"type": ""
													}
												],
												"src": "12101:366:10"
											},
											{
												"body": {
													"nativeSrc": "12644:248:10",
													"nodeType": "YulBlock",
													"src": "12644:248:10",
													"statements": [
														{
															"nativeSrc": "12654:26:10",
															"nodeType": "YulAssignment",
															"src": "12654:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12666:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12666:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12677:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12677:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12662:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12662:3:10"
																},
																"nativeSrc": "12662:18:10",
																"nodeType": "YulFunctionCall",
																"src": "12662:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12654:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12654:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12701:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12701:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12712:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12712:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12697:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12697:3:10"
																		},
																		"nativeSrc": "12697:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12697:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12720:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "12720:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12726:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12726:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12716:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12716:3:10"
																		},
																		"nativeSrc": "12716:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12716:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12690:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12690:6:10"
																},
																"nativeSrc": "12690:47:10",
																"nodeType": "YulFunctionCall",
																"src": "12690:47:10"
															},
															"nativeSrc": "12690:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "12690:47:10"
														},
														{
															"nativeSrc": "12746:139:10",
															"nodeType": "YulAssignment",
															"src": "12746:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12880:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12880:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8b43d355e049cab583890bb85706334dd851ea9c087cc2a88fabf6a4dae5875e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12754:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "12754:124:10"
																},
																"nativeSrc": "12754:131:10",
																"nodeType": "YulFunctionCall",
																"src": "12754:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12746:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12746:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8b43d355e049cab583890bb85706334dd851ea9c087cc2a88fabf6a4dae5875e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12473:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12624:9:10",
														"nodeType": "YulTypedName",
														"src": "12624:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12639:4:10",
														"nodeType": "YulTypedName",
														"src": "12639:4:10",
														"type": ""
													}
												],
												"src": "12473:419:10"
											},
											{
												"body": {
													"nativeSrc": "12961:80:10",
													"nodeType": "YulBlock",
													"src": "12961:80:10",
													"statements": [
														{
															"nativeSrc": "12971:22:10",
															"nodeType": "YulAssignment",
															"src": "12971:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12986:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12986:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12980:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "12980:5:10"
																},
																"nativeSrc": "12980:13:10",
																"nodeType": "YulFunctionCall",
																"src": "12980:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12971:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "12971:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13029:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "13029:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "13002:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "13002:26:10"
																},
																"nativeSrc": "13002:33:10",
																"nodeType": "YulFunctionCall",
																"src": "13002:33:10"
															},
															"nativeSrc": "13002:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "13002:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "12898:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12939:6:10",
														"nodeType": "YulTypedName",
														"src": "12939:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12947:3:10",
														"nodeType": "YulTypedName",
														"src": "12947:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12955:5:10",
														"nodeType": "YulTypedName",
														"src": "12955:5:10",
														"type": ""
													}
												],
												"src": "12898:143:10"
											},
											{
												"body": {
													"nativeSrc": "13124:274:10",
													"nodeType": "YulBlock",
													"src": "13124:274:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "13170:83:10",
																"nodeType": "YulBlock",
																"src": "13170:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13172:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "13172:77:10"
																			},
																			"nativeSrc": "13172:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "13172:79:10"
																		},
																		"nativeSrc": "13172:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "13172:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13145:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "13145:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13154:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13154:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13141:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13141:3:10"
																		},
																		"nativeSrc": "13141:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13141:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13166:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13166:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13137:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13137:3:10"
																},
																"nativeSrc": "13137:32:10",
																"nodeType": "YulFunctionCall",
																"src": "13137:32:10"
															},
															"nativeSrc": "13134:119:10",
															"nodeType": "YulIf",
															"src": "13134:119:10"
														},
														{
															"nativeSrc": "13263:128:10",
															"nodeType": "YulBlock",
															"src": "13263:128:10",
															"statements": [
																{
																	"nativeSrc": "13278:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13278:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13292:1:10",
																		"nodeType": "YulLiteral",
																		"src": "13292:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13282:6:10",
																			"nodeType": "YulTypedName",
																			"src": "13282:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13307:74:10",
																	"nodeType": "YulAssignment",
																	"src": "13307:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13353:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "13353:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13364:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "13364:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13349:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "13349:3:10"
																				},
																				"nativeSrc": "13349:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "13349:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13373:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "13373:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "13317:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "13317:31:10"
																		},
																		"nativeSrc": "13317:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13317:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13307:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "13307:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "13047:351:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13094:9:10",
														"nodeType": "YulTypedName",
														"src": "13094:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13105:7:10",
														"nodeType": "YulTypedName",
														"src": "13105:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13117:6:10",
														"nodeType": "YulTypedName",
														"src": "13117:6:10",
														"type": ""
													}
												],
												"src": "13047:351:10"
											},
											{
												"body": {
													"nativeSrc": "13510:73:10",
													"nodeType": "YulBlock",
													"src": "13510:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13532:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "13532:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13540:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13540:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13528:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13528:3:10"
																		},
																		"nativeSrc": "13528:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13528:14:10"
																	},
																	{
																		"hexValue": "696e73756666696369656e742d636f6e74726163742d62616c616e6365",
																		"kind": "string",
																		"nativeSrc": "13544:31:10",
																		"nodeType": "YulLiteral",
																		"src": "13544:31:10",
																		"type": "",
																		"value": "insufficient-contract-balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13521:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13521:6:10"
																},
																"nativeSrc": "13521:55:10",
																"nodeType": "YulFunctionCall",
																"src": "13521:55:10"
															},
															"nativeSrc": "13521:55:10",
															"nodeType": "YulExpressionStatement",
															"src": "13521:55:10"
														}
													]
												},
												"name": "store_literal_in_memory_d63fdbed4427467445645d3049f905a5792b7d28d81f2510cffd5333dc77e0e4",
												"nativeSrc": "13404:179:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13502:6:10",
														"nodeType": "YulTypedName",
														"src": "13502:6:10",
														"type": ""
													}
												],
												"src": "13404:179:10"
											},
											{
												"body": {
													"nativeSrc": "13735:220:10",
													"nodeType": "YulBlock",
													"src": "13735:220:10",
													"statements": [
														{
															"nativeSrc": "13745:74:10",
															"nodeType": "YulAssignment",
															"src": "13745:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13811:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13811:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13816:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13816:2:10",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13752:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "13752:58:10"
																},
																"nativeSrc": "13752:67:10",
																"nodeType": "YulFunctionCall",
																"src": "13752:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13745:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13745:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13917:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13917:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d63fdbed4427467445645d3049f905a5792b7d28d81f2510cffd5333dc77e0e4",
																	"nativeSrc": "13828:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "13828:88:10"
																},
																"nativeSrc": "13828:93:10",
																"nodeType": "YulFunctionCall",
																"src": "13828:93:10"
															},
															"nativeSrc": "13828:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "13828:93:10"
														},
														{
															"nativeSrc": "13930:19:10",
															"nodeType": "YulAssignment",
															"src": "13930:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13941:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13941:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13946:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13946:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13937:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13937:3:10"
																},
																"nativeSrc": "13937:12:10",
																"nodeType": "YulFunctionCall",
																"src": "13937:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13930:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13930:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d63fdbed4427467445645d3049f905a5792b7d28d81f2510cffd5333dc77e0e4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13589:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13723:3:10",
														"nodeType": "YulTypedName",
														"src": "13723:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13731:3:10",
														"nodeType": "YulTypedName",
														"src": "13731:3:10",
														"type": ""
													}
												],
												"src": "13589:366:10"
											},
											{
												"body": {
													"nativeSrc": "14132:248:10",
													"nodeType": "YulBlock",
													"src": "14132:248:10",
													"statements": [
														{
															"nativeSrc": "14142:26:10",
															"nodeType": "YulAssignment",
															"src": "14142:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14154:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14154:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14165:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14165:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14150:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14150:3:10"
																},
																"nativeSrc": "14150:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14150:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14142:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14142:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14189:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14189:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14200:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14200:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14185:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14185:3:10"
																		},
																		"nativeSrc": "14185:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14185:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14208:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "14208:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14214:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14214:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14204:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14204:3:10"
																		},
																		"nativeSrc": "14204:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14204:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14178:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14178:6:10"
																},
																"nativeSrc": "14178:47:10",
																"nodeType": "YulFunctionCall",
																"src": "14178:47:10"
															},
															"nativeSrc": "14178:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "14178:47:10"
														},
														{
															"nativeSrc": "14234:139:10",
															"nodeType": "YulAssignment",
															"src": "14234:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14368:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "14368:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d63fdbed4427467445645d3049f905a5792b7d28d81f2510cffd5333dc77e0e4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14242:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "14242:124:10"
																},
																"nativeSrc": "14242:131:10",
																"nodeType": "YulFunctionCall",
																"src": "14242:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14234:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14234:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d63fdbed4427467445645d3049f905a5792b7d28d81f2510cffd5333dc77e0e4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13961:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14112:9:10",
														"nodeType": "YulTypedName",
														"src": "14112:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14127:4:10",
														"nodeType": "YulTypedName",
														"src": "14127:4:10",
														"type": ""
													}
												],
												"src": "13961:419:10"
											},
											{
												"body": {
													"nativeSrc": "14492:58:10",
													"nodeType": "YulBlock",
													"src": "14492:58:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14514:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "14514:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14522:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14522:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14510:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14510:3:10"
																		},
																		"nativeSrc": "14510:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14510:14:10"
																	},
																	{
																		"hexValue": "76616c75652d6d69736d61746368",
																		"kind": "string",
																		"nativeSrc": "14526:16:10",
																		"nodeType": "YulLiteral",
																		"src": "14526:16:10",
																		"type": "",
																		"value": "value-mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14503:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14503:6:10"
																},
																"nativeSrc": "14503:40:10",
																"nodeType": "YulFunctionCall",
																"src": "14503:40:10"
															},
															"nativeSrc": "14503:40:10",
															"nodeType": "YulExpressionStatement",
															"src": "14503:40:10"
														}
													]
												},
												"name": "store_literal_in_memory_cc88e57dc80be025bfe09afbca2cd1f527cb24e266aaafb93419be205c17fd16",
												"nativeSrc": "14386:164:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14484:6:10",
														"nodeType": "YulTypedName",
														"src": "14484:6:10",
														"type": ""
													}
												],
												"src": "14386:164:10"
											},
											{
												"body": {
													"nativeSrc": "14702:220:10",
													"nodeType": "YulBlock",
													"src": "14702:220:10",
													"statements": [
														{
															"nativeSrc": "14712:74:10",
															"nodeType": "YulAssignment",
															"src": "14712:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14778:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14778:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14783:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14783:2:10",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14719:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "14719:58:10"
																},
																"nativeSrc": "14719:67:10",
																"nodeType": "YulFunctionCall",
																"src": "14719:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14712:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14712:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14884:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14884:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc88e57dc80be025bfe09afbca2cd1f527cb24e266aaafb93419be205c17fd16",
																	"nativeSrc": "14795:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "14795:88:10"
																},
																"nativeSrc": "14795:93:10",
																"nodeType": "YulFunctionCall",
																"src": "14795:93:10"
															},
															"nativeSrc": "14795:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "14795:93:10"
														},
														{
															"nativeSrc": "14897:19:10",
															"nodeType": "YulAssignment",
															"src": "14897:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14908:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14908:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14913:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14913:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14904:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14904:3:10"
																},
																"nativeSrc": "14904:12:10",
																"nodeType": "YulFunctionCall",
																"src": "14904:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14897:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14897:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc88e57dc80be025bfe09afbca2cd1f527cb24e266aaafb93419be205c17fd16_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14556:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14690:3:10",
														"nodeType": "YulTypedName",
														"src": "14690:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14698:3:10",
														"nodeType": "YulTypedName",
														"src": "14698:3:10",
														"type": ""
													}
												],
												"src": "14556:366:10"
											},
											{
												"body": {
													"nativeSrc": "15099:248:10",
													"nodeType": "YulBlock",
													"src": "15099:248:10",
													"statements": [
														{
															"nativeSrc": "15109:26:10",
															"nodeType": "YulAssignment",
															"src": "15109:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15121:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "15121:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15132:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15132:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15117:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15117:3:10"
																},
																"nativeSrc": "15117:18:10",
																"nodeType": "YulFunctionCall",
																"src": "15117:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15109:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15109:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15156:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15156:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15167:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15167:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15152:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15152:3:10"
																		},
																		"nativeSrc": "15152:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15152:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15175:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "15175:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15181:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15181:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15171:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15171:3:10"
																		},
																		"nativeSrc": "15171:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15171:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15145:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15145:6:10"
																},
																"nativeSrc": "15145:47:10",
																"nodeType": "YulFunctionCall",
																"src": "15145:47:10"
															},
															"nativeSrc": "15145:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "15145:47:10"
														},
														{
															"nativeSrc": "15201:139:10",
															"nodeType": "YulAssignment",
															"src": "15201:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15335:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "15335:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc88e57dc80be025bfe09afbca2cd1f527cb24e266aaafb93419be205c17fd16_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15209:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "15209:124:10"
																},
																"nativeSrc": "15209:131:10",
																"nodeType": "YulFunctionCall",
																"src": "15209:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15201:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15201:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc88e57dc80be025bfe09afbca2cd1f527cb24e266aaafb93419be205c17fd16__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14928:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15079:9:10",
														"nodeType": "YulTypedName",
														"src": "15079:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15094:4:10",
														"nodeType": "YulTypedName",
														"src": "15094:4:10",
														"type": ""
													}
												],
												"src": "14928:419:10"
											},
											{
												"body": {
													"nativeSrc": "15459:59:10",
													"nodeType": "YulBlock",
													"src": "15459:59:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15481:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "15481:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15489:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15489:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15477:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15477:3:10"
																		},
																		"nativeSrc": "15477:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15477:14:10"
																	},
																	{
																		"hexValue": "6574682d73656e642d6661696c6564",
																		"kind": "string",
																		"nativeSrc": "15493:17:10",
																		"nodeType": "YulLiteral",
																		"src": "15493:17:10",
																		"type": "",
																		"value": "eth-send-failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15470:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15470:6:10"
																},
																"nativeSrc": "15470:41:10",
																"nodeType": "YulFunctionCall",
																"src": "15470:41:10"
															},
															"nativeSrc": "15470:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "15470:41:10"
														}
													]
												},
												"name": "store_literal_in_memory_f12c488a23a22a5ef0e34ac4c3b8a552738eb834b777e83839a622bf4d805954",
												"nativeSrc": "15353:165:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15451:6:10",
														"nodeType": "YulTypedName",
														"src": "15451:6:10",
														"type": ""
													}
												],
												"src": "15353:165:10"
											},
											{
												"body": {
													"nativeSrc": "15670:220:10",
													"nodeType": "YulBlock",
													"src": "15670:220:10",
													"statements": [
														{
															"nativeSrc": "15680:74:10",
															"nodeType": "YulAssignment",
															"src": "15680:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15746:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15746:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15751:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15751:2:10",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15687:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "15687:58:10"
																},
																"nativeSrc": "15687:67:10",
																"nodeType": "YulFunctionCall",
																"src": "15687:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15680:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15680:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15852:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15852:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f12c488a23a22a5ef0e34ac4c3b8a552738eb834b777e83839a622bf4d805954",
																	"nativeSrc": "15763:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "15763:88:10"
																},
																"nativeSrc": "15763:93:10",
																"nodeType": "YulFunctionCall",
																"src": "15763:93:10"
															},
															"nativeSrc": "15763:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "15763:93:10"
														},
														{
															"nativeSrc": "15865:19:10",
															"nodeType": "YulAssignment",
															"src": "15865:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15876:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15876:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15881:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15881:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15872:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15872:3:10"
																},
																"nativeSrc": "15872:12:10",
																"nodeType": "YulFunctionCall",
																"src": "15872:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15865:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15865:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f12c488a23a22a5ef0e34ac4c3b8a552738eb834b777e83839a622bf4d805954_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15524:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15658:3:10",
														"nodeType": "YulTypedName",
														"src": "15658:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15666:3:10",
														"nodeType": "YulTypedName",
														"src": "15666:3:10",
														"type": ""
													}
												],
												"src": "15524:366:10"
											},
											{
												"body": {
													"nativeSrc": "16067:248:10",
													"nodeType": "YulBlock",
													"src": "16067:248:10",
													"statements": [
														{
															"nativeSrc": "16077:26:10",
															"nodeType": "YulAssignment",
															"src": "16077:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16089:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "16089:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16100:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16100:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16085:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16085:3:10"
																},
																"nativeSrc": "16085:18:10",
																"nodeType": "YulFunctionCall",
																"src": "16085:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16077:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16077:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16124:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16124:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16135:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16135:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16120:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16120:3:10"
																		},
																		"nativeSrc": "16120:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16120:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16143:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "16143:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16149:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16149:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16139:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16139:3:10"
																		},
																		"nativeSrc": "16139:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16139:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16113:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16113:6:10"
																},
																"nativeSrc": "16113:47:10",
																"nodeType": "YulFunctionCall",
																"src": "16113:47:10"
															},
															"nativeSrc": "16113:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "16113:47:10"
														},
														{
															"nativeSrc": "16169:139:10",
															"nodeType": "YulAssignment",
															"src": "16169:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16303:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "16303:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f12c488a23a22a5ef0e34ac4c3b8a552738eb834b777e83839a622bf4d805954_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16177:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "16177:124:10"
																},
																"nativeSrc": "16177:131:10",
																"nodeType": "YulFunctionCall",
																"src": "16177:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16169:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16169:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f12c488a23a22a5ef0e34ac4c3b8a552738eb834b777e83839a622bf4d805954__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15896:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16047:9:10",
														"nodeType": "YulTypedName",
														"src": "16047:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16062:4:10",
														"nodeType": "YulTypedName",
														"src": "16062:4:10",
														"type": ""
													}
												],
												"src": "15896:419:10"
											},
											{
												"body": {
													"nativeSrc": "16427:75:10",
													"nodeType": "YulBlock",
													"src": "16427:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16449:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "16449:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16457:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16457:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16445:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16445:3:10"
																		},
																		"nativeSrc": "16445:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16445:14:10"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "16461:33:10",
																		"nodeType": "YulLiteral",
																		"src": "16461:33:10",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16438:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16438:6:10"
																},
																"nativeSrc": "16438:57:10",
																"nodeType": "YulFunctionCall",
																"src": "16438:57:10"
															},
															"nativeSrc": "16438:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "16438:57:10"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "16321:181:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16419:6:10",
														"nodeType": "YulTypedName",
														"src": "16419:6:10",
														"type": ""
													}
												],
												"src": "16321:181:10"
											},
											{
												"body": {
													"nativeSrc": "16654:220:10",
													"nodeType": "YulBlock",
													"src": "16654:220:10",
													"statements": [
														{
															"nativeSrc": "16664:74:10",
															"nodeType": "YulAssignment",
															"src": "16664:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16730:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16730:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16735:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16735:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16671:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "16671:58:10"
																},
																"nativeSrc": "16671:67:10",
																"nodeType": "YulFunctionCall",
																"src": "16671:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16664:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16664:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16836:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16836:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "16747:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "16747:88:10"
																},
																"nativeSrc": "16747:93:10",
																"nodeType": "YulFunctionCall",
																"src": "16747:93:10"
															},
															"nativeSrc": "16747:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "16747:93:10"
														},
														{
															"nativeSrc": "16849:19:10",
															"nodeType": "YulAssignment",
															"src": "16849:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16860:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16860:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16865:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16865:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16856:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16856:3:10"
																},
																"nativeSrc": "16856:12:10",
																"nodeType": "YulFunctionCall",
																"src": "16856:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16849:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16849:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16508:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16642:3:10",
														"nodeType": "YulTypedName",
														"src": "16642:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16650:3:10",
														"nodeType": "YulTypedName",
														"src": "16650:3:10",
														"type": ""
													}
												],
												"src": "16508:366:10"
											},
											{
												"body": {
													"nativeSrc": "17051:248:10",
													"nodeType": "YulBlock",
													"src": "17051:248:10",
													"statements": [
														{
															"nativeSrc": "17061:26:10",
															"nodeType": "YulAssignment",
															"src": "17061:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17073:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "17073:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17084:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17084:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17069:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17069:3:10"
																},
																"nativeSrc": "17069:18:10",
																"nodeType": "YulFunctionCall",
																"src": "17069:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17061:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17061:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17108:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17108:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17119:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17119:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17104:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17104:3:10"
																		},
																		"nativeSrc": "17104:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17104:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17127:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "17127:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17133:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17133:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17123:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17123:3:10"
																		},
																		"nativeSrc": "17123:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17123:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17097:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17097:6:10"
																},
																"nativeSrc": "17097:47:10",
																"nodeType": "YulFunctionCall",
																"src": "17097:47:10"
															},
															"nativeSrc": "17097:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "17097:47:10"
														},
														{
															"nativeSrc": "17153:139:10",
															"nodeType": "YulAssignment",
															"src": "17153:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17287:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "17287:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17161:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "17161:124:10"
																},
																"nativeSrc": "17161:131:10",
																"nodeType": "YulFunctionCall",
																"src": "17161:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17153:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17153:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16880:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17031:9:10",
														"nodeType": "YulTypedName",
														"src": "17031:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17046:4:10",
														"nodeType": "YulTypedName",
														"src": "17046:4:10",
														"type": ""
													}
												],
												"src": "16880:419:10"
											},
											{
												"body": {
													"nativeSrc": "17459:288:10",
													"nodeType": "YulBlock",
													"src": "17459:288:10",
													"statements": [
														{
															"nativeSrc": "17469:26:10",
															"nodeType": "YulAssignment",
															"src": "17469:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17481:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "17481:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17492:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17492:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17477:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17477:3:10"
																},
																"nativeSrc": "17477:18:10",
																"nodeType": "YulFunctionCall",
																"src": "17477:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17469:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17469:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17549:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "17549:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17562:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17562:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17573:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17573:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17558:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17558:3:10"
																		},
																		"nativeSrc": "17558:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17558:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17505:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "17505:43:10"
																},
																"nativeSrc": "17505:71:10",
																"nodeType": "YulFunctionCall",
																"src": "17505:71:10"
															},
															"nativeSrc": "17505:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "17505:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17630:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "17630:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17643:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17643:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17654:2:10",
																				"nodeType": "YulLiteral",
																				"src": "17654:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17639:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17639:3:10"
																		},
																		"nativeSrc": "17639:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17639:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17586:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "17586:43:10"
																},
																"nativeSrc": "17586:72:10",
																"nodeType": "YulFunctionCall",
																"src": "17586:72:10"
															},
															"nativeSrc": "17586:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "17586:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "17712:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "17712:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17725:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17725:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17736:2:10",
																				"nodeType": "YulLiteral",
																				"src": "17736:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17721:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17721:3:10"
																		},
																		"nativeSrc": "17721:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17721:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17668:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "17668:43:10"
																},
																"nativeSrc": "17668:72:10",
																"nodeType": "YulFunctionCall",
																"src": "17668:72:10"
															},
															"nativeSrc": "17668:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "17668:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "17305:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17415:9:10",
														"nodeType": "YulTypedName",
														"src": "17415:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17427:6:10",
														"nodeType": "YulTypedName",
														"src": "17427:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17435:6:10",
														"nodeType": "YulTypedName",
														"src": "17435:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17443:6:10",
														"nodeType": "YulTypedName",
														"src": "17443:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17454:4:10",
														"nodeType": "YulTypedName",
														"src": "17454:4:10",
														"type": ""
													}
												],
												"src": "17305:442:10"
											},
											{
												"body": {
													"nativeSrc": "17879:206:10",
													"nodeType": "YulBlock",
													"src": "17879:206:10",
													"statements": [
														{
															"nativeSrc": "17889:26:10",
															"nodeType": "YulAssignment",
															"src": "17889:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17901:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "17901:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17912:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17912:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17897:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17897:3:10"
																},
																"nativeSrc": "17897:18:10",
																"nodeType": "YulFunctionCall",
																"src": "17897:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17889:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17889:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17969:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "17969:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17982:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17982:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17993:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17993:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17978:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17978:3:10"
																		},
																		"nativeSrc": "17978:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17978:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17925:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "17925:43:10"
																},
																"nativeSrc": "17925:71:10",
																"nodeType": "YulFunctionCall",
																"src": "17925:71:10"
															},
															"nativeSrc": "17925:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "17925:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18050:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "18050:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18063:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18063:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18074:2:10",
																				"nodeType": "YulLiteral",
																				"src": "18074:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18059:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18059:3:10"
																		},
																		"nativeSrc": "18059:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18059:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18006:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "18006:43:10"
																},
																"nativeSrc": "18006:72:10",
																"nodeType": "YulFunctionCall",
																"src": "18006:72:10"
															},
															"nativeSrc": "18006:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "18006:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "17753:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17843:9:10",
														"nodeType": "YulTypedName",
														"src": "17843:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17855:6:10",
														"nodeType": "YulTypedName",
														"src": "17855:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17863:6:10",
														"nodeType": "YulTypedName",
														"src": "17863:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17874:4:10",
														"nodeType": "YulTypedName",
														"src": "17874:4:10",
														"type": ""
													}
												],
												"src": "17753:332:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$380(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$380(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$380(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$380(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$380(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$380t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$380(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$380t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$380(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_de8e3464a6f953d7c88413d1e5ad8b13ba277be3f42ee326a98c5cbafed36f1d(memPtr) {\n\n        mstore(add(memPtr, 0), \"length-mismatch\")\n\n    }\n\n    function abi_encode_t_stringliteral_de8e3464a6f953d7c88413d1e5ad8b13ba277be3f42ee326a98c5cbafed36f1d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_de8e3464a6f953d7c88413d1e5ad8b13ba277be3f42ee326a98c5cbafed36f1d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_de8e3464a6f953d7c88413d1e5ad8b13ba277be3f42ee326a98c5cbafed36f1d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_de8e3464a6f953d7c88413d1e5ad8b13ba277be3f42ee326a98c5cbafed36f1d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_32f2af800164601bd8ed4b85bf247cb53750152b9e1fc05cbced958558411142(memPtr) {\n\n        mstore(add(memPtr, 0), \"insufficient-eth\")\n\n    }\n\n    function abi_encode_t_stringliteral_32f2af800164601bd8ed4b85bf247cb53750152b9e1fc05cbced958558411142_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_32f2af800164601bd8ed4b85bf247cb53750152b9e1fc05cbced958558411142(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_32f2af800164601bd8ed4b85bf247cb53750152b9e1fc05cbced958558411142__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_32f2af800164601bd8ed4b85bf247cb53750152b9e1fc05cbced958558411142_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_8b43d355e049cab583890bb85706334dd851ea9c087cc2a88fabf6a4dae5875e(memPtr) {\n\n        mstore(add(memPtr, 0), \"withdraw-failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_8b43d355e049cab583890bb85706334dd851ea9c087cc2a88fabf6a4dae5875e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_8b43d355e049cab583890bb85706334dd851ea9c087cc2a88fabf6a4dae5875e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8b43d355e049cab583890bb85706334dd851ea9c087cc2a88fabf6a4dae5875e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8b43d355e049cab583890bb85706334dd851ea9c087cc2a88fabf6a4dae5875e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_d63fdbed4427467445645d3049f905a5792b7d28d81f2510cffd5333dc77e0e4(memPtr) {\n\n        mstore(add(memPtr, 0), \"insufficient-contract-balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_d63fdbed4427467445645d3049f905a5792b7d28d81f2510cffd5333dc77e0e4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_d63fdbed4427467445645d3049f905a5792b7d28d81f2510cffd5333dc77e0e4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d63fdbed4427467445645d3049f905a5792b7d28d81f2510cffd5333dc77e0e4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d63fdbed4427467445645d3049f905a5792b7d28d81f2510cffd5333dc77e0e4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cc88e57dc80be025bfe09afbca2cd1f527cb24e266aaafb93419be205c17fd16(memPtr) {\n\n        mstore(add(memPtr, 0), \"value-mismatch\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc88e57dc80be025bfe09afbca2cd1f527cb24e266aaafb93419be205c17fd16_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_cc88e57dc80be025bfe09afbca2cd1f527cb24e266aaafb93419be205c17fd16(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc88e57dc80be025bfe09afbca2cd1f527cb24e266aaafb93419be205c17fd16__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc88e57dc80be025bfe09afbca2cd1f527cb24e266aaafb93419be205c17fd16_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f12c488a23a22a5ef0e34ac4c3b8a552738eb834b777e83839a622bf4d805954(memPtr) {\n\n        mstore(add(memPtr, 0), \"eth-send-failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_f12c488a23a22a5ef0e34ac4c3b8a552738eb834b777e83839a622bf4d805954_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_f12c488a23a22a5ef0e34ac4c3b8a552738eb834b777e83839a622bf4d805954(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f12c488a23a22a5ef0e34ac4c3b8a552738eb834b777e83839a622bf4d805954__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f12c488a23a22a5ef0e34ac4c3b8a552738eb834b777e83839a622bf4d805954_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061007e575f3560e01c80638da5cb5b1161004d5780638da5cb5b146101155780639f62eafe1461013f578063b874fa6a14610167578063f2fde38b1461018357610085565b80633e46cd531461008757806344004cc1146100af5780634782f779146100d7578063715018a6146100ff57610085565b3661008557005b005b348015610092575f80fd5b506100ad60048036038101906100a89190610eea565b6101ab565b005b3480156100ba575f80fd5b506100d560048036038101906100d09190610fd8565b610338565b005b3480156100e2575f80fd5b506100fd60048036038101906100f89190611063565b6103e5565b005b34801561010a575f80fd5b5061011361053b565b005b348015610120575f80fd5b5061012961054e565b60405161013691906110b0565b60405180910390f35b34801561014a575f80fd5b5061016560048036038101906101609190610eea565b610575565b005b610181600480360381019061017c91906110c9565b6107c7565b005b34801561018e575f80fd5b506101a960048036038101906101a49190611147565b6109fa565b005b6101b3610a7e565b5f8484905090508282905081146101ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f6906111cc565b60405180910390fd5b5f805b8281101561023c5784848281811061021d5761021c6111ea565b5b905060200201358261022f9190611244565b9150806001019050610202565b505f5b828110156102bf576102b43388888481811061025e5761025d6111ea565b5b90506020020160208101906102739190611147565b878785818110610286576102856111ea565b5b905060200201358b73ffffffffffffffffffffffffffffffffffffffff16610acd909392919063ffffffff16565b80600101905061023f565b503373ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f8a88ad5eb4d4acfb8c47fcc9c5b0e66c5162ea704dd1e08cce235927434e18d2838560405161031f929190611286565b60405180910390a35050610331610b4f565b5050505050565b610340610b58565b610348610a7e565b61037382828573ffffffffffffffffffffffffffffffffffffffff16610bdf9092919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fbfed55bdcd242e3dd0f60ddd7d1e87c67f61c34cd9527b3e6455d841b1025362836040516103d091906112ad565b60405180910390a36103e0610b4f565b505050565b6103ed610b58565b6103f5610a7e565b80471015610438576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042f90611310565b60405180910390fd5b5f8273ffffffffffffffffffffffffffffffffffffffff168260405161045d9061135b565b5f6040518083038185875af1925050503d805f8114610497576040519150601f19603f3d011682016040523d82523d5f602084013e61049c565b606091505b50509050806104e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d7906113b9565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff167f94b2de810873337ed265c5f8cf98c9cffefa06b8607f9a2f1fbaebdfbcfbef1c8360405161052691906112ad565b60405180910390a250610537610b4f565b5050565b610543610b58565b61054c5f610c5e565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61057d610b58565b610585610a7e565b5f8484905090508282905081146105d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c8906111cc565b60405180910390fd5b5f805b8281101561060e578484828181106105ef576105ee6111ea565b5b90506020020135826106019190611244565b91508060010190506105d4565b505f8773ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161064991906110b0565b602060405180830381865afa158015610664573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061068891906113eb565b9050818110156106cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c490611460565b60405180910390fd5b5f5b8381101561074d576107428888838181106106ed576106ec6111ea565b5b90506020020160208101906107029190611147565b878784818110610715576107146111ea565b5b905060200201358b73ffffffffffffffffffffffffffffffffffffffff16610bdf9092919063ffffffff16565b8060010190506106cf565b503073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167f8a88ad5eb4d4acfb8c47fcc9c5b0e66c5162ea704dd1e08cce235927434e18d284866040516107ad929190611286565b60405180910390a35050506107c0610b4f565b5050505050565b6107cf610a7e565b5f84849050905082829050811461081b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610812906111cc565b60405180910390fd5b5f805b8281101561085857848482818110610839576108386111ea565b5b905060200201358261084b9190611244565b915080600101905061081e565b5034811461089b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610892906114c8565b60405180910390fd5b5f5b82811015610999575f8787838181106108b9576108b86111ea565b5b90506020020160208101906108ce9190611147565b73ffffffffffffffffffffffffffffffffffffffff168686848181106108f7576108f66111ea565b5b9050602002013560405161090a9061135b565b5f6040518083038185875af1925050503d805f8114610944576040519150601f19603f3d011682016040523d82523d5f602084013e610949565b606091505b505090508061098d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098490611530565b60405180910390fd5b5080600101905061089d565b503373ffffffffffffffffffffffffffffffffffffffff167f45d6845dd4f0bdd735a522e3076f82702e80547a0e2b1304a2e483bca6d9cdc482846040516109e2929190611286565b60405180910390a250506109f4610b4f565b50505050565b610a02610b58565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a72575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a6991906110b0565b60405180910390fd5b610a7b81610c5e565b50565b600260015403610ac3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aba90611598565b60405180910390fd5b6002600181905550565b610b49848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610b02939291906115b6565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d1f565b50505050565b60018081905550565b610b60610dba565b73ffffffffffffffffffffffffffffffffffffffff16610b7e61054e565b73ffffffffffffffffffffffffffffffffffffffff1614610bdd57610ba1610dba565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610bd491906110b0565b60405180910390fd5b565b610c59838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610c129291906115eb565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d1f565b505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f8060205f8451602086015f885af180610d3e576040513d5f823e3d81fd5b3d92505f519150505f8214610d57576001811415610d72565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610db457836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610dab91906110b0565b60405180910390fd5b50505050565b5f33905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610df282610dc9565b9050919050565b5f610e0382610de8565b9050919050565b610e1381610df9565b8114610e1d575f80fd5b50565b5f81359050610e2e81610e0a565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f840112610e5557610e54610e34565b5b8235905067ffffffffffffffff811115610e7257610e71610e38565b5b602083019150836020820283011115610e8e57610e8d610e3c565b5b9250929050565b5f8083601f840112610eaa57610ea9610e34565b5b8235905067ffffffffffffffff811115610ec757610ec6610e38565b5b602083019150836020820283011115610ee357610ee2610e3c565b5b9250929050565b5f805f805f60608688031215610f0357610f02610dc1565b5b5f610f1088828901610e20565b955050602086013567ffffffffffffffff811115610f3157610f30610dc5565b5b610f3d88828901610e40565b9450945050604086013567ffffffffffffffff811115610f6057610f5f610dc5565b5b610f6c88828901610e95565b92509250509295509295909350565b610f8481610de8565b8114610f8e575f80fd5b50565b5f81359050610f9f81610f7b565b92915050565b5f819050919050565b610fb781610fa5565b8114610fc1575f80fd5b50565b5f81359050610fd281610fae565b92915050565b5f805f60608486031215610fef57610fee610dc1565b5b5f610ffc86828701610e20565b935050602061100d86828701610f91565b925050604061101e86828701610fc4565b9150509250925092565b5f61103282610dc9565b9050919050565b61104281611028565b811461104c575f80fd5b50565b5f8135905061105d81611039565b92915050565b5f806040838503121561107957611078610dc1565b5b5f6110868582860161104f565b925050602061109785828601610fc4565b9150509250929050565b6110aa81610de8565b82525050565b5f6020820190506110c35f8301846110a1565b92915050565b5f805f80604085870312156110e1576110e0610dc1565b5b5f85013567ffffffffffffffff8111156110fe576110fd610dc5565b5b61110a87828801610e40565b9450945050602085013567ffffffffffffffff81111561112d5761112c610dc5565b5b61113987828801610e95565b925092505092959194509250565b5f6020828403121561115c5761115b610dc1565b5b5f61116984828501610f91565b91505092915050565b5f82825260208201905092915050565b7f6c656e6774682d6d69736d6174636800000000000000000000000000000000005f82015250565b5f6111b6600f83611172565b91506111c182611182565b602082019050919050565b5f6020820190508181035f8301526111e3816111aa565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61124e82610fa5565b915061125983610fa5565b925082820190508082111561127157611270611217565b5b92915050565b61128081610fa5565b82525050565b5f6040820190506112995f830185611277565b6112a66020830184611277565b9392505050565b5f6020820190506112c05f830184611277565b92915050565b7f696e73756666696369656e742d657468000000000000000000000000000000005f82015250565b5f6112fa601083611172565b9150611305826112c6565b602082019050919050565b5f6020820190508181035f830152611327816112ee565b9050919050565b5f81905092915050565b50565b5f6113465f8361132e565b915061135182611338565b5f82019050919050565b5f6113658261133b565b9150819050919050565b7f77697468647261772d6661696c656400000000000000000000000000000000005f82015250565b5f6113a3600f83611172565b91506113ae8261136f565b602082019050919050565b5f6020820190508181035f8301526113d081611397565b9050919050565b5f815190506113e581610fae565b92915050565b5f60208284031215611400576113ff610dc1565b5b5f61140d848285016113d7565b91505092915050565b7f696e73756666696369656e742d636f6e74726163742d62616c616e63650000005f82015250565b5f61144a601d83611172565b915061145582611416565b602082019050919050565b5f6020820190508181035f8301526114778161143e565b9050919050565b7f76616c75652d6d69736d617463680000000000000000000000000000000000005f82015250565b5f6114b2600e83611172565b91506114bd8261147e565b602082019050919050565b5f6020820190508181035f8301526114df816114a6565b9050919050565b7f6574682d73656e642d6661696c656400000000000000000000000000000000005f82015250565b5f61151a600f83611172565b9150611525826114e6565b602082019050919050565b5f6020820190508181035f8301526115478161150e565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f611582601f83611172565b915061158d8261154e565b602082019050919050565b5f6020820190508181035f8301526115af81611576565b9050919050565b5f6060820190506115c95f8301866110a1565b6115d660208301856110a1565b6115e36040830184611277565b949350505050565b5f6040820190506115fe5f8301856110a1565b61160b6020830184611277565b939250505056fea2646970667358221220f7bad7108ed2b561543a3de5b304f23772009fc7bd22663295e568f357442cd564736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x4D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x9F62EAFE EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0xB874FA6A EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x183 JUMPI PUSH2 0x85 JUMP JUMPDEST DUP1 PUSH4 0x3E46CD53 EQ PUSH2 0x87 JUMPI DUP1 PUSH4 0x44004CC1 EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0x4782F779 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xFF JUMPI PUSH2 0x85 JUMP JUMPDEST CALLDATASIZE PUSH2 0x85 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x92 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xAD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA8 SWAP2 SWAP1 PUSH2 0xEEA JUMP JUMPDEST PUSH2 0x1AB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xD5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0xFD8 JUMP JUMPDEST PUSH2 0x338 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x1063 JUMP JUMPDEST PUSH2 0x3E5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x113 PUSH2 0x53B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x120 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH2 0x54E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x10B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x160 SWAP2 SWAP1 PUSH2 0xEEA JUMP JUMPDEST PUSH2 0x575 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x181 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17C SWAP2 SWAP1 PUSH2 0x10C9 JUMP JUMPDEST PUSH2 0x7C7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH2 0x9FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B3 PUSH2 0xA7E JUMP JUMPDEST PUSH0 DUP5 DUP5 SWAP1 POP SWAP1 POP DUP3 DUP3 SWAP1 POP DUP2 EQ PUSH2 0x1FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F6 SWAP1 PUSH2 0x11CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x23C JUMPI DUP5 DUP5 DUP3 DUP2 DUP2 LT PUSH2 0x21D JUMPI PUSH2 0x21C PUSH2 0x11EA JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x1244 JUMP JUMPDEST SWAP2 POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x202 JUMP JUMPDEST POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2BF JUMPI PUSH2 0x2B4 CALLER DUP9 DUP9 DUP5 DUP2 DUP2 LT PUSH2 0x25E JUMPI PUSH2 0x25D PUSH2 0x11EA JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x1147 JUMP JUMPDEST DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0x286 JUMPI PUSH2 0x285 PUSH2 0x11EA JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xACD SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x23F JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8A88AD5EB4D4ACFB8C47FCC9C5B0E66C5162EA704DD1E08CCE235927434E18D2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH2 0x31F SWAP3 SWAP2 SWAP1 PUSH2 0x1286 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH2 0x331 PUSH2 0xB4F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x340 PUSH2 0xB58 JUMP JUMPDEST PUSH2 0x348 PUSH2 0xA7E JUMP JUMPDEST PUSH2 0x373 DUP3 DUP3 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBDF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBFED55BDCD242E3DD0F60DDD7D1E87C67F61C34CD9527B3E6455D841B1025362 DUP4 PUSH1 0x40 MLOAD PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x3E0 PUSH2 0xB4F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3ED PUSH2 0xB58 JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0xA7E JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x438 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42F SWAP1 PUSH2 0x1310 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x45D SWAP1 PUSH2 0x135B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x497 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x49C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x4E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D7 SWAP1 PUSH2 0x13B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x94B2DE810873337ED265C5F8CF98C9CFFEFA06B8607F9A2F1FBAEBDFBCFBEF1C DUP4 PUSH1 0x40 MLOAD PUSH2 0x526 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x537 PUSH2 0xB4F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x543 PUSH2 0xB58 JUMP JUMPDEST PUSH2 0x54C PUSH0 PUSH2 0xC5E JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x57D PUSH2 0xB58 JUMP JUMPDEST PUSH2 0x585 PUSH2 0xA7E JUMP JUMPDEST PUSH0 DUP5 DUP5 SWAP1 POP SWAP1 POP DUP3 DUP3 SWAP1 POP DUP2 EQ PUSH2 0x5D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x11CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x60E JUMPI DUP5 DUP5 DUP3 DUP2 DUP2 LT PUSH2 0x5EF JUMPI PUSH2 0x5EE PUSH2 0x11EA JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 PUSH2 0x601 SWAP2 SWAP1 PUSH2 0x1244 JUMP JUMPDEST SWAP2 POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x5D4 JUMP JUMPDEST POP PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x649 SWAP2 SWAP1 PUSH2 0x10B0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x664 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x688 SWAP2 SWAP1 PUSH2 0x13EB JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x6CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C4 SWAP1 PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x74D JUMPI PUSH2 0x742 DUP9 DUP9 DUP4 DUP2 DUP2 LT PUSH2 0x6ED JUMPI PUSH2 0x6EC PUSH2 0x11EA JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x702 SWAP2 SWAP1 PUSH2 0x1147 JUMP JUMPDEST DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0x715 JUMPI PUSH2 0x714 PUSH2 0x11EA JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBDF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x6CF JUMP JUMPDEST POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8A88AD5EB4D4ACFB8C47FCC9C5B0E66C5162EA704DD1E08CCE235927434E18D2 DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x7AD SWAP3 SWAP2 SWAP1 PUSH2 0x1286 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP PUSH2 0x7C0 PUSH2 0xB4F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7CF PUSH2 0xA7E JUMP JUMPDEST PUSH0 DUP5 DUP5 SWAP1 POP SWAP1 POP DUP3 DUP3 SWAP1 POP DUP2 EQ PUSH2 0x81B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x812 SWAP1 PUSH2 0x11CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x858 JUMPI DUP5 DUP5 DUP3 DUP2 DUP2 LT PUSH2 0x839 JUMPI PUSH2 0x838 PUSH2 0x11EA JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 PUSH2 0x84B SWAP2 SWAP1 PUSH2 0x1244 JUMP JUMPDEST SWAP2 POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x81E JUMP JUMPDEST POP CALLVALUE DUP2 EQ PUSH2 0x89B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x892 SWAP1 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x999 JUMPI PUSH0 DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x8B9 JUMPI PUSH2 0x8B8 PUSH2 0x11EA JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x8CE SWAP2 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0x8F7 JUMPI PUSH2 0x8F6 PUSH2 0x11EA JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH2 0x90A SWAP1 PUSH2 0x135B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x944 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x949 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x98D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x984 SWAP1 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x89D JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x45D6845DD4F0BDD735A522E3076F82702E80547A0E2B1304A2E483BCA6D9CDC4 DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0x9E2 SWAP3 SWAP2 SWAP1 PUSH2 0x1286 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x9F4 PUSH2 0xB4F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xA02 PUSH2 0xB58 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA72 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA69 SWAP2 SWAP1 PUSH2 0x10B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA7B DUP2 PUSH2 0xC5E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xAC3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABA SWAP1 PUSH2 0x1598 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xB49 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xB02 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xD1F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xB60 PUSH2 0xDBA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB7E PUSH2 0x54E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBDD JUMPI PUSH2 0xBA1 PUSH2 0xDBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD4 SWAP2 SWAP1 PUSH2 0x10B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xC59 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xC12 SWAP3 SWAP2 SWAP1 PUSH2 0x15EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xD1F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xD3E JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0xD57 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xD72 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xDB4 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDAB SWAP2 SWAP1 PUSH2 0x10B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDF2 DUP3 PUSH2 0xDC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE03 DUP3 PUSH2 0xDE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE13 DUP2 PUSH2 0xDF9 JUMP JUMPDEST DUP2 EQ PUSH2 0xE1D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE2E DUP2 PUSH2 0xE0A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xE55 JUMPI PUSH2 0xE54 PUSH2 0xE34 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE72 JUMPI PUSH2 0xE71 PUSH2 0xE38 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xE8E JUMPI PUSH2 0xE8D PUSH2 0xE3C JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xEAA JUMPI PUSH2 0xEA9 PUSH2 0xE34 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEC7 JUMPI PUSH2 0xEC6 PUSH2 0xE38 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xEE3 JUMPI PUSH2 0xEE2 PUSH2 0xE3C JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xF03 JUMPI PUSH2 0xF02 PUSH2 0xDC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF10 DUP9 DUP3 DUP10 ADD PUSH2 0xE20 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF31 JUMPI PUSH2 0xF30 PUSH2 0xDC5 JUMP JUMPDEST JUMPDEST PUSH2 0xF3D DUP9 DUP3 DUP10 ADD PUSH2 0xE40 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF60 JUMPI PUSH2 0xF5F PUSH2 0xDC5 JUMP JUMPDEST JUMPDEST PUSH2 0xF6C DUP9 DUP3 DUP10 ADD PUSH2 0xE95 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0xF84 DUP2 PUSH2 0xDE8 JUMP JUMPDEST DUP2 EQ PUSH2 0xF8E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF9F DUP2 PUSH2 0xF7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFB7 DUP2 PUSH2 0xFA5 JUMP JUMPDEST DUP2 EQ PUSH2 0xFC1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFD2 DUP2 PUSH2 0xFAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFEF JUMPI PUSH2 0xFEE PUSH2 0xDC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFFC DUP7 DUP3 DUP8 ADD PUSH2 0xE20 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x100D DUP7 DUP3 DUP8 ADD PUSH2 0xF91 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x101E DUP7 DUP3 DUP8 ADD PUSH2 0xFC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH2 0x1032 DUP3 PUSH2 0xDC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1042 DUP2 PUSH2 0x1028 JUMP JUMPDEST DUP2 EQ PUSH2 0x104C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x105D DUP2 PUSH2 0x1039 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1079 JUMPI PUSH2 0x1078 PUSH2 0xDC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1086 DUP6 DUP3 DUP7 ADD PUSH2 0x104F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1097 DUP6 DUP3 DUP7 ADD PUSH2 0xFC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x10AA DUP2 PUSH2 0xDE8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10C3 PUSH0 DUP4 ADD DUP5 PUSH2 0x10A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x10E1 JUMPI PUSH2 0x10E0 PUSH2 0xDC1 JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10FE JUMPI PUSH2 0x10FD PUSH2 0xDC5 JUMP JUMPDEST JUMPDEST PUSH2 0x110A DUP8 DUP3 DUP9 ADD PUSH2 0xE40 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x112D JUMPI PUSH2 0x112C PUSH2 0xDC5 JUMP JUMPDEST JUMPDEST PUSH2 0x1139 DUP8 DUP3 DUP9 ADD PUSH2 0xE95 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x115C JUMPI PUSH2 0x115B PUSH2 0xDC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1169 DUP5 DUP3 DUP6 ADD PUSH2 0xF91 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6C656E6774682D6D69736D617463680000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11B6 PUSH1 0xF DUP4 PUSH2 0x1172 JUMP JUMPDEST SWAP2 POP PUSH2 0x11C1 DUP3 PUSH2 0x1182 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11E3 DUP2 PUSH2 0x11AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x124E DUP3 PUSH2 0xFA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1259 DUP4 PUSH2 0xFA5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1271 JUMPI PUSH2 0x1270 PUSH2 0x1217 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1280 DUP2 PUSH2 0xFA5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1299 PUSH0 DUP4 ADD DUP6 PUSH2 0x1277 JUMP JUMPDEST PUSH2 0x12A6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1277 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12C0 PUSH0 DUP4 ADD DUP5 PUSH2 0x1277 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x696E73756666696369656E742D65746800000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12FA PUSH1 0x10 DUP4 PUSH2 0x1172 JUMP JUMPDEST SWAP2 POP PUSH2 0x1305 DUP3 PUSH2 0x12C6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1327 DUP2 PUSH2 0x12EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1346 PUSH0 DUP4 PUSH2 0x132E JUMP JUMPDEST SWAP2 POP PUSH2 0x1351 DUP3 PUSH2 0x1338 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1365 DUP3 PUSH2 0x133B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x77697468647261772D6661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13A3 PUSH1 0xF DUP4 PUSH2 0x1172 JUMP JUMPDEST SWAP2 POP PUSH2 0x13AE DUP3 PUSH2 0x136F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13D0 DUP2 PUSH2 0x1397 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x13E5 DUP2 PUSH2 0xFAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1400 JUMPI PUSH2 0x13FF PUSH2 0xDC1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x140D DUP5 DUP3 DUP6 ADD PUSH2 0x13D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x696E73756666696369656E742D636F6E74726163742D62616C616E6365000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x144A PUSH1 0x1D DUP4 PUSH2 0x1172 JUMP JUMPDEST SWAP2 POP PUSH2 0x1455 DUP3 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1477 DUP2 PUSH2 0x143E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x76616C75652D6D69736D61746368000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14B2 PUSH1 0xE DUP4 PUSH2 0x1172 JUMP JUMPDEST SWAP2 POP PUSH2 0x14BD DUP3 PUSH2 0x147E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14DF DUP2 PUSH2 0x14A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6574682D73656E642D6661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x151A PUSH1 0xF DUP4 PUSH2 0x1172 JUMP JUMPDEST SWAP2 POP PUSH2 0x1525 DUP3 PUSH2 0x14E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1547 DUP2 PUSH2 0x150E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1582 PUSH1 0x1F DUP4 PUSH2 0x1172 JUMP JUMPDEST SWAP2 POP PUSH2 0x158D DUP3 PUSH2 0x154E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15AF DUP2 PUSH2 0x1576 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x15C9 PUSH0 DUP4 ADD DUP7 PUSH2 0x10A1 JUMP JUMPDEST PUSH2 0x15D6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x10A1 JUMP JUMPDEST PUSH2 0x15E3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1277 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x15FE PUSH0 DUP4 ADD DUP6 PUSH2 0x10A1 JUMP JUMPDEST PUSH2 0x160B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1277 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0xBA 0xD7 LT DUP15 0xD2 0xB5 PUSH2 0x543A RETURNDATASIZE 0xE5 0xB3 DIV CALLCODE CALLDATACOPY PUSH19 0x9FC7BD22663295E568F357442CD564736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "478:4064:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2338:618;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4232:201;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3860:295;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;1638:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3062:714:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1271:685;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2338:618:9;2261:21:4;:19;:21::i;:::-;2500:9:9::1;2512:10;;:17;;2500:29;;2552:7;;:14;;2547:1;:19;2539:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;2597:13;2629:9:::0;2624:76:::1;2648:1;2644;:5;2624:76;;;2679:7;;2687:1;2679:10;;;;;;;:::i;:::-;;;;;;;;2670:19;;;;;:::i;:::-;;;2651:3;;;;;2624:76;;;;2763:9;2758:118;2782:1;2778;:5;2758:118;;;2804:61;2827:10;2839;;2850:1;2839:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;2854:7;;2862:1;2854:10;;;;;;;:::i;:::-;;;;;;;;2804:5;:22;;;;:61;;;;;;:::i;:::-;2785:3;;;;;2758:118;;;;2928:10;2891:58;;2920:5;2891:58;;;2940:5;2947:1;2891:58;;;;;;;:::i;:::-;;;;;;;;2490:466;;2303:20:4::0;:18;:20::i;:::-;2338:618:9;;;;;:::o;4232:201::-;1531:13:0;:11;:13::i;:::-;2261:21:4::1;:19;:21::i;:::-;4339:30:9::2;4358:2;4362:6;4339:5;:18;;;;:30;;;;;:::i;:::-;4415:2;4384:42;;4407:5;4384:42;;;4419:6;4384:42;;;;;;:::i;:::-;;;;;;;;2303:20:4::1;:18;:20::i;:::-;4232:201:9::0;;;:::o;3860:295::-;1531:13:0;:11;:13::i;:::-;2261:21:4::1;:19;:21::i;:::-;3992:6:9::2;3967:21;:31;;3959:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;4030:7;4043:2;:7;;4058:6;4043:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4029:40;;;4087:2;4079:30;;;;;;;;;;;;:::i;:::-;;;;;;;;;4137:2;4124:24;;;4141:6;4124:24;;;;;;:::i;:::-;;;;;;;;3949:206;2303:20:4::1;:18;:20::i;:::-;3860:295:9::0;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;3062:714:9:-;1531:13:0;:11;:13::i;:::-;2261:21:4::1;:19;:21::i;:::-;3246:9:9::2;3258:10;;:17;;3246:29;;3298:7;;:14;;3293:1;:19;3285:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;3343:13;3375:9:::0;3370:76:::2;3394:1;3390;:5;3370:76;;;3425:7;;3433:1;3425:10;;;;;;;:::i;:::-;;;;;;;;3416:19;;;;;:::i;:::-;;;3397:3;;;;;3370:76;;;;3456:19;3478:5;:15;;;3502:4;3478:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3456:52;;3541:5;3526:11;:20;;3518:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;3596:9;3591:102;3615:1;3611;:5;3591:102;;;3637:45;3656:10;;3667:1;3656:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;3671:7;;3679:1;3671:10;;;;;;;:::i;:::-;;;;;;;;3637:5;:18;;;;:45;;;;;:::i;:::-;3618:3;;;;;3591:102;;;;3753:4;3708:61;;3737:5;3708:61;;;3760:5;3767:1;3708:61;;;;;;;:::i;:::-;;;;;;;;3236:540;;;2303:20:4::1;:18;:20::i;:::-;3062:714:9::0;;;;;:::o;1271:685::-;2261:21:4;:19;:21::i;:::-;1423:9:9::1;1435:10;;:17;;1423:29;;1475:7;;:14;;1470:1;:19;1462:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;1519:13;1579:9:::0;1574:76:::1;1598:1;1594;:5;1574:76;;;1629:7;;1637:1;1629:10;;;;;;;:::i;:::-;;;;;;;;1620:19;;;;;:::i;:::-;;;1601:3;;;;;1574:76;;;;1677:9;1668:5;:18;1660:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;1743:9;1738:156;1762:1;1758;:5;1738:156;;;1785:7;1798:10;;1809:1;1798:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;:18;;1824:7;;1832:1;1824:10;;;;;;;:::i;:::-;;;;;;;;1798:41;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1784:55;;;1861:2;1853:30;;;;;;;;;;;;:::i;:::-;;;;;;;;;1770:124;1765:3;;;;;1738:156;;;;1928:10;1909:40;;;1940:5;1947:1;1909:40;;;;;;;:::i;:::-;;;;;;;;1413:543;;2303:20:4::0;:18;:20::i;:::-;1271:685:9;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;2336:287:4:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;1618:188:6:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;2629:209:4:-;1716:1;2809:7;:22;;;;2629:209::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;1219:160:6:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;8370:720:6:-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;88:117:10:-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:110::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;568:110;;;:::o;684:150::-;771:38;803:5;771:38;:::i;:::-;764:5;761:49;751:77;;824:1;821;814:12;751:77;684:150;:::o;840:167::-;900:5;938:6;925:20;916:29;;954:47;995:5;954:47;:::i;:::-;840:167;;;;:::o;1013:117::-;1122:1;1119;1112:12;1136:117;1245:1;1242;1235:12;1259:117;1368:1;1365;1358:12;1399:568;1472:8;1482:6;1532:3;1525:4;1517:6;1513:17;1509:27;1499:122;;1540:79;;:::i;:::-;1499:122;1653:6;1640:20;1630:30;;1683:18;1675:6;1672:30;1669:117;;;1705:79;;:::i;:::-;1669:117;1819:4;1811:6;1807:17;1795:29;;1873:3;1865:4;1857:6;1853:17;1843:8;1839:32;1836:41;1833:128;;;1880:79;;:::i;:::-;1833:128;1399:568;;;;;:::o;1990:::-;2063:8;2073:6;2123:3;2116:4;2108:6;2104:17;2100:27;2090:122;;2131:79;;:::i;:::-;2090:122;2244:6;2231:20;2221:30;;2274:18;2266:6;2263:30;2260:117;;;2296:79;;:::i;:::-;2260:117;2410:4;2402:6;2398:17;2386:29;;2464:3;2456:4;2448:6;2444:17;2434:8;2430:32;2427:41;2424:128;;;2471:79;;:::i;:::-;2424:128;1990:568;;;;;:::o;2564:1107::-;2709:6;2717;2725;2733;2741;2790:2;2778:9;2769:7;2765:23;2761:32;2758:119;;;2796:79;;:::i;:::-;2758:119;2916:1;2941:67;3000:7;2991:6;2980:9;2976:22;2941:67;:::i;:::-;2931:77;;2887:131;3085:2;3074:9;3070:18;3057:32;3116:18;3108:6;3105:30;3102:117;;;3138:79;;:::i;:::-;3102:117;3251:80;3323:7;3314:6;3303:9;3299:22;3251:80;:::i;:::-;3233:98;;;;3028:313;3408:2;3397:9;3393:18;3380:32;3439:18;3431:6;3428:30;3425:117;;;3461:79;;:::i;:::-;3425:117;3574:80;3646:7;3637:6;3626:9;3622:22;3574:80;:::i;:::-;3556:98;;;;3351:313;2564:1107;;;;;;;;:::o;3677:122::-;3750:24;3768:5;3750:24;:::i;:::-;3743:5;3740:35;3730:63;;3789:1;3786;3779:12;3730:63;3677:122;:::o;3805:139::-;3851:5;3889:6;3876:20;3867:29;;3905:33;3932:5;3905:33;:::i;:::-;3805:139;;;;:::o;3950:77::-;3987:7;4016:5;4005:16;;3950:77;;;:::o;4033:122::-;4106:24;4124:5;4106:24;:::i;:::-;4099:5;4096:35;4086:63;;4145:1;4142;4135:12;4086:63;4033:122;:::o;4161:139::-;4207:5;4245:6;4232:20;4223:29;;4261:33;4288:5;4261:33;:::i;:::-;4161:139;;;;:::o;4306:647::-;4397:6;4405;4413;4462:2;4450:9;4441:7;4437:23;4433:32;4430:119;;;4468:79;;:::i;:::-;4430:119;4588:1;4613:67;4672:7;4663:6;4652:9;4648:22;4613:67;:::i;:::-;4603:77;;4559:131;4729:2;4755:53;4800:7;4791:6;4780:9;4776:22;4755:53;:::i;:::-;4745:63;;4700:118;4857:2;4883:53;4928:7;4919:6;4908:9;4904:22;4883:53;:::i;:::-;4873:63;;4828:118;4306:647;;;;;:::o;4959:104::-;5004:7;5033:24;5051:5;5033:24;:::i;:::-;5022:35;;4959:104;;;:::o;5069:138::-;5150:32;5176:5;5150:32;:::i;:::-;5143:5;5140:43;5130:71;;5197:1;5194;5187:12;5130:71;5069:138;:::o;5213:155::-;5267:5;5305:6;5292:20;5283:29;;5321:41;5356:5;5321:41;:::i;:::-;5213:155;;;;:::o;5374:490::-;5450:6;5458;5507:2;5495:9;5486:7;5482:23;5478:32;5475:119;;;5513:79;;:::i;:::-;5475:119;5633:1;5658:61;5711:7;5702:6;5691:9;5687:22;5658:61;:::i;:::-;5648:71;;5604:125;5768:2;5794:53;5839:7;5830:6;5819:9;5815:22;5794:53;:::i;:::-;5784:63;;5739:118;5374:490;;;;;:::o;5870:118::-;5957:24;5975:5;5957:24;:::i;:::-;5952:3;5945:37;5870:118;;:::o;5994:222::-;6087:4;6125:2;6114:9;6110:18;6102:26;;6138:71;6206:1;6195:9;6191:17;6182:6;6138:71;:::i;:::-;5994:222;;;;:::o;6222:934::-;6344:6;6352;6360;6368;6417:2;6405:9;6396:7;6392:23;6388:32;6385:119;;;6423:79;;:::i;:::-;6385:119;6571:1;6560:9;6556:17;6543:31;6601:18;6593:6;6590:30;6587:117;;;6623:79;;:::i;:::-;6587:117;6736:80;6808:7;6799:6;6788:9;6784:22;6736:80;:::i;:::-;6718:98;;;;6514:312;6893:2;6882:9;6878:18;6865:32;6924:18;6916:6;6913:30;6910:117;;;6946:79;;:::i;:::-;6910:117;7059:80;7131:7;7122:6;7111:9;7107:22;7059:80;:::i;:::-;7041:98;;;;6836:313;6222:934;;;;;;;:::o;7162:329::-;7221:6;7270:2;7258:9;7249:7;7245:23;7241:32;7238:119;;;7276:79;;:::i;:::-;7238:119;7396:1;7421:53;7466:7;7457:6;7446:9;7442:22;7421:53;:::i;:::-;7411:63;;7367:117;7162:329;;;;:::o;7497:169::-;7581:11;7615:6;7610:3;7603:19;7655:4;7650:3;7646:14;7631:29;;7497:169;;;;:::o;7672:165::-;7812:17;7808:1;7800:6;7796:14;7789:41;7672:165;:::o;7843:366::-;7985:3;8006:67;8070:2;8065:3;8006:67;:::i;:::-;7999:74;;8082:93;8171:3;8082:93;:::i;:::-;8200:2;8195:3;8191:12;8184:19;;7843:366;;;:::o;8215:419::-;8381:4;8419:2;8408:9;8404:18;8396:26;;8468:9;8462:4;8458:20;8454:1;8443:9;8439:17;8432:47;8496:131;8622:4;8496:131;:::i;:::-;8488:139;;8215:419;;;:::o;8640:180::-;8688:77;8685:1;8678:88;8785:4;8782:1;8775:15;8809:4;8806:1;8799:15;8826:180;8874:77;8871:1;8864:88;8971:4;8968:1;8961:15;8995:4;8992:1;8985:15;9012:191;9052:3;9071:20;9089:1;9071:20;:::i;:::-;9066:25;;9105:20;9123:1;9105:20;:::i;:::-;9100:25;;9148:1;9145;9141:9;9134:16;;9169:3;9166:1;9163:10;9160:36;;;9176:18;;:::i;:::-;9160:36;9012:191;;;;:::o;9209:118::-;9296:24;9314:5;9296:24;:::i;:::-;9291:3;9284:37;9209:118;;:::o;9333:332::-;9454:4;9492:2;9481:9;9477:18;9469:26;;9505:71;9573:1;9562:9;9558:17;9549:6;9505:71;:::i;:::-;9586:72;9654:2;9643:9;9639:18;9630:6;9586:72;:::i;:::-;9333:332;;;;;:::o;9671:222::-;9764:4;9802:2;9791:9;9787:18;9779:26;;9815:71;9883:1;9872:9;9868:17;9859:6;9815:71;:::i;:::-;9671:222;;;;:::o;9899:166::-;10039:18;10035:1;10027:6;10023:14;10016:42;9899:166;:::o;10071:366::-;10213:3;10234:67;10298:2;10293:3;10234:67;:::i;:::-;10227:74;;10310:93;10399:3;10310:93;:::i;:::-;10428:2;10423:3;10419:12;10412:19;;10071:366;;;:::o;10443:419::-;10609:4;10647:2;10636:9;10632:18;10624:26;;10696:9;10690:4;10686:20;10682:1;10671:9;10667:17;10660:47;10724:131;10850:4;10724:131;:::i;:::-;10716:139;;10443:419;;;:::o;10868:147::-;10969:11;11006:3;10991:18;;10868:147;;;;:::o;11021:114::-;;:::o;11141:398::-;11300:3;11321:83;11402:1;11397:3;11321:83;:::i;:::-;11314:90;;11413:93;11502:3;11413:93;:::i;:::-;11531:1;11526:3;11522:11;11515:18;;11141:398;;;:::o;11545:379::-;11729:3;11751:147;11894:3;11751:147;:::i;:::-;11744:154;;11915:3;11908:10;;11545:379;;;:::o;11930:165::-;12070:17;12066:1;12058:6;12054:14;12047:41;11930:165;:::o;12101:366::-;12243:3;12264:67;12328:2;12323:3;12264:67;:::i;:::-;12257:74;;12340:93;12429:3;12340:93;:::i;:::-;12458:2;12453:3;12449:12;12442:19;;12101:366;;;:::o;12473:419::-;12639:4;12677:2;12666:9;12662:18;12654:26;;12726:9;12720:4;12716:20;12712:1;12701:9;12697:17;12690:47;12754:131;12880:4;12754:131;:::i;:::-;12746:139;;12473:419;;;:::o;12898:143::-;12955:5;12986:6;12980:13;12971:22;;13002:33;13029:5;13002:33;:::i;:::-;12898:143;;;;:::o;13047:351::-;13117:6;13166:2;13154:9;13145:7;13141:23;13137:32;13134:119;;;13172:79;;:::i;:::-;13134:119;13292:1;13317:64;13373:7;13364:6;13353:9;13349:22;13317:64;:::i;:::-;13307:74;;13263:128;13047:351;;;;:::o;13404:179::-;13544:31;13540:1;13532:6;13528:14;13521:55;13404:179;:::o;13589:366::-;13731:3;13752:67;13816:2;13811:3;13752:67;:::i;:::-;13745:74;;13828:93;13917:3;13828:93;:::i;:::-;13946:2;13941:3;13937:12;13930:19;;13589:366;;;:::o;13961:419::-;14127:4;14165:2;14154:9;14150:18;14142:26;;14214:9;14208:4;14204:20;14200:1;14189:9;14185:17;14178:47;14242:131;14368:4;14242:131;:::i;:::-;14234:139;;13961:419;;;:::o;14386:164::-;14526:16;14522:1;14514:6;14510:14;14503:40;14386:164;:::o;14556:366::-;14698:3;14719:67;14783:2;14778:3;14719:67;:::i;:::-;14712:74;;14795:93;14884:3;14795:93;:::i;:::-;14913:2;14908:3;14904:12;14897:19;;14556:366;;;:::o;14928:419::-;15094:4;15132:2;15121:9;15117:18;15109:26;;15181:9;15175:4;15171:20;15167:1;15156:9;15152:17;15145:47;15209:131;15335:4;15209:131;:::i;:::-;15201:139;;14928:419;;;:::o;15353:165::-;15493:17;15489:1;15481:6;15477:14;15470:41;15353:165;:::o;15524:366::-;15666:3;15687:67;15751:2;15746:3;15687:67;:::i;:::-;15680:74;;15763:93;15852:3;15763:93;:::i;:::-;15881:2;15876:3;15872:12;15865:19;;15524:366;;;:::o;15896:419::-;16062:4;16100:2;16089:9;16085:18;16077:26;;16149:9;16143:4;16139:20;16135:1;16124:9;16120:17;16113:47;16177:131;16303:4;16177:131;:::i;:::-;16169:139;;15896:419;;;:::o;16321:181::-;16461:33;16457:1;16449:6;16445:14;16438:57;16321:181;:::o;16508:366::-;16650:3;16671:67;16735:2;16730:3;16671:67;:::i;:::-;16664:74;;16747:93;16836:3;16747:93;:::i;:::-;16865:2;16860:3;16856:12;16849:19;;16508:366;;;:::o;16880:419::-;17046:4;17084:2;17073:9;17069:18;17061:26;;17133:9;17127:4;17123:20;17119:1;17108:9;17104:17;17097:47;17161:131;17287:4;17161:131;:::i;:::-;17153:139;;16880:419;;;:::o;17305:442::-;17454:4;17492:2;17481:9;17477:18;17469:26;;17505:71;17573:1;17562:9;17558:17;17549:6;17505:71;:::i;:::-;17586:72;17654:2;17643:9;17639:18;17630:6;17586:72;:::i;:::-;17668;17736:2;17725:9;17721:18;17712:6;17668:72;:::i;:::-;17305:442;;;;;;:::o;17753:332::-;17874:4;17912:2;17901:9;17897:18;17889:26;;17925:71;17993:1;17982:9;17978:17;17969:6;17925:71;:::i;:::-;18006:72;18074:2;18063:9;18059:18;18050:6;18006:72;:::i;:::-;17753:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1140800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "173",
								"bulkTransferERC20(address,address[],uint256[])": "infinite",
								"bulkTransferERC20FromContract(address,address[],uint256[])": "infinite",
								"bulkTransferETH(address[],uint256[])": "infinite",
								"owner()": "2515",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"withdrawERC20(address,address,uint256)": "infinite",
								"withdrawETH(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 478,
									"end": 4542,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 478,
									"end": 4542,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 478,
									"end": 4542,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 926,
									"end": 963,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 926,
									"end": 963,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 926,
									"end": 963,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 926,
									"end": 963,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 926,
									"end": 963,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 926,
									"end": 963,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 963,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 926,
									"end": 963,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 926,
									"end": 963,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 926,
									"end": 963,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 926,
									"end": 963,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 948,
									"end": 958,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 478,
									"end": 4542,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 478,
									"end": 4542,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"name": "tag",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 365,
									"end": 587,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 458,
									"end": 462,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 473,
									"end": 499,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 473,
									"end": 499,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 575,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 562,
									"end": 579,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 553,
									"end": 559,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 509,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 509,
									"end": 580,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 509,
									"end": 580,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 365,
									"end": 587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 478,
									"end": 4542,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 478,
									"end": 4542,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 478,
									"end": 4542,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 478,
									"end": 4542,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 478,
									"end": 4542,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 478,
									"end": 4542,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 478,
									"end": 4542,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 478,
									"end": 4542,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 478,
									"end": 4542,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f7bad7108ed2b561543a3de5b304f23772009fc7bd22663295e568f357442cd564736f6c634300081a0033",
									".code": [
										{
											"begin": 478,
											"end": 4542,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "PUSH",
											"source": 9,
											"value": "9F62EAFE"
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "PUSH",
											"source": 9,
											"value": "B874FA6A"
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "PUSH",
											"source": 9,
											"value": "3E46CD53"
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "PUSH",
											"source": 9,
											"value": "44004CC1"
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "PUSH",
											"source": 9,
											"value": "4782F779"
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 478,
											"end": 4542,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2338,
											"end": 2956,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2338,
											"end": 2956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2338,
											"end": 2956,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2338,
											"end": 2956,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2338,
											"end": 2956,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2338,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 2338,
											"end": 2956,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2338,
											"end": 2956,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2338,
											"end": 2956,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2338,
											"end": 2956,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2338,
											"end": 2956,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 2338,
											"end": 2956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2338,
											"end": 2956,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2338,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 2338,
											"end": 2956,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2338,
											"end": 2956,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2338,
											"end": 2956,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2338,
											"end": 2956,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2338,
											"end": 2956,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2338,
											"end": 2956,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2338,
											"end": 2956,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2338,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 2338,
											"end": 2956,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2338,
											"end": 2956,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2338,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 2338,
											"end": 2956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2338,
											"end": 2956,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 2338,
											"end": 2956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2338,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2338,
											"end": 2956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2338,
											"end": 2956,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 2338,
											"end": 2956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2338,
											"end": 2956,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4433,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4232,
											"end": 4433,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4433,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4433,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4433,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 4232,
											"end": 4433,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4433,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4232,
											"end": 4433,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4433,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4433,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 4232,
											"end": 4433,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4433,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 4232,
											"end": 4433,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4232,
											"end": 4433,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4433,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4433,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4433,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4433,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4433,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 4232,
											"end": 4433,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4433,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4232,
											"end": 4433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4433,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 4232,
											"end": 4433,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 4232,
											"end": 4433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4433,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 4232,
											"end": 4433,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4433,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3860,
											"end": 4155,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3860,
											"end": 4155,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3860,
											"end": 4155,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3860,
											"end": 4155,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3860,
											"end": 4155,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3860,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 3860,
											"end": 4155,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3860,
											"end": 4155,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3860,
											"end": 4155,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3860,
											"end": 4155,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3860,
											"end": 4155,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 3860,
											"end": 4155,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3860,
											"end": 4155,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3860,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 3860,
											"end": 4155,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3860,
											"end": 4155,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3860,
											"end": 4155,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3860,
											"end": 4155,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3860,
											"end": 4155,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3860,
											"end": 4155,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3860,
											"end": 4155,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3860,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 3860,
											"end": 4155,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3860,
											"end": 4155,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3860,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 3860,
											"end": 4155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3860,
											"end": 4155,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 3860,
											"end": 4155,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3860,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 3860,
											"end": 4155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3860,
											"end": 4155,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 3860,
											"end": 4155,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3860,
											"end": 4155,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3776,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 3062,
											"end": 3776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3062,
											"end": 3776,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3062,
											"end": 3776,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3062,
											"end": 3776,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3062,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 3062,
											"end": 3776,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3062,
											"end": 3776,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3062,
											"end": 3776,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3062,
											"end": 3776,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3062,
											"end": 3776,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 3062,
											"end": 3776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3062,
											"end": 3776,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3062,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3062,
											"end": 3776,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3062,
											"end": 3776,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3062,
											"end": 3776,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3062,
											"end": 3776,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3062,
											"end": 3776,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3062,
											"end": 3776,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3062,
											"end": 3776,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3062,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 3062,
											"end": 3776,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3062,
											"end": 3776,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3062,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 3062,
											"end": 3776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3062,
											"end": 3776,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 3062,
											"end": 3776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3062,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 3062,
											"end": 3776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3062,
											"end": 3776,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3062,
											"end": 3776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3062,
											"end": 3776,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1271,
											"end": 1956,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1271,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1271,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1271,
											"end": 1956,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1271,
											"end": 1956,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1271,
											"end": 1956,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1271,
											"end": 1956,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1271,
											"end": 1956,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1271,
											"end": 1956,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1271,
											"end": 1956,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1271,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1271,
											"end": 1956,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1271,
											"end": 1956,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1271,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1271,
											"end": 1956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1271,
											"end": 1956,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1271,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1271,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1271,
											"end": 1956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1271,
											"end": 1956,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1271,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1271,
											"end": 1956,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2338,
											"end": 2956,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2338,
											"end": 2956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2512,
											"end": 2522,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2512,
											"end": 2522,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2512,
											"end": 2529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2512,
											"end": 2529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2552,
											"end": 2559,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2552,
											"end": 2559,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2552,
											"end": 2566,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2552,
											"end": 2566,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2547,
											"end": 2548,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2547,
											"end": 2566,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 2586,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 2539,
											"end": 2586,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 2586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2539,
											"end": 2586,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 2586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2539,
											"end": 2586,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 2586,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 2586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2539,
											"end": 2586,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 2586,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 2539,
											"end": 2586,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 2586,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 2539,
											"end": 2586,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 2586,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 2539,
											"end": 2586,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 2586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2539,
											"end": 2586,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 2586,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 2586,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 2586,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 2586,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 2586,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 2586,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 2539,
											"end": 2586,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2597,
											"end": 2610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2629,
											"end": 2638,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2624,
											"end": 2700,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 2624,
											"end": 2700,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2648,
											"end": 2649,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2644,
											"end": 2645,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2644,
											"end": 2649,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2624,
											"end": 2700,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2624,
											"end": 2700,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2624,
											"end": 2700,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2679,
											"end": 2686,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2679,
											"end": 2686,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2688,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2679,
											"end": 2689,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2679,
											"end": 2689,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2679,
											"end": 2689,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2679,
											"end": 2689,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 2679,
											"end": 2689,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2679,
											"end": 2689,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 2679,
											"end": 2689,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2679,
											"end": 2689,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2679,
											"end": 2689,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 2679,
											"end": 2689,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2679,
											"end": 2689,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 2679,
											"end": 2689,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2679,
											"end": 2689,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2679,
											"end": 2689,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2679,
											"end": 2689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2679,
											"end": 2689,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2679,
											"end": 2689,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2679,
											"end": 2689,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2670,
											"end": 2689,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2670,
											"end": 2689,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 2670,
											"end": 2689,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2670,
											"end": 2689,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2670,
											"end": 2689,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 2670,
											"end": 2689,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2670,
											"end": 2689,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 2670,
											"end": 2689,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2670,
											"end": 2689,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2670,
											"end": 2689,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2651,
											"end": 2654,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2651,
											"end": 2654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2651,
											"end": 2654,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2651,
											"end": 2654,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2651,
											"end": 2654,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2624,
											"end": 2700,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 2624,
											"end": 2700,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2624,
											"end": 2700,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2624,
											"end": 2700,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2624,
											"end": 2700,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2758,
											"end": 2876,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 2758,
											"end": 2876,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2782,
											"end": 2783,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2778,
											"end": 2779,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2778,
											"end": 2783,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 2876,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 2876,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 2758,
											"end": 2876,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2804,
											"end": 2865,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 2827,
											"end": 2837,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2849,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2849,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2850,
											"end": 2851,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2852,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2852,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2852,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2852,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 2839,
											"end": 2852,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2852,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 2839,
											"end": 2852,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2839,
											"end": 2852,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2852,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 2839,
											"end": 2852,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2852,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 2839,
											"end": 2852,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2852,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2852,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2852,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2852,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2852,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2852,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2852,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2852,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 2839,
											"end": 2852,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2852,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2852,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 2839,
											"end": 2852,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2852,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 2839,
											"end": 2852,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2854,
											"end": 2861,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2854,
											"end": 2861,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2862,
											"end": 2863,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2854,
											"end": 2864,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2854,
											"end": 2864,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2854,
											"end": 2864,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2854,
											"end": 2864,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 2854,
											"end": 2864,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2854,
											"end": 2864,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 2854,
											"end": 2864,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2854,
											"end": 2864,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2854,
											"end": 2864,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 2854,
											"end": 2864,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2854,
											"end": 2864,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 2854,
											"end": 2864,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2854,
											"end": 2864,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2854,
											"end": 2864,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2854,
											"end": 2864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2854,
											"end": 2864,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2854,
											"end": 2864,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2854,
											"end": 2864,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2804,
											"end": 2809,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 2804,
											"end": 2826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2804,
											"end": 2826,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2804,
											"end": 2826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 2804,
											"end": 2826,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2804,
											"end": 2865,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2804,
											"end": 2865,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2804,
											"end": 2865,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2804,
											"end": 2865,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2804,
											"end": 2865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2804,
											"end": 2865,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2804,
											"end": 2865,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2804,
											"end": 2865,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 2804,
											"end": 2865,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2785,
											"end": 2788,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2785,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2785,
											"end": 2788,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2785,
											"end": 2788,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2785,
											"end": 2788,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 2876,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 2758,
											"end": 2876,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 2876,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 2758,
											"end": 2876,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 2876,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2928,
											"end": 2938,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2891,
											"end": 2949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2891,
											"end": 2949,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2920,
											"end": 2925,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2891,
											"end": 2949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2891,
											"end": 2949,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2891,
											"end": 2949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8A88AD5EB4D4ACFB8C47FCC9C5B0E66C5162EA704DD1E08CCE235927434E18D2"
										},
										{
											"begin": 2940,
											"end": 2945,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2947,
											"end": 2948,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2891,
											"end": 2949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2891,
											"end": 2949,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2891,
											"end": 2949,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 2891,
											"end": 2949,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2891,
											"end": 2949,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2891,
											"end": 2949,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2891,
											"end": 2949,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 2891,
											"end": 2949,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2891,
											"end": 2949,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 2891,
											"end": 2949,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2891,
											"end": 2949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2891,
											"end": 2949,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2891,
											"end": 2949,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2891,
											"end": 2949,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2891,
											"end": 2949,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2891,
											"end": 2949,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2891,
											"end": 2949,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 2490,
											"end": 2956,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2490,
											"end": 2956,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2338,
											"end": 2956,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2338,
											"end": 2956,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2338,
											"end": 2956,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2338,
											"end": 2956,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2338,
											"end": 2956,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2338,
											"end": 2956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4433,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 4232,
											"end": 4433,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4339,
											"end": 4369,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 4358,
											"end": 4360,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4368,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4344,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4357,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4339,
											"end": 4357,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4357,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 4339,
											"end": 4357,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4369,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4369,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4369,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4369,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4339,
											"end": 4369,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4369,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4369,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 4339,
											"end": 4369,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4415,
											"end": 4417,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4384,
											"end": 4426,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4384,
											"end": 4426,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4407,
											"end": 4412,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4384,
											"end": 4426,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4384,
											"end": 4426,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4384,
											"end": 4426,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "BFED55BDCD242E3DD0F60DDD7D1E87C67F61C34CD9527B3E6455D841B1025362"
										},
										{
											"begin": 4419,
											"end": 4425,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4384,
											"end": 4426,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4384,
											"end": 4426,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4384,
											"end": 4426,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 4384,
											"end": 4426,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4384,
											"end": 4426,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4384,
											"end": 4426,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 4384,
											"end": 4426,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4384,
											"end": 4426,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 4384,
											"end": 4426,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4384,
											"end": 4426,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4384,
											"end": 4426,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4384,
											"end": 4426,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4384,
											"end": 4426,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4384,
											"end": 4426,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4384,
											"end": 4426,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4384,
											"end": 4426,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4232,
											"end": 4433,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4433,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4433,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3860,
											"end": 4155,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 3860,
											"end": 4155,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3992,
											"end": 3998,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3967,
											"end": 3988,
											"modifierDepth": 2,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 3967,
											"end": 3998,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3967,
											"end": 3998,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3959,
											"end": 4019,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 3959,
											"end": 4019,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3959,
											"end": 4019,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3959,
											"end": 4019,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3959,
											"end": 4019,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3959,
											"end": 4019,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3959,
											"end": 4019,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3959,
											"end": 4019,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3959,
											"end": 4019,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3959,
											"end": 4019,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 3959,
											"end": 4019,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3959,
											"end": 4019,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 3959,
											"end": 4019,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3959,
											"end": 4019,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 3959,
											"end": 4019,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3959,
											"end": 4019,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3959,
											"end": 4019,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3959,
											"end": 4019,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3959,
											"end": 4019,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3959,
											"end": 4019,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3959,
											"end": 4019,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3959,
											"end": 4019,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3959,
											"end": 4019,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 3959,
											"end": 4019,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4030,
											"end": 4037,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4043,
											"end": 4045,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4050,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4043,
											"end": 4050,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4064,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 4043,
											"end": 4069,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4043,
											"end": 4069,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4029,
											"end": 4069,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4029,
											"end": 4069,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4029,
											"end": 4069,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4087,
											"end": 4089,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4079,
											"end": 4109,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 4079,
											"end": 4109,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4079,
											"end": 4109,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4079,
											"end": 4109,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4079,
											"end": 4109,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4079,
											"end": 4109,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4079,
											"end": 4109,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4079,
											"end": 4109,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4079,
											"end": 4109,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4079,
											"end": 4109,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 4079,
											"end": 4109,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4079,
											"end": 4109,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 4079,
											"end": 4109,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4079,
											"end": 4109,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 4079,
											"end": 4109,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4079,
											"end": 4109,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4079,
											"end": 4109,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4079,
											"end": 4109,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4079,
											"end": 4109,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4079,
											"end": 4109,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4079,
											"end": 4109,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4079,
											"end": 4109,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4079,
											"end": 4109,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 4079,
											"end": 4109,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4137,
											"end": 4139,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4124,
											"end": 4148,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4124,
											"end": 4148,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4124,
											"end": 4148,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "94B2DE810873337ED265C5F8CF98C9CFFEFA06B8607F9A2F1FBAEBDFBCFBEF1C"
										},
										{
											"begin": 4141,
											"end": 4147,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4124,
											"end": 4148,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4124,
											"end": 4148,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4124,
											"end": 4148,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 4124,
											"end": 4148,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4124,
											"end": 4148,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4124,
											"end": 4148,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 4124,
											"end": 4148,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4124,
											"end": 4148,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 4124,
											"end": 4148,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4124,
											"end": 4148,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4124,
											"end": 4148,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4124,
											"end": 4148,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4124,
											"end": 4148,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4124,
											"end": 4148,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4124,
											"end": 4148,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4124,
											"end": 4148,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 3949,
											"end": 4155,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 4155,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3860,
											"end": 4155,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3860,
											"end": 4155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3776,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 3062,
											"end": 3776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3246,
											"end": 3255,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3258,
											"end": 3268,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3258,
											"end": 3268,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3258,
											"end": 3275,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3258,
											"end": 3275,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3246,
											"end": 3275,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3246,
											"end": 3275,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3305,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3305,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3312,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3298,
											"end": 3312,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3293,
											"end": 3294,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3293,
											"end": 3312,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3285,
											"end": 3332,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 3285,
											"end": 3332,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3285,
											"end": 3332,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3285,
											"end": 3332,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3285,
											"end": 3332,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3285,
											"end": 3332,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3285,
											"end": 3332,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3285,
											"end": 3332,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3285,
											"end": 3332,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3285,
											"end": 3332,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 3285,
											"end": 3332,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3285,
											"end": 3332,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 3285,
											"end": 3332,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3285,
											"end": 3332,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 3285,
											"end": 3332,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3285,
											"end": 3332,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3285,
											"end": 3332,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3285,
											"end": 3332,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3285,
											"end": 3332,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3285,
											"end": 3332,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3285,
											"end": 3332,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3285,
											"end": 3332,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3285,
											"end": 3332,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 3285,
											"end": 3332,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3343,
											"end": 3356,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3375,
											"end": 3384,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3370,
											"end": 3446,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 3370,
											"end": 3446,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3395,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3390,
											"end": 3391,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3390,
											"end": 3395,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3370,
											"end": 3446,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3370,
											"end": 3446,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 3370,
											"end": 3446,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3425,
											"end": 3432,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3425,
											"end": 3432,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3433,
											"end": 3434,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3425,
											"end": 3435,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3425,
											"end": 3435,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3425,
											"end": 3435,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3425,
											"end": 3435,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 3425,
											"end": 3435,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3425,
											"end": 3435,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 3425,
											"end": 3435,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3425,
											"end": 3435,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3425,
											"end": 3435,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 3425,
											"end": 3435,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3425,
											"end": 3435,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 3425,
											"end": 3435,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3425,
											"end": 3435,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3425,
											"end": 3435,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3425,
											"end": 3435,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3425,
											"end": 3435,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3425,
											"end": 3435,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3425,
											"end": 3435,
											"modifierDepth": 2,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3435,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3435,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 3416,
											"end": 3435,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3435,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3435,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 3416,
											"end": 3435,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3435,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 3416,
											"end": 3435,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3435,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3435,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3397,
											"end": 3400,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3397,
											"end": 3400,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3397,
											"end": 3400,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3397,
											"end": 3400,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3397,
											"end": 3400,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3370,
											"end": 3446,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 3370,
											"end": 3446,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3370,
											"end": 3446,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 3370,
											"end": 3446,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3370,
											"end": 3446,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3456,
											"end": 3475,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3478,
											"end": 3483,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3493,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3478,
											"end": 3493,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3493,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 3502,
											"end": 3506,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 3478,
											"end": 3508,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3478,
											"end": 3508,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 3478,
											"end": 3508,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 3478,
											"end": 3508,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3456,
											"end": 3508,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3456,
											"end": 3508,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3541,
											"end": 3546,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3526,
											"end": 3537,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3526,
											"end": 3546,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3526,
											"end": 3546,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3518,
											"end": 3580,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 3518,
											"end": 3580,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3518,
											"end": 3580,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3518,
											"end": 3580,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3518,
											"end": 3580,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3518,
											"end": 3580,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3518,
											"end": 3580,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3518,
											"end": 3580,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3518,
											"end": 3580,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3518,
											"end": 3580,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 3518,
											"end": 3580,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3518,
											"end": 3580,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 3518,
											"end": 3580,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3518,
											"end": 3580,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 3518,
											"end": 3580,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3518,
											"end": 3580,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3518,
											"end": 3580,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3518,
											"end": 3580,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3518,
											"end": 3580,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3518,
											"end": 3580,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3518,
											"end": 3580,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3518,
											"end": 3580,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3518,
											"end": 3580,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 3518,
											"end": 3580,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3596,
											"end": 3605,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3591,
											"end": 3693,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 3591,
											"end": 3693,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3615,
											"end": 3616,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3611,
											"end": 3612,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3611,
											"end": 3616,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3591,
											"end": 3693,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3591,
											"end": 3693,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 3591,
											"end": 3693,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3682,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 3656,
											"end": 3666,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3656,
											"end": 3666,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3668,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3656,
											"end": 3669,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3656,
											"end": 3669,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3656,
											"end": 3669,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3656,
											"end": 3669,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 3656,
											"end": 3669,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3656,
											"end": 3669,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 3656,
											"end": 3669,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3656,
											"end": 3669,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3656,
											"end": 3669,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 3656,
											"end": 3669,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3656,
											"end": 3669,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 3656,
											"end": 3669,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3656,
											"end": 3669,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3656,
											"end": 3669,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3656,
											"end": 3669,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3656,
											"end": 3669,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3656,
											"end": 3669,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3656,
											"end": 3669,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3656,
											"end": 3669,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3656,
											"end": 3669,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3656,
											"end": 3669,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3656,
											"end": 3669,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 3656,
											"end": 3669,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3656,
											"end": 3669,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3656,
											"end": 3669,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 3656,
											"end": 3669,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3656,
											"end": 3669,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 3656,
											"end": 3669,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3671,
											"end": 3678,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3671,
											"end": 3678,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3679,
											"end": 3680,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3671,
											"end": 3681,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3671,
											"end": 3681,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3671,
											"end": 3681,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3671,
											"end": 3681,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 3671,
											"end": 3681,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3671,
											"end": 3681,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 3671,
											"end": 3681,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3671,
											"end": 3681,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3671,
											"end": 3681,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 3671,
											"end": 3681,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3671,
											"end": 3681,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 3671,
											"end": 3681,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3671,
											"end": 3681,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3671,
											"end": 3681,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3671,
											"end": 3681,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3671,
											"end": 3681,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3671,
											"end": 3681,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3671,
											"end": 3681,
											"modifierDepth": 2,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3642,
											"modifierDepth": 2,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3655,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3637,
											"end": 3655,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3655,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 3637,
											"end": 3655,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3682,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3682,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3682,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3682,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3637,
											"end": 3682,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3682,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3682,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 3637,
											"end": 3682,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3618,
											"end": 3621,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3618,
											"end": 3621,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3618,
											"end": 3621,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3618,
											"end": 3621,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3618,
											"end": 3621,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3591,
											"end": 3693,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 3591,
											"end": 3693,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3591,
											"end": 3693,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 3591,
											"end": 3693,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3591,
											"end": 3693,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3753,
											"end": 3757,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3769,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3708,
											"end": 3769,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3737,
											"end": 3742,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3769,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3708,
											"end": 3769,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3769,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8A88AD5EB4D4ACFB8C47FCC9C5B0E66C5162EA704DD1E08CCE235927434E18D2"
										},
										{
											"begin": 3760,
											"end": 3765,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3767,
											"end": 3768,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3769,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3769,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3769,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 3708,
											"end": 3769,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3769,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3769,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3769,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 3708,
											"end": 3769,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3769,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 3708,
											"end": 3769,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3769,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3769,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3769,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3769,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3769,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3769,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3769,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 3236,
											"end": 3776,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3236,
											"end": 3776,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3236,
											"end": 3776,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3062,
											"end": 3776,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3062,
											"end": 3776,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3062,
											"end": 3776,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3062,
											"end": 3776,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3062,
											"end": 3776,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3062,
											"end": 3776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1271,
											"end": 1956,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1271,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1423,
											"end": 1432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1435,
											"end": 1445,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1435,
											"end": 1445,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1435,
											"end": 1452,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1435,
											"end": 1452,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1452,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1452,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1482,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1482,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1489,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1489,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1470,
											"end": 1471,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1470,
											"end": 1489,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1509,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 1462,
											"end": 1509,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1462,
											"end": 1509,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1462,
											"end": 1509,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1509,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1462,
											"end": 1509,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1509,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 1462,
											"end": 1509,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1509,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1462,
											"end": 1509,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1509,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 1462,
											"end": 1509,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1462,
											"end": 1509,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1509,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1509,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1509,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1509,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1509,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1509,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 1462,
											"end": 1509,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1519,
											"end": 1532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 1588,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1650,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 1574,
											"end": 1650,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1599,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1594,
											"end": 1595,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1594,
											"end": 1599,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1650,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1650,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 1574,
											"end": 1650,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1636,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1636,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1637,
											"end": 1638,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1639,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1639,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1639,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1639,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 1629,
											"end": 1639,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1639,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 1629,
											"end": 1639,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1629,
											"end": 1639,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1639,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 1629,
											"end": 1639,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1639,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 1629,
											"end": 1639,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1639,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1639,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1639,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1629,
											"end": 1639,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1639,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1639,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1620,
											"end": 1639,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1620,
											"end": 1639,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 1620,
											"end": 1639,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1620,
											"end": 1639,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1620,
											"end": 1639,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 1620,
											"end": 1639,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1620,
											"end": 1639,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 1620,
											"end": 1639,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1620,
											"end": 1639,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1620,
											"end": 1639,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1601,
											"end": 1604,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1601,
											"end": 1604,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1601,
											"end": 1604,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1601,
											"end": 1604,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1601,
											"end": 1604,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1650,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 1574,
											"end": 1650,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1650,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 1574,
											"end": 1650,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1574,
											"end": 1650,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1677,
											"end": 1686,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1673,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1686,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1705,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 1660,
											"end": 1705,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1660,
											"end": 1705,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1660,
											"end": 1705,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1705,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1660,
											"end": 1705,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1705,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 1660,
											"end": 1705,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1705,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 1660,
											"end": 1705,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1705,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 1660,
											"end": 1705,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1660,
											"end": 1705,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1705,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1705,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1705,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1705,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1705,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1705,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 1660,
											"end": 1705,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1743,
											"end": 1752,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1894,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 1738,
											"end": 1894,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1762,
											"end": 1763,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1758,
											"end": 1759,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1758,
											"end": 1763,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1738,
											"end": 1894,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1738,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 1738,
											"end": 1894,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1785,
											"end": 1792,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1798,
											"end": 1808,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1808,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1809,
											"end": 1810,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1811,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1811,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1811,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1811,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 1798,
											"end": 1811,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1811,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 1798,
											"end": 1811,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1798,
											"end": 1811,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1811,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 1798,
											"end": 1811,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1811,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 1798,
											"end": 1811,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1811,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1811,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1798,
											"end": 1811,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1811,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1798,
											"end": 1811,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1811,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1811,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1811,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 1798,
											"end": 1811,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1811,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1811,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 1798,
											"end": 1811,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1811,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 1798,
											"end": 1811,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1816,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1798,
											"end": 1816,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1824,
											"end": 1831,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1824,
											"end": 1831,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1832,
											"end": 1833,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1824,
											"end": 1834,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1824,
											"end": 1834,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1824,
											"end": 1834,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1824,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 1824,
											"end": 1834,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1824,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 1824,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1824,
											"end": 1834,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1824,
											"end": 1834,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 1824,
											"end": 1834,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1824,
											"end": 1834,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 1824,
											"end": 1834,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1824,
											"end": 1834,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1824,
											"end": 1834,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1824,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1824,
											"end": 1834,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1824,
											"end": 1834,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1824,
											"end": 1834,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 1798,
											"end": 1839,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 1839,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1784,
											"end": 1839,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1784,
											"end": 1839,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1784,
											"end": 1839,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1861,
											"end": 1863,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1853,
											"end": 1883,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 1853,
											"end": 1883,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1853,
											"end": 1883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1853,
											"end": 1883,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1853,
											"end": 1883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1853,
											"end": 1883,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1853,
											"end": 1883,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1853,
											"end": 1883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1853,
											"end": 1883,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1853,
											"end": 1883,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 1853,
											"end": 1883,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1853,
											"end": 1883,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 1853,
											"end": 1883,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1853,
											"end": 1883,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 1853,
											"end": 1883,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1853,
											"end": 1883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1853,
											"end": 1883,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1853,
											"end": 1883,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1853,
											"end": 1883,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1853,
											"end": 1883,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1853,
											"end": 1883,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1853,
											"end": 1883,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1853,
											"end": 1883,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 1853,
											"end": 1883,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1770,
											"end": 1894,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1765,
											"end": 1768,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1765,
											"end": 1768,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1765,
											"end": 1768,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1765,
											"end": 1768,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1765,
											"end": 1768,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1738,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 1738,
											"end": 1894,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1738,
											"end": 1894,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 1738,
											"end": 1894,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1738,
											"end": 1894,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1938,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1909,
											"end": 1949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1909,
											"end": 1949,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1909,
											"end": 1949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "45D6845DD4F0BDD735A522E3076F82702E80547A0E2B1304A2E483BCA6D9CDC4"
										},
										{
											"begin": 1940,
											"end": 1945,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1947,
											"end": 1948,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1909,
											"end": 1949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1909,
											"end": 1949,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1909,
											"end": 1949,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 1909,
											"end": 1949,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1909,
											"end": 1949,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1909,
											"end": 1949,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1909,
											"end": 1949,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 1909,
											"end": 1949,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1909,
											"end": 1949,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 1909,
											"end": 1949,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1909,
											"end": 1949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1909,
											"end": 1949,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1909,
											"end": 1949,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1909,
											"end": 1949,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1909,
											"end": 1949,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1909,
											"end": 1949,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1909,
											"end": 1949,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 1413,
											"end": 1956,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1413,
											"end": 1956,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1271,
											"end": 1956,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1271,
											"end": 1956,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1271,
											"end": 1956,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1271,
											"end": 1956,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1271,
											"end": 1956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8532,
											"end": 8928,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8952,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 8973,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9066,
											"end": 9071,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 9033,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 568,
											"end": 678,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 568,
											"end": 678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 619,
											"end": 626,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 648,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 666,
											"end": 671,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 648,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 648,
											"end": 672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 648,
											"end": 672,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 648,
											"end": 672,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 637,
											"end": 672,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 637,
											"end": 672,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 568,
											"end": 678,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 568,
											"end": 678,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 568,
											"end": 678,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 568,
											"end": 678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 684,
											"end": 834,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 684,
											"end": 834,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 771,
											"end": 809,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 803,
											"end": 808,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 771,
											"end": 809,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 771,
											"end": 809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 771,
											"end": 809,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 771,
											"end": 809,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 764,
											"end": 769,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 761,
											"end": 810,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 751,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 751,
											"end": 828,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 824,
											"end": 825,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 822,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 814,
											"end": 826,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 751,
											"end": 828,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 751,
											"end": 828,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 684,
											"end": 834,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 684,
											"end": 834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 840,
											"end": 1007,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 840,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 900,
											"end": 905,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 938,
											"end": 944,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 925,
											"end": 945,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 916,
											"end": 945,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 916,
											"end": 945,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 954,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 995,
											"end": 1000,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 954,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 954,
											"end": 1001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 954,
											"end": 1001,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 954,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 840,
											"end": 1007,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 840,
											"end": 1007,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 840,
											"end": 1007,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 840,
											"end": 1007,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 840,
											"end": 1007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1013,
											"end": 1130,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 1013,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1122,
											"end": 1123,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1119,
											"end": 1120,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1112,
											"end": 1124,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1136,
											"end": 1253,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 1136,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1245,
											"end": 1246,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1243,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1235,
											"end": 1247,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1376,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 1259,
											"end": 1376,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1368,
											"end": 1369,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1365,
											"end": 1366,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1967,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 1399,
											"end": 1967,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1472,
											"end": 1480,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 1488,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1532,
											"end": 1535,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1525,
											"end": 1529,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1517,
											"end": 1523,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1513,
											"end": 1530,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1509,
											"end": 1536,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 1499,
											"end": 1621,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1540,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 1540,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 1540,
											"end": 1619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1540,
											"end": 1619,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 1540,
											"end": 1619,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1621,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 1499,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1653,
											"end": 1659,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1640,
											"end": 1660,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1630,
											"end": 1660,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1630,
											"end": 1660,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1683,
											"end": 1701,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1675,
											"end": 1681,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1672,
											"end": 1702,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1669,
											"end": 1786,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1669,
											"end": 1786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 1669,
											"end": 1786,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 1705,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 1705,
											"end": 1784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1784,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 1705,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1669,
											"end": 1786,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 1669,
											"end": 1786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1819,
											"end": 1823,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1811,
											"end": 1817,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1807,
											"end": 1824,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1795,
											"end": 1824,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1795,
											"end": 1824,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1873,
											"end": 1876,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1865,
											"end": 1869,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1857,
											"end": 1863,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1853,
											"end": 1870,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1843,
											"end": 1851,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1839,
											"end": 1871,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1836,
											"end": 1877,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1833,
											"end": 1961,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1833,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 1833,
											"end": 1961,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1880,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 1880,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 1880,
											"end": 1959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1880,
											"end": 1959,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 1880,
											"end": 1959,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1833,
											"end": 1961,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 1833,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1967,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1967,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1967,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1967,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1967,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2558,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 1990,
											"end": 2558,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2063,
											"end": 2071,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2073,
											"end": 2079,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2123,
											"end": 2126,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2116,
											"end": 2120,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2108,
											"end": 2114,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2104,
											"end": 2121,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2100,
											"end": 2127,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2090,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 2090,
											"end": 2212,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 2131,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 2131,
											"end": 2210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2210,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 2131,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2090,
											"end": 2212,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 2090,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2244,
											"end": 2250,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2231,
											"end": 2251,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2221,
											"end": 2251,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2221,
											"end": 2251,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2274,
											"end": 2292,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2266,
											"end": 2272,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2263,
											"end": 2293,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2260,
											"end": 2377,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2260,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 2260,
											"end": 2377,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 2296,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 2296,
											"end": 2375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2375,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 2296,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2260,
											"end": 2377,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 2260,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2410,
											"end": 2414,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2402,
											"end": 2408,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2398,
											"end": 2415,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2386,
											"end": 2415,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2386,
											"end": 2415,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2464,
											"end": 2467,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2456,
											"end": 2460,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2454,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2444,
											"end": 2461,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2434,
											"end": 2442,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2430,
											"end": 2462,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2468,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2424,
											"end": 2552,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2424,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 2424,
											"end": 2552,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2471,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 2471,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 2471,
											"end": 2550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2471,
											"end": 2550,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 2471,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2424,
											"end": 2552,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 2424,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2558,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2558,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2558,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2558,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2558,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2564,
											"end": 3671,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 2564,
											"end": 3671,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2709,
											"end": 2715,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2717,
											"end": 2723,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2725,
											"end": 2731,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2733,
											"end": 2739,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2741,
											"end": 2747,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2790,
											"end": 2792,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2778,
											"end": 2787,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2769,
											"end": 2776,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2765,
											"end": 2788,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2761,
											"end": 2793,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 2877,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 2758,
											"end": 2877,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2796,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 2796,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 2796,
											"end": 2875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2796,
											"end": 2875,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 2796,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 2877,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 2758,
											"end": 2877,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2916,
											"end": 2917,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2941,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 3000,
											"end": 3007,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 2997,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2980,
											"end": 2989,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 2976,
											"end": 2998,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 2941,
											"end": 3008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 3008,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 2941,
											"end": 3008,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2931,
											"end": 3008,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2931,
											"end": 3008,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2887,
											"end": 3018,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3087,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3074,
											"end": 3083,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3057,
											"end": 3089,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3116,
											"end": 3134,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3108,
											"end": 3114,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3135,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3102,
											"end": 3219,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3102,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 3102,
											"end": 3219,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3138,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 3138,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 3138,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3138,
											"end": 3217,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 3138,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3102,
											"end": 3219,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 3102,
											"end": 3219,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 3323,
											"end": 3330,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3314,
											"end": 3320,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3303,
											"end": 3312,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 3299,
											"end": 3321,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 3251,
											"end": 3331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3251,
											"end": 3331,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 3251,
											"end": 3331,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3233,
											"end": 3331,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3233,
											"end": 3331,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3233,
											"end": 3331,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3233,
											"end": 3331,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3028,
											"end": 3341,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3408,
											"end": 3410,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3397,
											"end": 3406,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3393,
											"end": 3411,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3380,
											"end": 3412,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3439,
											"end": 3457,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3431,
											"end": 3437,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3428,
											"end": 3458,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3425,
											"end": 3542,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3425,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 3425,
											"end": 3542,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3461,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 3461,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 3461,
											"end": 3540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3461,
											"end": 3540,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 3461,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3425,
											"end": 3542,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 3425,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3574,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 3646,
											"end": 3653,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3637,
											"end": 3643,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3626,
											"end": 3635,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 3622,
											"end": 3644,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3574,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 3574,
											"end": 3654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3574,
											"end": 3654,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 3574,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3556,
											"end": 3654,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3556,
											"end": 3654,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3556,
											"end": 3654,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3556,
											"end": 3654,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3351,
											"end": 3664,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2564,
											"end": 3671,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2564,
											"end": 3671,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2564,
											"end": 3671,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2564,
											"end": 3671,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2564,
											"end": 3671,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2564,
											"end": 3671,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2564,
											"end": 3671,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2564,
											"end": 3671,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2564,
											"end": 3671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3677,
											"end": 3799,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 3677,
											"end": 3799,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3750,
											"end": 3774,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 3768,
											"end": 3773,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3750,
											"end": 3774,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 3750,
											"end": 3774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3750,
											"end": 3774,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 3750,
											"end": 3774,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3740,
											"end": 3775,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3730,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 3730,
											"end": 3793,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3789,
											"end": 3790,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3786,
											"end": 3787,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3779,
											"end": 3791,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3730,
											"end": 3793,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 3730,
											"end": 3793,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3677,
											"end": 3799,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3677,
											"end": 3799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3805,
											"end": 3944,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 3805,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3851,
											"end": 3856,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3889,
											"end": 3895,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3876,
											"end": 3896,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3867,
											"end": 3896,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3867,
											"end": 3896,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3905,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 3932,
											"end": 3937,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3905,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 3905,
											"end": 3938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3905,
											"end": 3938,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 3905,
											"end": 3938,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3805,
											"end": 3944,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3805,
											"end": 3944,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3805,
											"end": 3944,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3805,
											"end": 3944,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3805,
											"end": 3944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3950,
											"end": 4027,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 3950,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3987,
											"end": 3994,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4016,
											"end": 4021,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4005,
											"end": 4021,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4005,
											"end": 4021,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3950,
											"end": 4027,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3950,
											"end": 4027,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3950,
											"end": 4027,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3950,
											"end": 4027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4155,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 4033,
											"end": 4155,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4106,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 4124,
											"end": 4129,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4106,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 4106,
											"end": 4130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4106,
											"end": 4130,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 4106,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4099,
											"end": 4104,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4096,
											"end": 4131,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4086,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 4086,
											"end": 4149,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4145,
											"end": 4146,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4142,
											"end": 4143,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4147,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4086,
											"end": 4149,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 4086,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4155,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4161,
											"end": 4300,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 4161,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4207,
											"end": 4212,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4245,
											"end": 4251,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4232,
											"end": 4252,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4223,
											"end": 4252,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4223,
											"end": 4252,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4261,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 4288,
											"end": 4293,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4261,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 4261,
											"end": 4294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4261,
											"end": 4294,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 4261,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4161,
											"end": 4300,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4161,
											"end": 4300,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4161,
											"end": 4300,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4161,
											"end": 4300,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4161,
											"end": 4300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4306,
											"end": 4953,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4306,
											"end": 4953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4397,
											"end": 4403,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4405,
											"end": 4411,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4413,
											"end": 4419,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4462,
											"end": 4464,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4450,
											"end": 4459,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4441,
											"end": 4448,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4437,
											"end": 4460,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4433,
											"end": 4465,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4430,
											"end": 4549,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4430,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 4430,
											"end": 4549,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4468,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 4468,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 4468,
											"end": 4547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4468,
											"end": 4547,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 4468,
											"end": 4547,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4430,
											"end": 4549,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 4430,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4588,
											"end": 4589,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4613,
											"end": 4680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 4672,
											"end": 4679,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4663,
											"end": 4669,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4661,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4670,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4613,
											"end": 4680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 4613,
											"end": 4680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4613,
											"end": 4680,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 4613,
											"end": 4680,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4603,
											"end": 4680,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4603,
											"end": 4680,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4559,
											"end": 4690,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4729,
											"end": 4731,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4755,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 4800,
											"end": 4807,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4797,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4780,
											"end": 4789,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4776,
											"end": 4798,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 4755,
											"end": 4808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4755,
											"end": 4808,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 4755,
											"end": 4808,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4745,
											"end": 4808,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4745,
											"end": 4808,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4700,
											"end": 4818,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4857,
											"end": 4859,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4883,
											"end": 4936,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 4928,
											"end": 4935,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4919,
											"end": 4925,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4908,
											"end": 4917,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4904,
											"end": 4926,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4936,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 4883,
											"end": 4936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4936,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 4883,
											"end": 4936,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4873,
											"end": 4936,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4873,
											"end": 4936,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4828,
											"end": 4946,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4306,
											"end": 4953,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4306,
											"end": 4953,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4306,
											"end": 4953,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4306,
											"end": 4953,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4306,
											"end": 4953,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4306,
											"end": 4953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4959,
											"end": 5063,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 4959,
											"end": 5063,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5004,
											"end": 5011,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5033,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 5051,
											"end": 5056,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5033,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 5033,
											"end": 5057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5033,
											"end": 5057,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 5033,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5057,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5057,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4959,
											"end": 5063,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4959,
											"end": 5063,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4959,
											"end": 5063,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4959,
											"end": 5063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5069,
											"end": 5207,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 5069,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5150,
											"end": 5182,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 5176,
											"end": 5181,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5150,
											"end": 5182,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 5150,
											"end": 5182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5150,
											"end": 5182,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 5150,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5143,
											"end": 5148,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5140,
											"end": 5183,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 5130,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 5130,
											"end": 5201,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5197,
											"end": 5198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5194,
											"end": 5195,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5187,
											"end": 5199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5130,
											"end": 5201,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 5130,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5069,
											"end": 5207,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5069,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5213,
											"end": 5368,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 5213,
											"end": 5368,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5267,
											"end": 5272,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5305,
											"end": 5311,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5292,
											"end": 5312,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5283,
											"end": 5312,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5283,
											"end": 5312,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5321,
											"end": 5362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 5356,
											"end": 5361,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5321,
											"end": 5362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 5321,
											"end": 5362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5321,
											"end": 5362,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 5321,
											"end": 5362,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5213,
											"end": 5368,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5213,
											"end": 5368,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5213,
											"end": 5368,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5213,
											"end": 5368,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5213,
											"end": 5368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5374,
											"end": 5864,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 5374,
											"end": 5864,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5450,
											"end": 5456,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5458,
											"end": 5464,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5507,
											"end": 5509,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5495,
											"end": 5504,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5486,
											"end": 5493,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5482,
											"end": 5505,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5478,
											"end": 5510,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5475,
											"end": 5594,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5475,
											"end": 5594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 5475,
											"end": 5594,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5513,
											"end": 5592,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 5513,
											"end": 5592,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 5513,
											"end": 5592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5513,
											"end": 5592,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 5513,
											"end": 5592,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5475,
											"end": 5594,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 5475,
											"end": 5594,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5633,
											"end": 5634,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5658,
											"end": 5719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 5711,
											"end": 5718,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5702,
											"end": 5708,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5691,
											"end": 5700,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5687,
											"end": 5709,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5658,
											"end": 5719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 5658,
											"end": 5719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5658,
											"end": 5719,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 5658,
											"end": 5719,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5648,
											"end": 5719,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5648,
											"end": 5719,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5604,
											"end": 5729,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5768,
											"end": 5770,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5794,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 5839,
											"end": 5846,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5830,
											"end": 5836,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5819,
											"end": 5828,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5815,
											"end": 5837,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5794,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 5794,
											"end": 5847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5794,
											"end": 5847,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 5794,
											"end": 5847,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5784,
											"end": 5847,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5784,
											"end": 5847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5739,
											"end": 5857,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5374,
											"end": 5864,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5374,
											"end": 5864,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5374,
											"end": 5864,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5374,
											"end": 5864,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5374,
											"end": 5864,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5374,
											"end": 5864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5870,
											"end": 5988,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 5870,
											"end": 5988,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5957,
											"end": 5981,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 5975,
											"end": 5980,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5957,
											"end": 5981,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 5957,
											"end": 5981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5957,
											"end": 5981,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 5957,
											"end": 5981,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5952,
											"end": 5955,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5945,
											"end": 5982,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5870,
											"end": 5988,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5870,
											"end": 5988,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5870,
											"end": 5988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5994,
											"end": 6216,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 5994,
											"end": 6216,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6087,
											"end": 6091,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6125,
											"end": 6127,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6114,
											"end": 6123,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6110,
											"end": 6128,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6102,
											"end": 6128,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6102,
											"end": 6128,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6138,
											"end": 6209,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 6206,
											"end": 6207,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6195,
											"end": 6204,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6191,
											"end": 6208,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6188,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6138,
											"end": 6209,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 6138,
											"end": 6209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6138,
											"end": 6209,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 6138,
											"end": 6209,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5994,
											"end": 6216,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5994,
											"end": 6216,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5994,
											"end": 6216,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5994,
											"end": 6216,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5994,
											"end": 6216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 7156,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 6222,
											"end": 7156,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6344,
											"end": 6350,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6352,
											"end": 6358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6360,
											"end": 6366,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6368,
											"end": 6374,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6417,
											"end": 6419,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6405,
											"end": 6414,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6396,
											"end": 6403,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6415,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6388,
											"end": 6420,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6385,
											"end": 6504,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6385,
											"end": 6504,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 6385,
											"end": 6504,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6423,
											"end": 6502,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 6423,
											"end": 6502,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 6423,
											"end": 6502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6423,
											"end": 6502,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 6423,
											"end": 6502,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6385,
											"end": 6504,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 6385,
											"end": 6504,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6571,
											"end": 6572,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6560,
											"end": 6569,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6556,
											"end": 6573,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6543,
											"end": 6574,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6601,
											"end": 6619,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6593,
											"end": 6599,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6590,
											"end": 6620,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6587,
											"end": 6704,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6587,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 6587,
											"end": 6704,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6623,
											"end": 6702,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 6623,
											"end": 6702,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 6623,
											"end": 6702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6623,
											"end": 6702,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 6623,
											"end": 6702,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6587,
											"end": 6704,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 6587,
											"end": 6704,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6736,
											"end": 6816,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 6808,
											"end": 6815,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6799,
											"end": 6805,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6788,
											"end": 6797,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 6784,
											"end": 6806,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6736,
											"end": 6816,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 6736,
											"end": 6816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6736,
											"end": 6816,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 6736,
											"end": 6816,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6718,
											"end": 6816,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6718,
											"end": 6816,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6718,
											"end": 6816,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6718,
											"end": 6816,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6514,
											"end": 6826,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6893,
											"end": 6895,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6882,
											"end": 6891,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6878,
											"end": 6896,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6865,
											"end": 6897,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6924,
											"end": 6942,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6916,
											"end": 6922,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6913,
											"end": 6943,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6910,
											"end": 7027,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6910,
											"end": 7027,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 6910,
											"end": 7027,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6946,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 6946,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 6946,
											"end": 7025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6946,
											"end": 7025,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 6946,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6910,
											"end": 7027,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 6910,
											"end": 7027,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7059,
											"end": 7139,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 7131,
											"end": 7138,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7122,
											"end": 7128,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7111,
											"end": 7120,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 7107,
											"end": 7129,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7059,
											"end": 7139,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 7059,
											"end": 7139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7059,
											"end": 7139,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 7059,
											"end": 7139,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7041,
											"end": 7139,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7041,
											"end": 7139,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7041,
											"end": 7139,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7041,
											"end": 7139,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6836,
											"end": 7149,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 7156,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 7156,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 7156,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 7156,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 7156,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 7156,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 7156,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 7156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7162,
											"end": 7491,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 7162,
											"end": 7491,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7221,
											"end": 7227,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7270,
											"end": 7272,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7258,
											"end": 7267,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7249,
											"end": 7256,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7245,
											"end": 7268,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7241,
											"end": 7273,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7238,
											"end": 7357,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7238,
											"end": 7357,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 7238,
											"end": 7357,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7276,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 7276,
											"end": 7355,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 7276,
											"end": 7355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7276,
											"end": 7355,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 7276,
											"end": 7355,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7238,
											"end": 7357,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 7238,
											"end": 7357,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7396,
											"end": 7397,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7421,
											"end": 7474,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 7466,
											"end": 7473,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7457,
											"end": 7463,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7446,
											"end": 7455,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7442,
											"end": 7464,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7421,
											"end": 7474,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 7421,
											"end": 7474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7421,
											"end": 7474,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 7421,
											"end": 7474,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7411,
											"end": 7474,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7411,
											"end": 7474,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7367,
											"end": 7484,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7162,
											"end": 7491,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7162,
											"end": 7491,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7162,
											"end": 7491,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7162,
											"end": 7491,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7162,
											"end": 7491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7497,
											"end": 7666,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 7497,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7581,
											"end": 7592,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7615,
											"end": 7621,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7610,
											"end": 7613,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7603,
											"end": 7622,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7655,
											"end": 7659,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7650,
											"end": 7653,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7646,
											"end": 7660,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7660,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7631,
											"end": 7660,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7497,
											"end": 7666,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7497,
											"end": 7666,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7497,
											"end": 7666,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7497,
											"end": 7666,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7497,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7672,
											"end": 7837,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 7672,
											"end": 7837,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7812,
											"end": 7829,
											"name": "PUSH",
											"source": 10,
											"value": "6C656E6774682D6D69736D617463680000000000000000000000000000000000"
										},
										{
											"begin": 7808,
											"end": 7809,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7800,
											"end": 7806,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7796,
											"end": 7810,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7789,
											"end": 7830,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7672,
											"end": 7837,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7672,
											"end": 7837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7843,
											"end": 8209,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 7843,
											"end": 8209,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7985,
											"end": 7988,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8006,
											"end": 8073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 8070,
											"end": 8072,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 8065,
											"end": 8068,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8006,
											"end": 8073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 8006,
											"end": 8073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8006,
											"end": 8073,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 8006,
											"end": 8073,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7999,
											"end": 8073,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7999,
											"end": 8073,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8082,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 8171,
											"end": 8174,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8082,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 8082,
											"end": 8175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8082,
											"end": 8175,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 8082,
											"end": 8175,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8202,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8195,
											"end": 8198,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8191,
											"end": 8203,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8184,
											"end": 8203,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8184,
											"end": 8203,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7843,
											"end": 8209,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7843,
											"end": 8209,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7843,
											"end": 8209,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7843,
											"end": 8209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8215,
											"end": 8634,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 8215,
											"end": 8634,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8381,
											"end": 8385,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8419,
											"end": 8421,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8408,
											"end": 8417,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8404,
											"end": 8422,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8396,
											"end": 8422,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8396,
											"end": 8422,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8468,
											"end": 8477,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8462,
											"end": 8466,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8458,
											"end": 8478,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8454,
											"end": 8455,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8443,
											"end": 8452,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8456,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8432,
											"end": 8479,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8496,
											"end": 8627,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 8622,
											"end": 8626,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8496,
											"end": 8627,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 8496,
											"end": 8627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8496,
											"end": 8627,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 8496,
											"end": 8627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8488,
											"end": 8627,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8488,
											"end": 8627,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8215,
											"end": 8634,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8215,
											"end": 8634,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8215,
											"end": 8634,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8215,
											"end": 8634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8640,
											"end": 8820,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8640,
											"end": 8820,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8688,
											"end": 8765,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8685,
											"end": 8686,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8678,
											"end": 8766,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8785,
											"end": 8789,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 8782,
											"end": 8783,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8775,
											"end": 8790,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8809,
											"end": 8813,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8806,
											"end": 8807,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8799,
											"end": 8814,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8826,
											"end": 9006,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 8826,
											"end": 9006,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8874,
											"end": 8951,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8871,
											"end": 8872,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8864,
											"end": 8952,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8971,
											"end": 8975,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 8968,
											"end": 8969,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8961,
											"end": 8976,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8995,
											"end": 8999,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8992,
											"end": 8993,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8985,
											"end": 9000,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9012,
											"end": 9203,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 9012,
											"end": 9203,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9052,
											"end": 9055,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9071,
											"end": 9091,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 9089,
											"end": 9090,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9071,
											"end": 9091,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 9071,
											"end": 9091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9071,
											"end": 9091,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 9071,
											"end": 9091,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9091,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9091,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9105,
											"end": 9125,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 9123,
											"end": 9124,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9105,
											"end": 9125,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 9105,
											"end": 9125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9105,
											"end": 9125,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 9105,
											"end": 9125,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9100,
											"end": 9125,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9100,
											"end": 9125,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9148,
											"end": 9149,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9145,
											"end": 9146,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9141,
											"end": 9150,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9134,
											"end": 9150,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9134,
											"end": 9150,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9169,
											"end": 9172,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9166,
											"end": 9167,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9163,
											"end": 9173,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9160,
											"end": 9196,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9160,
											"end": 9196,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 9160,
											"end": 9196,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9176,
											"end": 9194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 9176,
											"end": 9194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 9176,
											"end": 9194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9176,
											"end": 9194,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 9176,
											"end": 9194,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9160,
											"end": 9196,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 9160,
											"end": 9196,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9012,
											"end": 9203,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9012,
											"end": 9203,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9012,
											"end": 9203,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9012,
											"end": 9203,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9012,
											"end": 9203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9209,
											"end": 9327,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 9209,
											"end": 9327,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9296,
											"end": 9320,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 9314,
											"end": 9319,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9296,
											"end": 9320,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 9296,
											"end": 9320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9296,
											"end": 9320,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 9296,
											"end": 9320,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9291,
											"end": 9294,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9284,
											"end": 9321,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9209,
											"end": 9327,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9209,
											"end": 9327,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9209,
											"end": 9327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9333,
											"end": 9665,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 9333,
											"end": 9665,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9454,
											"end": 9458,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9492,
											"end": 9494,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9481,
											"end": 9490,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9477,
											"end": 9495,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9469,
											"end": 9495,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9469,
											"end": 9495,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9505,
											"end": 9576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 9573,
											"end": 9574,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9562,
											"end": 9571,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9558,
											"end": 9575,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9549,
											"end": 9555,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9505,
											"end": 9576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 9505,
											"end": 9576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9505,
											"end": 9576,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 9505,
											"end": 9576,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9586,
											"end": 9658,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 9654,
											"end": 9656,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9643,
											"end": 9652,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9639,
											"end": 9657,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9630,
											"end": 9636,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9586,
											"end": 9658,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 9586,
											"end": 9658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9586,
											"end": 9658,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 9586,
											"end": 9658,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9333,
											"end": 9665,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 9333,
											"end": 9665,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9333,
											"end": 9665,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9333,
											"end": 9665,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9333,
											"end": 9665,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9333,
											"end": 9665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9671,
											"end": 9893,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 9671,
											"end": 9893,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9764,
											"end": 9768,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9802,
											"end": 9804,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9791,
											"end": 9800,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9787,
											"end": 9805,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9779,
											"end": 9805,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9779,
											"end": 9805,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9815,
											"end": 9886,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 9883,
											"end": 9884,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9872,
											"end": 9881,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9868,
											"end": 9885,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9859,
											"end": 9865,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9815,
											"end": 9886,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 9815,
											"end": 9886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9815,
											"end": 9886,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 9815,
											"end": 9886,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9671,
											"end": 9893,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9671,
											"end": 9893,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9671,
											"end": 9893,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9671,
											"end": 9893,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9671,
											"end": 9893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9899,
											"end": 10065,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 9899,
											"end": 10065,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH",
											"source": 10,
											"value": "696E73756666696369656E742D65746800000000000000000000000000000000"
										},
										{
											"begin": 10035,
											"end": 10036,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10027,
											"end": 10033,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10023,
											"end": 10037,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10016,
											"end": 10058,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9899,
											"end": 10065,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9899,
											"end": 10065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10071,
											"end": 10437,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 10071,
											"end": 10437,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10213,
											"end": 10216,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10234,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 10298,
											"end": 10300,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 10293,
											"end": 10296,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10234,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 10234,
											"end": 10301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10234,
											"end": 10301,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 10234,
											"end": 10301,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10227,
											"end": 10301,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10227,
											"end": 10301,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10310,
											"end": 10403,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 10399,
											"end": 10402,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10310,
											"end": 10403,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 10310,
											"end": 10403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10310,
											"end": 10403,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 10310,
											"end": 10403,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10428,
											"end": 10430,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10423,
											"end": 10426,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10419,
											"end": 10431,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10412,
											"end": 10431,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10412,
											"end": 10431,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10071,
											"end": 10437,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10071,
											"end": 10437,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10071,
											"end": 10437,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10071,
											"end": 10437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10443,
											"end": 10862,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 10443,
											"end": 10862,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10609,
											"end": 10613,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10647,
											"end": 10649,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10636,
											"end": 10645,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10632,
											"end": 10650,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10624,
											"end": 10650,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10624,
											"end": 10650,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10696,
											"end": 10705,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10690,
											"end": 10694,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10686,
											"end": 10706,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10682,
											"end": 10683,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10671,
											"end": 10680,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10667,
											"end": 10684,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10660,
											"end": 10707,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10724,
											"end": 10855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 10850,
											"end": 10854,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10724,
											"end": 10855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 10724,
											"end": 10855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10724,
											"end": 10855,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 10724,
											"end": 10855,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10716,
											"end": 10855,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10716,
											"end": 10855,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10443,
											"end": 10862,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10443,
											"end": 10862,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10443,
											"end": 10862,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10443,
											"end": 10862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10868,
											"end": 11015,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 10868,
											"end": 11015,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10969,
											"end": 10980,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11006,
											"end": 11009,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10991,
											"end": 11009,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10991,
											"end": 11009,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10868,
											"end": 11015,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10868,
											"end": 11015,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10868,
											"end": 11015,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10868,
											"end": 11015,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10868,
											"end": 11015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11021,
											"end": 11135,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 11021,
											"end": 11135,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11021,
											"end": 11135,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11021,
											"end": 11135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11141,
											"end": 11539,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 11141,
											"end": 11539,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11300,
											"end": 11303,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11321,
											"end": 11404,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 11402,
											"end": 11403,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11397,
											"end": 11400,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11321,
											"end": 11404,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 11321,
											"end": 11404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11321,
											"end": 11404,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 11321,
											"end": 11404,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11314,
											"end": 11404,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11314,
											"end": 11404,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11413,
											"end": 11506,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 11502,
											"end": 11505,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11413,
											"end": 11506,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 11413,
											"end": 11506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11413,
											"end": 11506,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 11413,
											"end": 11506,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11531,
											"end": 11532,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11526,
											"end": 11529,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11522,
											"end": 11533,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11515,
											"end": 11533,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11515,
											"end": 11533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11141,
											"end": 11539,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11141,
											"end": 11539,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11141,
											"end": 11539,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11141,
											"end": 11539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11545,
											"end": 11924,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 11545,
											"end": 11924,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11729,
											"end": 11732,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11751,
											"end": 11898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 11894,
											"end": 11897,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11751,
											"end": 11898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 11751,
											"end": 11898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11751,
											"end": 11898,
											"name": "tag",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 11751,
											"end": 11898,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11744,
											"end": 11898,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11744,
											"end": 11898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11915,
											"end": 11918,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11908,
											"end": 11918,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11908,
											"end": 11918,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11545,
											"end": 11924,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11545,
											"end": 11924,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11545,
											"end": 11924,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11545,
											"end": 11924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11930,
											"end": 12095,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 11930,
											"end": 12095,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12070,
											"end": 12087,
											"name": "PUSH",
											"source": 10,
											"value": "77697468647261772D6661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 12066,
											"end": 12067,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12058,
											"end": 12064,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12054,
											"end": 12068,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12088,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11930,
											"end": 12095,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11930,
											"end": 12095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12101,
											"end": 12467,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 12101,
											"end": 12467,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12243,
											"end": 12246,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12264,
											"end": 12331,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 12328,
											"end": 12330,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 12323,
											"end": 12326,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12264,
											"end": 12331,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 12264,
											"end": 12331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12264,
											"end": 12331,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 12264,
											"end": 12331,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12257,
											"end": 12331,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12257,
											"end": 12331,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12340,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 12429,
											"end": 12432,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12340,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 12340,
											"end": 12433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12340,
											"end": 12433,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 12340,
											"end": 12433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12458,
											"end": 12460,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12453,
											"end": 12456,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12449,
											"end": 12461,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12442,
											"end": 12461,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12442,
											"end": 12461,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12101,
											"end": 12467,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12101,
											"end": 12467,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12101,
											"end": 12467,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12101,
											"end": 12467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12473,
											"end": 12892,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 12473,
											"end": 12892,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12639,
											"end": 12643,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12677,
											"end": 12679,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12666,
											"end": 12675,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12662,
											"end": 12680,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12654,
											"end": 12680,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12654,
											"end": 12680,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12726,
											"end": 12735,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12720,
											"end": 12724,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12716,
											"end": 12736,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12712,
											"end": 12713,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12701,
											"end": 12710,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12697,
											"end": 12714,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12690,
											"end": 12737,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12754,
											"end": 12885,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 12880,
											"end": 12884,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12754,
											"end": 12885,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 12754,
											"end": 12885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12754,
											"end": 12885,
											"name": "tag",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 12754,
											"end": 12885,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12746,
											"end": 12885,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12746,
											"end": 12885,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12473,
											"end": 12892,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12473,
											"end": 12892,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12473,
											"end": 12892,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12473,
											"end": 12892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12898,
											"end": 13041,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 12898,
											"end": 13041,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12955,
											"end": 12960,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12986,
											"end": 12992,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12980,
											"end": 12993,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12971,
											"end": 12993,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12971,
											"end": 12993,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13002,
											"end": 13035,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13002,
											"end": 13035,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 13002,
											"end": 13035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13002,
											"end": 13035,
											"name": "tag",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 13002,
											"end": 13035,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12898,
											"end": 13041,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12898,
											"end": 13041,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12898,
											"end": 13041,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12898,
											"end": 13041,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12898,
											"end": 13041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13047,
											"end": 13398,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 13047,
											"end": 13398,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13166,
											"end": 13168,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13154,
											"end": 13163,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13145,
											"end": 13152,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13141,
											"end": 13164,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13137,
											"end": 13169,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 13134,
											"end": 13253,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13134,
											"end": 13253,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 13134,
											"end": 13253,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13172,
											"end": 13251,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 13172,
											"end": 13251,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 13172,
											"end": 13251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13172,
											"end": 13251,
											"name": "tag",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 13172,
											"end": 13251,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13134,
											"end": 13253,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 13134,
											"end": 13253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13292,
											"end": 13293,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13317,
											"end": 13381,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 13373,
											"end": 13380,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13364,
											"end": 13370,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13353,
											"end": 13362,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13349,
											"end": 13371,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13317,
											"end": 13381,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 13317,
											"end": 13381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13317,
											"end": 13381,
											"name": "tag",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 13317,
											"end": 13381,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13307,
											"end": 13381,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13307,
											"end": 13381,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13263,
											"end": 13391,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13047,
											"end": 13398,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13047,
											"end": 13398,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13047,
											"end": 13398,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13047,
											"end": 13398,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13047,
											"end": 13398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13404,
											"end": 13583,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 13404,
											"end": 13583,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13544,
											"end": 13575,
											"name": "PUSH",
											"source": 10,
											"value": "696E73756666696369656E742D636F6E74726163742D62616C616E6365000000"
										},
										{
											"begin": 13540,
											"end": 13541,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13532,
											"end": 13538,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13528,
											"end": 13542,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13521,
											"end": 13576,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13404,
											"end": 13583,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13404,
											"end": 13583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13589,
											"end": 13955,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 13589,
											"end": 13955,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13731,
											"end": 13734,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13752,
											"end": 13819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 13816,
											"end": 13818,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 13811,
											"end": 13814,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13752,
											"end": 13819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 13752,
											"end": 13819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13752,
											"end": 13819,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 13752,
											"end": 13819,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13745,
											"end": 13819,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13745,
											"end": 13819,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13828,
											"end": 13921,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 13917,
											"end": 13920,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13828,
											"end": 13921,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 13828,
											"end": 13921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13828,
											"end": 13921,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 13828,
											"end": 13921,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13946,
											"end": 13948,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13941,
											"end": 13944,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13937,
											"end": 13949,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13930,
											"end": 13949,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13930,
											"end": 13949,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13589,
											"end": 13955,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13589,
											"end": 13955,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13589,
											"end": 13955,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13589,
											"end": 13955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13961,
											"end": 14380,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 13961,
											"end": 14380,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14127,
											"end": 14131,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14165,
											"end": 14167,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14154,
											"end": 14163,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14150,
											"end": 14168,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14142,
											"end": 14168,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14142,
											"end": 14168,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14214,
											"end": 14223,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14208,
											"end": 14212,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14204,
											"end": 14224,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14200,
											"end": 14201,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14189,
											"end": 14198,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14185,
											"end": 14202,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14178,
											"end": 14225,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14242,
											"end": 14373,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 14368,
											"end": 14372,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14242,
											"end": 14373,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 14242,
											"end": 14373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14242,
											"end": 14373,
											"name": "tag",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 14242,
											"end": 14373,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14234,
											"end": 14373,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14234,
											"end": 14373,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13961,
											"end": 14380,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13961,
											"end": 14380,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13961,
											"end": 14380,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13961,
											"end": 14380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14386,
											"end": 14550,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 14386,
											"end": 14550,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "PUSH",
											"source": 10,
											"value": "76616C75652D6D69736D61746368000000000000000000000000000000000000"
										},
										{
											"begin": 14522,
											"end": 14523,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14514,
											"end": 14520,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14510,
											"end": 14524,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14503,
											"end": 14543,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14386,
											"end": 14550,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14386,
											"end": 14550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14556,
											"end": 14922,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 14556,
											"end": 14922,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14698,
											"end": 14701,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14719,
											"end": 14786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 14783,
											"end": 14785,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 14778,
											"end": 14781,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14719,
											"end": 14786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 14719,
											"end": 14786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14719,
											"end": 14786,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 14719,
											"end": 14786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14712,
											"end": 14786,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14712,
											"end": 14786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14795,
											"end": 14888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 14884,
											"end": 14887,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14795,
											"end": 14888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 14795,
											"end": 14888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14795,
											"end": 14888,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 14795,
											"end": 14888,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14913,
											"end": 14915,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14908,
											"end": 14911,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14904,
											"end": 14916,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14897,
											"end": 14916,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14897,
											"end": 14916,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14556,
											"end": 14922,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14556,
											"end": 14922,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14556,
											"end": 14922,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14556,
											"end": 14922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14928,
											"end": 15347,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 14928,
											"end": 15347,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15094,
											"end": 15098,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15132,
											"end": 15134,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15121,
											"end": 15130,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15117,
											"end": 15135,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15109,
											"end": 15135,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15109,
											"end": 15135,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15181,
											"end": 15190,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15175,
											"end": 15179,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15171,
											"end": 15191,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15167,
											"end": 15168,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15156,
											"end": 15165,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15152,
											"end": 15169,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15145,
											"end": 15192,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15209,
											"end": 15340,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 15335,
											"end": 15339,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15209,
											"end": 15340,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 15209,
											"end": 15340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15209,
											"end": 15340,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 15209,
											"end": 15340,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15201,
											"end": 15340,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15201,
											"end": 15340,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14928,
											"end": 15347,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14928,
											"end": 15347,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14928,
											"end": 15347,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14928,
											"end": 15347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15353,
											"end": 15518,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 15353,
											"end": 15518,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15493,
											"end": 15510,
											"name": "PUSH",
											"source": 10,
											"value": "6574682D73656E642D6661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 15489,
											"end": 15490,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15481,
											"end": 15487,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15477,
											"end": 15491,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15470,
											"end": 15511,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15353,
											"end": 15518,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15353,
											"end": 15518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15524,
											"end": 15890,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 15524,
											"end": 15890,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15666,
											"end": 15669,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15687,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 15751,
											"end": 15753,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 15746,
											"end": 15749,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15687,
											"end": 15754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 15687,
											"end": 15754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15687,
											"end": 15754,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 15687,
											"end": 15754,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15680,
											"end": 15754,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15680,
											"end": 15754,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15763,
											"end": 15856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 15852,
											"end": 15855,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15763,
											"end": 15856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 15763,
											"end": 15856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15763,
											"end": 15856,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 15763,
											"end": 15856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15881,
											"end": 15883,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15876,
											"end": 15879,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15872,
											"end": 15884,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15865,
											"end": 15884,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15865,
											"end": 15884,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15524,
											"end": 15890,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15524,
											"end": 15890,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15524,
											"end": 15890,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15524,
											"end": 15890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15896,
											"end": 16315,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 15896,
											"end": 16315,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16062,
											"end": 16066,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16100,
											"end": 16102,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16089,
											"end": 16098,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16085,
											"end": 16103,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16077,
											"end": 16103,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16077,
											"end": 16103,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16149,
											"end": 16158,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16143,
											"end": 16147,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16139,
											"end": 16159,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 16135,
											"end": 16136,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16124,
											"end": 16133,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16120,
											"end": 16137,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16113,
											"end": 16160,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16177,
											"end": 16308,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 16303,
											"end": 16307,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16177,
											"end": 16308,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 16177,
											"end": 16308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16177,
											"end": 16308,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 16177,
											"end": 16308,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16169,
											"end": 16308,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16169,
											"end": 16308,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15896,
											"end": 16315,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15896,
											"end": 16315,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15896,
											"end": 16315,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15896,
											"end": 16315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16321,
											"end": 16502,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 16321,
											"end": 16502,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16461,
											"end": 16494,
											"name": "PUSH",
											"source": 10,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 16457,
											"end": 16458,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16449,
											"end": 16455,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16445,
											"end": 16459,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16438,
											"end": 16495,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16321,
											"end": 16502,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16321,
											"end": 16502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16508,
											"end": 16874,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 16508,
											"end": 16874,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16650,
											"end": 16653,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16671,
											"end": 16738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 16735,
											"end": 16737,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 16730,
											"end": 16733,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16671,
											"end": 16738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 16671,
											"end": 16738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16671,
											"end": 16738,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 16671,
											"end": 16738,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16664,
											"end": 16738,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16664,
											"end": 16738,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16747,
											"end": 16840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 16836,
											"end": 16839,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16747,
											"end": 16840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 16747,
											"end": 16840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16747,
											"end": 16840,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 16747,
											"end": 16840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16865,
											"end": 16867,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16860,
											"end": 16863,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16856,
											"end": 16868,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16849,
											"end": 16868,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16849,
											"end": 16868,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16508,
											"end": 16874,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16508,
											"end": 16874,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16508,
											"end": 16874,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16508,
											"end": 16874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16880,
											"end": 17299,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 16880,
											"end": 17299,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17046,
											"end": 17050,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17084,
											"end": 17086,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17073,
											"end": 17082,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17069,
											"end": 17087,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17061,
											"end": 17087,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17061,
											"end": 17087,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17133,
											"end": 17142,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17127,
											"end": 17131,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17123,
											"end": 17143,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17119,
											"end": 17120,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17108,
											"end": 17117,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17104,
											"end": 17121,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17097,
											"end": 17144,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17161,
											"end": 17292,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 17287,
											"end": 17291,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17161,
											"end": 17292,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 17161,
											"end": 17292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17161,
											"end": 17292,
											"name": "tag",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 17161,
											"end": 17292,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17153,
											"end": 17292,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17153,
											"end": 17292,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16880,
											"end": 17299,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16880,
											"end": 17299,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16880,
											"end": 17299,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16880,
											"end": 17299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17305,
											"end": 17747,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 17305,
											"end": 17747,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17454,
											"end": 17458,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17492,
											"end": 17494,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 17481,
											"end": 17490,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17477,
											"end": 17495,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17469,
											"end": 17495,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17469,
											"end": 17495,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17505,
											"end": 17576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 17573,
											"end": 17574,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17562,
											"end": 17571,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17558,
											"end": 17575,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17549,
											"end": 17555,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 17505,
											"end": 17576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 17505,
											"end": 17576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17505,
											"end": 17576,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 17505,
											"end": 17576,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17586,
											"end": 17658,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 17654,
											"end": 17656,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17643,
											"end": 17652,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17639,
											"end": 17657,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17630,
											"end": 17636,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 17586,
											"end": 17658,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 17586,
											"end": 17658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17586,
											"end": 17658,
											"name": "tag",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 17586,
											"end": 17658,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17668,
											"end": 17740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 17736,
											"end": 17738,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17725,
											"end": 17734,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17721,
											"end": 17739,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17712,
											"end": 17718,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17668,
											"end": 17740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 17668,
											"end": 17740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17668,
											"end": 17740,
											"name": "tag",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 17668,
											"end": 17740,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17305,
											"end": 17747,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 17305,
											"end": 17747,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 17305,
											"end": 17747,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17305,
											"end": 17747,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17305,
											"end": 17747,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17305,
											"end": 17747,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17305,
											"end": 17747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17753,
											"end": 18085,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 17753,
											"end": 18085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17874,
											"end": 17878,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17912,
											"end": 17914,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17901,
											"end": 17910,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17897,
											"end": 17915,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17889,
											"end": 17915,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17889,
											"end": 17915,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17925,
											"end": 17996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 17993,
											"end": 17994,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17982,
											"end": 17991,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17978,
											"end": 17995,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17969,
											"end": 17975,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 17925,
											"end": 17996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 17925,
											"end": 17996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17925,
											"end": 17996,
											"name": "tag",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 17925,
											"end": 17996,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18006,
											"end": 18078,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 18074,
											"end": 18076,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18063,
											"end": 18072,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18059,
											"end": 18077,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18050,
											"end": 18056,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 18006,
											"end": 18078,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 18006,
											"end": 18078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18006,
											"end": 18078,
											"name": "tag",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 18006,
											"end": 18078,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17753,
											"end": 18085,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 17753,
											"end": 18085,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 17753,
											"end": 18085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17753,
											"end": 18085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17753,
											"end": 18085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17753,
											"end": 18085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"Bulksender.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"bulkTransferERC20(address,address[],uint256[])": "3e46cd53",
							"bulkTransferERC20FromContract(address,address[],uint256[])": "9f62eafe",
							"bulkTransferETH(address[],uint256[])": "b874fa6a",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"withdrawERC20(address,address,uint256)": "44004cc1",
							"withdrawETH(address,uint256)": "4782f779"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"recipientsCount\",\"type\":\"uint256\"}],\"name\":\"BulkERC20Transferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"recipientsCount\",\"type\":\"uint256\"}],\"name\":\"BulkETHTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Withdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ETHWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"bulkTransferERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"bulkTransferERC20FromContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"bulkTransferETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"ERC20 bulk transfer uses transferFrom, so users must approve this contract first.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"bulkTransferERC20(address,address[],uint256[])\":{\"params\":{\"amounts\":\"Array of amounts corresponding to each recipient (in token units). Requirements: - caller must approve this contract for at least sum(amounts) before calling.\",\"recipients\":\"Array of recipient addresses.\",\"token\":\"ERC20 token contract.\"}},\"bulkTransferETH(address[],uint256[])\":{\"params\":{\"amounts\":\"Array of amounts corresponding to each recipient (in wei). Requirements: - `recipients.length == amounts.length` - sum(amounts) must equal msg.value\",\"recipients\":\"Array of recipient addresses.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"BulkSender\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"bulkTransferERC20(address,address[],uint256[])\":{\"notice\":\"Batch-send ERC20 tokens to many recipients using transferFrom.\"},\"bulkTransferERC20FromContract(address,address[],uint256[])\":{\"notice\":\"Owner-only: send ERC20 tokens that are already held by this contract to recipients.\"},\"bulkTransferETH(address[],uint256[])\":{\"notice\":\"Batch-send ETH to many recipients.\"},\"withdrawERC20(address,address,uint256)\":{\"notice\":\"Owner helper: withdraw ERC20 tokens from the contract.\"},\"withdrawETH(address,uint256)\":{\"notice\":\"Owner helper: withdraw ETH accidentally left in the contract.\"}},\"notice\":\"Send ETH or ERC20 tokens to many recipients in one tx.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Bulksender.sol\":\"BulkSender\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"Bulksender.sol\":{\"keccak256\":\"0x3d64d6034c1e976c9785b5c1f4bbf0ec79e91d1a79d57a5041ddd0b96a516266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5dccfb5b01585fe2bdb246566f1b38fe0140e4551395603ce4cc359ab4e98d3e\",\"dweb:/ipfs/QmRJxQHpSFuSJXr1XgNHAodepU43BCZr99iPqPjMULz1BN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "Bulksender.sol:BulkSender",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 248,
								"contract": "Bulksender.sol:BulkSender",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"bulkTransferERC20(address,address[],uint256[])": {
								"notice": "Batch-send ERC20 tokens to many recipients using transferFrom."
							},
							"bulkTransferERC20FromContract(address,address[],uint256[])": {
								"notice": "Owner-only: send ERC20 tokens that are already held by this contract to recipients."
							},
							"bulkTransferETH(address[],uint256[])": {
								"notice": "Batch-send ETH to many recipients."
							},
							"withdrawERC20(address,address,uint256)": {
								"notice": "Owner helper: withdraw ERC20 tokens from the contract."
							},
							"withdrawETH(address,uint256)": {
								"notice": "Owner helper: withdraw ETH accidentally left in the contract."
							}
						},
						"notice": "Send ETH or ERC20 tokens to many recipients in one tx.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							874
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 875,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 874,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 874,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								874
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 856,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							886
						],
						"IERC20": [
							380
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 886,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 380,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 886,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								886,
								380
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							886
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 887,
							"src": "133:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 886,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:87:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "105:25:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 381,
							"src": "132:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "140:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:77:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							302
						]
					},
					"id": 303,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:4",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 302,
							"linearizedBaseContracts": [
								302
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 243,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1676:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 241,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 242,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 246,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1723:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 244,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 245,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 248,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1767:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 247,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "1811:39:4",
										"statements": [
											{
												"expression": {
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 251,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "1821:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 252,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "1831:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:4"
											}
										]
									},
									"id": 256,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:4"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:4"
									},
									"scope": 302,
									"src": "1797:53:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "2251:79:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 259,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "2261:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:4"
											},
											{
												"id": 262,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 263,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2303:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:4"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:4",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 267,
									"name": "nonReentrant",
									"nameLocation": "2236:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:4"
									},
									"src": "2227:103:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "2375:248:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 271,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "2468:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 272,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "2479:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:4"
											},
											{
												"expression": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 277,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2598:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 278,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "2608:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:4"
											}
										]
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:4"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:4"
									},
									"scope": 302,
									"src": "2336:287:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "2667:171:4",
										"statements": [
											{
												"expression": {
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 285,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2809:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 286,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2819:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:4"
											}
										]
									},
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:4"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:4"
									},
									"scope": 302,
									"src": "2629:209:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "3081:43:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 296,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "3098:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 297,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "3109:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 295,
												"id": 299,
												"nodeType": "Return",
												"src": "3091:26:4"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:4",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:4"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3075:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:4"
									},
									"scope": 302,
									"src": "3017:107:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 303,
							"src": "888:2238:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 381,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 304,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 305,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 380,
							"linearizedBaseContracts": [
								380
							],
							"name": "IERC20",
							"nameLocation": "215:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 314,
									"name": "Transfer",
									"nameLocation": "397:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "406:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "428:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "448:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:5"
									},
									"src": "391:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 323,
									"name": "Approval",
									"nameLocation": "628:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "637:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "660:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "685:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:5"
									},
									"src": "622:78:5"
								},
								{
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:5"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "822:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:5"
									},
									"scope": 380,
									"src": "776:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "932:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:5"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "972:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:5"
									},
									"scope": 380,
									"src": "913:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1223:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1235:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:5"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1268:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:5"
									},
									"scope": 380,
									"src": "1205:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1568:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1583:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:5"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1623:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:5"
									},
									"scope": 380,
									"src": "1549:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2327:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2344:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:5"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2377:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:5"
									},
									"scope": 380,
									"src": "2310:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2713:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2727:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2739:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:5"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2772:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:5"
									},
									"scope": 380,
									"src": "2691:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 381,
							"src": "205:2575:5",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "106:2675:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"SafeERC20": [
							844
						]
					},
					"id": 845,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 382,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 845,
							"sourceUnit": 381,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 383,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 386,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 845,
							"sourceUnit": 230,
							"src": "179:58:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 385,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 387,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 844,
							"linearizedBaseContracts": [
								844
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:6",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 392,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "823:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:6"
									},
									"src": "792:46:6"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 401,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "959:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "976:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1002:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:6"
									},
									"src": "920:109:6"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "1291:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "1321:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 416,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "1343:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "1343:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 418,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "1360:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 419,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 409,
																			"src": "1364:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 420,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 414,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 412,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "1301:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:6"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1241:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 404,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 403,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1241:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1241:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1255:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1267:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:6"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:6"
									},
									"scope": 844,
									"src": "1219:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "1708:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 439,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "1738:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 442,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 429,
																		"src": "1760:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 379,
																	"src": "1760:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 444,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 431,
																			"src": "1781:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 445,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 433,
																			"src": "1787:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 446,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 435,
																			"src": "1791:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 447,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 440,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 438,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "1718:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:6"
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1644:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 428,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 427,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1644:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1644:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1658:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1672:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:6"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:6"
									},
									"scope": 844,
									"src": "1618:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "2033:99:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "2074:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 469,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "2096:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "2096:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 471,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 458,
																			"src": "2113:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 472,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 460,
																			"src": "2117:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 473,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 467,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 465,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "2050:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 464,
												"id": 476,
												"nodeType": "Return",
												"src": "2043:82:6"
											}
										]
									},
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:6",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1968:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 455,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 454,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1968:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1968:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1982:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1994:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:6"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "2027:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 462,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:6"
									},
									"scope": 844,
									"src": "1943:189:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "2381:109:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 494,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "2422:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 497,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 482,
																		"src": "2444:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 379,
																	"src": "2444:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 499,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 484,
																			"src": "2465:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 500,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 486,
																			"src": "2471:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 501,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 488,
																			"src": "2475:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 502,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 495,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 493,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "2398:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 492,
												"id": 505,
												"nodeType": "Return",
												"src": "2391:92:6"
											}
										]
									},
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:6",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2302:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 481,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 480,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "2302:6:6"
													},
													"referencedDeclaration": 380,
													"src": "2302:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2316:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2330:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2342:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:6"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2375:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 490,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:6"
									},
									"scope": 844,
									"src": "2273:217:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "3232:139:6",
										"statements": [
											{
												"assignments": [
													519
												],
												"declarations": [
													{
														"constant": false,
														"id": 519,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 537,
														"src": "3242:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 518,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 528,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 524,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$844",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$844",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 522,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 526,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "3296:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 520,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "3265:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 357,
														"src": "3265:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 530,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "3327:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 531,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "3334:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 532,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "3343:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 533,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "3358:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 529,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "3314:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:6"
											}
										]
									},
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3177:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 510,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 509,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "3177:6:6"
													},
													"referencedDeclaration": 380,
													"src": "3177:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3191:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3208:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:6"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:6"
									},
									"scope": 844,
									"src": "3146:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "4137:370:6",
										"statements": [
											{
												"id": 579,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:6",
												"statements": [
													{
														"assignments": [
															550
														],
														"declarations": [
															{
																"constant": false,
																"id": 550,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 579,
																"src": "4171:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 549,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 559,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 555,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$844",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$844",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 553,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 557,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "4229:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 551,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "4198:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "4198:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 560,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "4255:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 561,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 546,
																"src": "4274:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 570,
														"nodeType": "IfStatement",
														"src": "4251:160:6",
														"trueBody": {
															"id": 569,
															"nodeType": "Block",
															"src": "4293:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 564,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 544,
																				"src": "4351:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 565,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 550,
																				"src": "4360:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 566,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 546,
																				"src": "4378:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 563,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "4318:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 568,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 572,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "4437:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 573,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "4444:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 574,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 550,
																		"src": "4453:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 575,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 546,
																		"src": "4472:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 571,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "4424:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 578,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4070:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 541,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 540,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "4070:6:6"
													},
													"referencedDeclaration": 380,
													"src": "4070:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4084:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4101:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:6"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:6"
									},
									"scope": 844,
									"src": "4039:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "5161:303:6",
										"statements": [
											{
												"assignments": [
													593
												],
												"declarations": [
													{
														"constant": false,
														"id": 593,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 627,
														"src": "5171:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 592,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 602,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 596,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "5214:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 367,
															"src": "5214:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 598,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "5230:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 599,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "5239:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 600,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 594,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:6"
											},
											{
												"condition": {
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 604,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "5286:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 605,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "5293:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 603,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "5262:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 626,
												"nodeType": "IfStatement",
												"src": "5257:201:6",
												"trueBody": {
													"id": 625,
													"nodeType": "Block",
													"src": "5308:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 609,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 585,
																		"src": "5342:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 612,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 585,
																					"src": "5364:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$380",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 613,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 367,
																				"src": "5364:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 614,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 587,
																						"src": "5380:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 615,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 616,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 610,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 608,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "5322:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 619,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 621,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 585,
																		"src": "5427:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 622,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 593,
																		"src": "5434:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 620,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "5407:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 624,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5106:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 584,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 583,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "5106:6:6"
													},
													"referencedDeclaration": 380,
													"src": "5106:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5120:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5137:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:6"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:6"
									},
									"scope": 844,
									"src": "5084:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "5911:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 641,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "5925:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 655,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 634,
																	"src": "6034:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 656,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 636,
																	"src": "6038:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 657,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "6045:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 653,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 632,
																	"src": "6012:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:6",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "6012:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 668,
													"nodeType": "IfStatement",
													"src": "6007:117:6",
													"trueBody": {
														"id": 667,
														"nodeType": "Block",
														"src": "6052:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 663,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 632,
																					"src": "6106:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 662,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 661,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 660,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "6073:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 666,
																"nodeType": "RevertStatement",
																"src": "6066:47:6"
															}
														]
													}
												},
												"id": 669,
												"nodeType": "IfStatement",
												"src": "5921:203:6",
												"trueBody": {
													"id": 652,
													"nodeType": "Block",
													"src": "5946:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 647,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 632,
																		"src": "5973:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 648,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 634,
																		"src": "5980:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 649,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "5984:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 646,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "5960:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 651,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:6",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5840:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 631,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 630,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5840:8:6"
													},
													"referencedDeclaration": 229,
													"src": "5840:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5856:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5868:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5883:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 637,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:6"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:6"
									},
									"scope": 844,
									"src": "5808:322:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "6649:239:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 686,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "6663:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 689,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 701,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 677,
																	"src": "6786:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 702,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "6792:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 703,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 681,
																	"src": "6796:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 704,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "6803:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 699,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "6760:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:6",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6760:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 715,
													"nodeType": "IfStatement",
													"src": "6755:127:6",
													"trueBody": {
														"id": 714,
														"nodeType": "Block",
														"src": "6810:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 710,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 675,
																					"src": "6864:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 709,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 708,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 707,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "6831:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 713,
																"nodeType": "RevertStatement",
																"src": "6824:47:6"
															}
														]
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "6659:223:6",
												"trueBody": {
													"id": 698,
													"nodeType": "Block",
													"src": "6684:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 692,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 675,
																		"src": "6715:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 693,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 677,
																		"src": "6722:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 694,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 679,
																		"src": "6728:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 695,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 681,
																		"src": "6732:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 691,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "6698:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 697,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:6",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6527:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 674,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 673,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6527:8:6"
													},
													"referencedDeclaration": 229,
													"src": "6527:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6551:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6573:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6593:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6616:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 682,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:6"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:6"
									},
									"scope": 844,
									"src": "6482:406:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 760,
										"nodeType": "Block",
										"src": "7655:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 731,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 724,
																"src": "7669:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 734,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 749,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 745,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 724,
																	"src": "7777:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 746,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 726,
																	"src": "7781:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 747,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 728,
																	"src": "7788:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 743,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 722,
																	"src": "7756:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:6",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7756:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 758,
													"nodeType": "IfStatement",
													"src": "7751:116:6",
													"trueBody": {
														"id": 757,
														"nodeType": "Block",
														"src": "7795:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 753,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 722,
																					"src": "7849:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 752,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 751,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 750,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "7816:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 756,
																"nodeType": "RevertStatement",
																"src": "7809:47:6"
															}
														]
													}
												},
												"id": 759,
												"nodeType": "IfStatement",
												"src": "7665:202:6",
												"trueBody": {
													"id": 742,
													"nodeType": "Block",
													"src": "7690:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 737,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 722,
																		"src": "7717:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 738,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 724,
																		"src": "7724:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 739,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 726,
																		"src": "7728:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 736,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "7704:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 741,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:6",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7584:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 721,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 720,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "7584:8:6"
													},
													"referencedDeclaration": 229,
													"src": "7584:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7600:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7612:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7627:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 727,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:6"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:6"
									},
									"scope": 844,
									"src": "7553:320:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "8440:650:6",
										"statements": [
											{
												"assignments": [
													771
												],
												"declarations": [
													{
														"constant": false,
														"id": 771,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 801,
														"src": "8450:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 770,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 772,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:6"
											},
											{
												"assignments": [
													774
												],
												"declarations": [
													{
														"constant": false,
														"id": 774,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 801,
														"src": "8478:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 773,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 775,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:6"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:6",
													"nodeType": "YulBlock",
													"src": "8532:396:6",
													"statements": [
														{
															"nativeSrc": "8546:75:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:6"
																		},
																		"nativeSrc": "8566:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:6",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:6"
																		},
																		"nativeSrc": "8583:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:6"
																		},
																		"nativeSrc": "8600:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:6"
																},
																"nativeSrc": "8561:60:6",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:6"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:6",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:6",
																"nodeType": "YulBlock",
																"src": "8682:157:6",
																"statements": [
																	{
																		"nativeSrc": "8700:22:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:6",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:6",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:6"
																			},
																			"nativeSrc": "8711:11:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:6"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:6",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:6"
																					},
																					"nativeSrc": "8762:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:6"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:6",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:6"
																			},
																			"nativeSrc": "8739:40:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:6"
																		},
																		"nativeSrc": "8739:40:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:6"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:6"
																					},
																					"nativeSrc": "8808:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:6"
																			},
																			"nativeSrc": "8796:29:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:6"
																		},
																		"nativeSrc": "8796:29:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:6"
																},
																"nativeSrc": "8666:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:6"
															},
															"nativeSrc": "8663:176:6",
															"nodeType": "YulIf",
															"src": "8663:176:6"
														},
														{
															"nativeSrc": "8852:30:6",
															"nodeType": "YulAssignment",
															"src": "8852:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:6"
																},
																"nativeSrc": "8866:16:6",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:6"
																}
															]
														},
														{
															"nativeSrc": "8895:23:6",
															"nodeType": "YulAssignment",
															"src": "8895:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:6"
																},
																"nativeSrc": "8910:8:6",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 767,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:6",
														"valueSize": 1
													},
													{
														"declaration": 767,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:6",
														"valueSize": 1
													},
													{
														"declaration": 771,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:6",
														"valueSize": 1
													},
													{
														"declaration": 774,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:6",
														"valueSize": 1
													},
													{
														"declaration": 765,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 776,
												"nodeType": "InlineAssembly",
												"src": "8507:421:6"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 777,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "8942:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 790,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 788,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "8994:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:6",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 782,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 765,
																			"src": "8968:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 780,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 800,
												"nodeType": "IfStatement",
												"src": "8938:146:6",
												"trueBody": {
													"id": 799,
													"nodeType": "Block",
													"src": "9012:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 795,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 765,
																				"src": "9066:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 793,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 792,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "9033:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 798,
															"nodeType": "RevertStatement",
															"src": "9026:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "8399:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 764,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 763,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "8399:6:6"
													},
													"referencedDeclaration": 380,
													"src": "8399:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "8413:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 766,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:6"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:6"
									},
									"scope": 844,
									"src": "8370:720:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "9681:391:6",
										"statements": [
											{
												"assignments": [
													814
												],
												"declarations": [
													{
														"constant": false,
														"id": 814,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 842,
														"src": "9691:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 813,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 815,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:6"
											},
											{
												"assignments": [
													817
												],
												"declarations": [
													{
														"constant": false,
														"id": 817,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 842,
														"src": "9713:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 816,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 818,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:6"
											},
											{
												"assignments": [
													820
												],
												"declarations": [
													{
														"constant": false,
														"id": 820,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 842,
														"src": "9741:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 819,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 821,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:6"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:6",
													"nodeType": "YulBlock",
													"src": "9795:174:6",
													"statements": [
														{
															"nativeSrc": "9809:71:6",
															"nodeType": "YulAssignment",
															"src": "9809:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:6"
																		},
																		"nativeSrc": "9825:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:6",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:6"
																		},
																		"nativeSrc": "9842:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:6"
																		},
																		"nativeSrc": "9859:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:6"
																},
																"nativeSrc": "9820:60:6",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:6"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:6"
																}
															]
														},
														{
															"nativeSrc": "9893:30:6",
															"nodeType": "YulAssignment",
															"src": "9893:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:6"
																},
																"nativeSrc": "9907:16:6",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:6"
																}
															]
														},
														{
															"nativeSrc": "9936:23:6",
															"nodeType": "YulAssignment",
															"src": "9936:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:6"
																},
																"nativeSrc": "9951:8:6",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 808,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:6",
														"valueSize": 1
													},
													{
														"declaration": 808,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:6",
														"valueSize": 1
													},
													{
														"declaration": 817,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:6",
														"valueSize": 1
													},
													{
														"declaration": 820,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:6",
														"valueSize": 1
													},
													{
														"declaration": 814,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:6",
														"valueSize": 1
													},
													{
														"declaration": 806,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 822,
												"nodeType": "InlineAssembly",
												"src": "9770:199:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 823,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "9985:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 824,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 817,
																		"src": "9997:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 835,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "10048:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:6",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 829,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 806,
																						"src": "10023:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 828,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 827,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 830,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 831,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 839,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 812,
												"id": 841,
												"nodeType": "Return",
												"src": "9978:87:6"
											}
										]
									},
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "9625:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 805,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 804,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "9625:6:6"
													},
													"referencedDeclaration": 380,
													"src": "9625:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "9639:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 807,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:6"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "9675:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 810,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:6"
									},
									"scope": 844,
									"src": "9592:480:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 845,
							"src": "698:9376:6",
							"usedErrors": [
								392,
								401
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							874
						]
					},
					"id": 875,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 846,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 847,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 874,
							"linearizedBaseContracts": [
								874
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 852,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 851,
												"id": 854,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 874,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 861,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 860,
												"id": 863,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 858,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 874,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 869,
												"id": 871,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 874,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 875,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							886
						]
					},
					"id": 887,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 876,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 877,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:8",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 886,
							"linearizedBaseContracts": [
								886
							],
							"name": "IERC165",
							"nameLocation": "433:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 878,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 885,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "819:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 879,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:8"
									},
									"returnParameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "862:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 882,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:8"
									},
									"scope": 886,
									"src": "792:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 887,
							"src": "423:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:8"
				},
				"id": 8
			},
			"Bulksender.sol": {
				"ast": {
					"absolutePath": "Bulksender.sol",
					"exportedSymbols": {
						"BulkSender": [
							1311
						],
						"Context": [
							874
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							302
						],
						"SafeERC20": [
							844
						]
					},
					"id": 1312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 888,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 889,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1312,
							"sourceUnit": 148,
							"src": "58:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 890,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1312,
							"sourceUnit": 303,
							"src": "111:62:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 891,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1312,
							"sourceUnit": 845,
							"src": "174:65:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 892,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1312,
							"sourceUnit": 381,
							"src": "240:56:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 894,
										"name": "Ownable",
										"nameLocations": [
											"501:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "501:7:9"
									},
									"id": 895,
									"nodeType": "InheritanceSpecifier",
									"src": "501:7:9"
								},
								{
									"baseName": {
										"id": 896,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"510:15:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 302,
										"src": "510:15:9"
									},
									"id": 897,
									"nodeType": "InheritanceSpecifier",
									"src": "510:15:9"
								}
							],
							"canonicalName": "BulkSender",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 893,
								"nodeType": "StructuredDocumentation",
								"src": "298:180:9",
								"text": "@title BulkSender\n @notice Send ETH or ERC20 tokens to many recipients in one tx.\n @dev ERC20 bulk transfer uses transferFrom, so users must approve this contract first."
							},
							"fullyImplemented": true,
							"id": 1311,
							"linearizedBaseContracts": [
								1311,
								302,
								147,
								874
							],
							"name": "BulkSender",
							"nameLocation": "487:10:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 901,
									"libraryName": {
										"id": 898,
										"name": "SafeERC20",
										"nameLocations": [
											"538:9:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 844,
										"src": "538:9:9"
									},
									"nodeType": "UsingForDirective",
									"src": "532:27:9",
									"typeName": {
										"id": 900,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 899,
											"name": "IERC20",
											"nameLocations": [
												"552:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "552:6:9"
										},
										"referencedDeclaration": 380,
										"src": "552:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"anonymous": false,
									"eventSelector": "45d6845dd4f0bdd735a522e3076f82702e80547a0e2b1304a2e483bca6d9cdc4",
									"id": 909,
									"name": "BulkETHTransferred",
									"nameLocation": "571:18:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "606:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "590:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "590:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"indexed": false,
												"mutability": "mutable",
												"name": "total",
												"nameLocation": "622:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "614:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "614:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipientsCount",
												"nameLocation": "637:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "629:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "589:64:9"
									},
									"src": "565:89:9"
								},
								{
									"anonymous": false,
									"eventSelector": "8a88ad5eb4d4acfb8c47fcc9c5b0e66c5162ea704dd1e08cce235927434e18d2",
									"id": 919,
									"name": "BulkERC20Transferred",
									"nameLocation": "665:20:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "702:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "686:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "725:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "709:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"indexed": false,
												"mutability": "mutable",
												"name": "total",
												"nameLocation": "741:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "733:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipientsCount",
												"nameLocation": "756:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "748:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "685:87:9"
									},
									"src": "659:114:9"
								},
								{
									"anonymous": false,
									"eventSelector": "94b2de810873337ed265c5f8cf98c9cffefa06b8607f9a2f1fbaebdfbcfbef1c",
									"id": 925,
									"name": "ETHWithdrawn",
									"nameLocation": "784:12:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "813:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "797:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "825:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "817:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "817:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "796:36:9"
									},
									"src": "778:55:9"
								},
								{
									"anonymous": false,
									"eventSelector": "bfed55bdcd242e3dd0f60ddd7d1e87c67f61c34cd9527b3e6455d841b1025362",
									"id": 933,
									"name": "ERC20Withdrawn",
									"nameLocation": "844:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "875:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "859:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "898:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "882:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "882:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 931,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "910:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "902:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "902:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "858:59:9"
									},
									"src": "838:80:9"
								},
								{
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "960:3:9",
										"statements": []
									},
									"id": 941,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 936,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "948:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "952:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "948:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 938,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 935,
												"name": "Ownable",
												"nameLocations": [
													"940:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "940:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "940:19:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "937:2:9"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "960:0:9"
									},
									"scope": 1311,
									"src": "926:37:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1033,
										"nodeType": "Block",
										"src": "1413:543:9",
										"statements": [
											{
												"assignments": [
													954
												],
												"declarations": [
													{
														"constant": false,
														"id": 954,
														"mutability": "mutable",
														"name": "n",
														"nameLocation": "1431:1:9",
														"nodeType": "VariableDeclaration",
														"scope": 1033,
														"src": "1423:9:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 953,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1423:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 957,
												"initialValue": {
													"expression": {
														"id": 955,
														"name": "recipients",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "1435:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1446:6:9",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "1435:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1423:29:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 959,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 954,
																"src": "1470:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 960,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 948,
																	"src": "1475:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1483:6:9",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1475:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1470:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6c656e6774682d6d69736d61746368",
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1491:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_de8e3464a6f953d7c88413d1e5ad8b13ba277be3f42ee326a98c5cbafed36f1d",
																"typeString": "literal_string \"length-mismatch\""
															},
															"value": "length-mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_de8e3464a6f953d7c88413d1e5ad8b13ba277be3f42ee326a98c5cbafed36f1d",
																"typeString": "literal_string \"length-mismatch\""
															}
														],
														"id": 958,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1462:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1462:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 965,
												"nodeType": "ExpressionStatement",
												"src": "1462:47:9"
											},
											{
												"assignments": [
													967
												],
												"declarations": [
													{
														"constant": false,
														"id": 967,
														"mutability": "mutable",
														"name": "total",
														"nameLocation": "1527:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1033,
														"src": "1519:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 966,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1519:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 969,
												"initialValue": {
													"hexValue": "30",
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1535:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1519:17:9"
											},
											{
												"body": {
													"id": 986,
													"nodeType": "Block",
													"src": "1606:44:9",
													"statements": [
														{
															"expression": {
																"id": 984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 980,
																	"name": "total",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 967,
																	"src": "1620:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 981,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 948,
																		"src": "1629:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 983,
																	"indexExpression": {
																		"id": 982,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 971,
																		"src": "1637:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1629:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1620:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 985,
															"nodeType": "ExpressionStatement",
															"src": "1620:19:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 974,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "1594:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 975,
														"name": "n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "1598:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1594:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 987,
												"initializationExpression": {
													"assignments": [
														971
													],
													"declarations": [
														{
															"constant": false,
															"id": 971,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1587:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 987,
															"src": "1579:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 970,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1579:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 973,
													"initialValue": {
														"hexValue": "30",
														"id": 972,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1591:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1579:13:9"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 978,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "1601:3:9",
														"subExpression": {
															"id": 977,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "1603:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 979,
													"nodeType": "ExpressionStatement",
													"src": "1601:3:9"
												},
												"nodeType": "ForStatement",
												"src": "1574:76:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 989,
																"name": "total",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 967,
																"src": "1668:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 990,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1677:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1681:5:9",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1677:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1668:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "76616c75652d6d69736d61746368",
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1688:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc88e57dc80be025bfe09afbca2cd1f527cb24e266aaafb93419be205c17fd16",
																"typeString": "literal_string \"value-mismatch\""
															},
															"value": "value-mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc88e57dc80be025bfe09afbca2cd1f527cb24e266aaafb93419be205c17fd16",
																"typeString": "literal_string \"value-mismatch\""
															}
														],
														"id": 988,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1660:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1660:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 995,
												"nodeType": "ExpressionStatement",
												"src": "1660:45:9"
											},
											{
												"body": {
													"id": 1024,
													"nodeType": "Block",
													"src": "1770:124:9",
													"statements": [
														{
															"assignments": [
																1007,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1007,
																	"mutability": "mutable",
																	"name": "ok",
																	"nameLocation": "1790:2:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1024,
																	"src": "1785:7:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1006,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "1785:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 1018,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 1016,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1836:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 1008,
																				"name": "recipients",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 945,
																				"src": "1798:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																					"typeString": "address[] calldata"
																				}
																			},
																			"id": 1010,
																			"indexExpression": {
																				"id": 1009,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 997,
																				"src": "1809:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1798:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1011,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1812:4:9",
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "1798:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"baseExpression": {
																				"id": 1012,
																				"name": "amounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 948,
																				"src": "1824:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																					"typeString": "uint256[] calldata"
																				}
																			},
																			"id": 1014,
																			"indexExpression": {
																				"id": 1013,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 997,
																				"src": "1832:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1824:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "1798:37:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1798:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1784:55:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1020,
																		"name": "ok",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1007,
																		"src": "1861:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "6574682d73656e642d6661696c6564",
																		"id": 1021,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1865:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_f12c488a23a22a5ef0e34ac4c3b8a552738eb834b777e83839a622bf4d805954",
																			"typeString": "literal_string \"eth-send-failed\""
																		},
																		"value": "eth-send-failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_f12c488a23a22a5ef0e34ac4c3b8a552738eb834b777e83839a622bf4d805954",
																			"typeString": "literal_string \"eth-send-failed\""
																		}
																	],
																	"id": 1019,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1853:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1853:30:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1023,
															"nodeType": "ExpressionStatement",
															"src": "1853:30:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1000,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 997,
														"src": "1758:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1001,
														"name": "n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "1762:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1758:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1025,
												"initializationExpression": {
													"assignments": [
														997
													],
													"declarations": [
														{
															"constant": false,
															"id": 997,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1751:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1025,
															"src": "1743:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 996,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1743:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 999,
													"initialValue": {
														"hexValue": "30",
														"id": 998,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1755:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1743:13:9"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1004,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "1765:3:9",
														"subExpression": {
															"id": 1003,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "1767:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1005,
													"nodeType": "ExpressionStatement",
													"src": "1765:3:9"
												},
												"nodeType": "ForStatement",
												"src": "1738:156:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1027,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1928:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1932:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1928:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1029,
															"name": "total",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "1940:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1030,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "1947:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1026,
														"name": "BulkETHTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "1909:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1909:40:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1032,
												"nodeType": "EmitStatement",
												"src": "1904:45:9"
											}
										]
									},
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "968:298:9",
										"text": "@notice Batch-send ETH to many recipients.\n @param recipients Array of recipient addresses.\n @param amounts Array of amounts corresponding to each recipient (in wei).\n Requirements:\n - `recipients.length == amounts.length`\n - sum(amounts) must equal msg.value"
									},
									"functionSelector": "b874fa6a",
									"id": 1034,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 951,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 950,
												"name": "nonReentrant",
												"nameLocations": [
													"1396:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "1396:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1396:12:9"
										}
									],
									"name": "bulkTransferETH",
									"nameLocation": "1280:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "recipients",
												"nameLocation": "1315:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "1296:29:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 943,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1296:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 944,
													"nodeType": "ArrayTypeName",
													"src": "1296:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1346:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "1327:26:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 946,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1327:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 947,
													"nodeType": "ArrayTypeName",
													"src": "1327:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1295:59:9"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1413:0:9"
									},
									"scope": 1311,
									"src": "1271:685:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1120,
										"nodeType": "Block",
										"src": "2490:466:9",
										"statements": [
											{
												"assignments": [
													1050
												],
												"declarations": [
													{
														"constant": false,
														"id": 1050,
														"mutability": "mutable",
														"name": "n",
														"nameLocation": "2508:1:9",
														"nodeType": "VariableDeclaration",
														"scope": 1120,
														"src": "2500:9:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1049,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2500:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1053,
												"initialValue": {
													"expression": {
														"id": 1051,
														"name": "recipients",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1041,
														"src": "2512:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2523:6:9",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2512:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2500:29:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1055,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1050,
																"src": "2547:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1056,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1044,
																	"src": "2552:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2560:6:9",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2552:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2547:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6c656e6774682d6d69736d61746368",
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2568:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_de8e3464a6f953d7c88413d1e5ad8b13ba277be3f42ee326a98c5cbafed36f1d",
																"typeString": "literal_string \"length-mismatch\""
															},
															"value": "length-mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_de8e3464a6f953d7c88413d1e5ad8b13ba277be3f42ee326a98c5cbafed36f1d",
																"typeString": "literal_string \"length-mismatch\""
															}
														],
														"id": 1054,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2539:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2539:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1061,
												"nodeType": "ExpressionStatement",
												"src": "2539:47:9"
											},
											{
												"assignments": [
													1063
												],
												"declarations": [
													{
														"constant": false,
														"id": 1063,
														"mutability": "mutable",
														"name": "total",
														"nameLocation": "2605:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1120,
														"src": "2597:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1062,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2597:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1065,
												"initialValue": {
													"hexValue": "30",
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2613:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2597:17:9"
											},
											{
												"body": {
													"id": 1082,
													"nodeType": "Block",
													"src": "2656:44:9",
													"statements": [
														{
															"expression": {
																"id": 1080,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1076,
																	"name": "total",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "2670:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1077,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1044,
																		"src": "2679:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 1079,
																	"indexExpression": {
																		"id": 1078,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1067,
																		"src": "2687:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2679:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2670:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1081,
															"nodeType": "ExpressionStatement",
															"src": "2670:19:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1070,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "2644:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1071,
														"name": "n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "2648:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2644:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1083,
												"initializationExpression": {
													"assignments": [
														1067
													],
													"declarations": [
														{
															"constant": false,
															"id": 1067,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2637:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1083,
															"src": "2629:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1066,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2629:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1069,
													"initialValue": {
														"hexValue": "30",
														"id": 1068,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2641:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2629:13:9"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1074,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2651:3:9",
														"subExpression": {
															"id": 1073,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "2653:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1075,
													"nodeType": "ExpressionStatement",
													"src": "2651:3:9"
												},
												"nodeType": "ForStatement",
												"src": "2624:76:9"
											},
											{
												"body": {
													"id": 1107,
													"nodeType": "Block",
													"src": "2790:86:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1097,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2827:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2831:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2827:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1099,
																			"name": "recipients",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1041,
																			"src": "2839:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 1101,
																		"indexExpression": {
																			"id": 1100,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1085,
																			"src": "2850:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2839:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1102,
																			"name": "amounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1044,
																			"src": "2854:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 1104,
																		"indexExpression": {
																			"id": 1103,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1085,
																			"src": "2862:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2854:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1094,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1038,
																		"src": "2804:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2810:16:9",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 452,
																	"src": "2804:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2804:61:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1106,
															"nodeType": "ExpressionStatement",
															"src": "2804:61:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1088,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "2778:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1089,
														"name": "n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "2782:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2778:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1108,
												"initializationExpression": {
													"assignments": [
														1085
													],
													"declarations": [
														{
															"constant": false,
															"id": 1085,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2771:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1108,
															"src": "2763:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1084,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2763:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1087,
													"initialValue": {
														"hexValue": "30",
														"id": 1086,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2775:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2763:13:9"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1092,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2785:3:9",
														"subExpression": {
															"id": 1091,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "2787:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1093,
													"nodeType": "ExpressionStatement",
													"src": "2785:3:9"
												},
												"nodeType": "ForStatement",
												"src": "2758:118:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1112,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1038,
																	"src": "2920:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2912:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1110,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2912:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2912:14:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1114,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2928:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2932:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2928:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1116,
															"name": "total",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1063,
															"src": "2940:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1117,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1050,
															"src": "2947:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1109,
														"name": "BulkERC20Transferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "2891:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2891:58:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1119,
												"nodeType": "EmitStatement",
												"src": "2886:63:9"
											}
										]
									},
									"documentation": {
										"id": 1035,
										"nodeType": "StructuredDocumentation",
										"src": "1962:371:9",
										"text": "@notice Batch-send ERC20 tokens to many recipients using transferFrom.\n @param token ERC20 token contract.\n @param recipients Array of recipient addresses.\n @param amounts Array of amounts corresponding to each recipient (in token units).\n Requirements:\n - caller must approve this contract for at least sum(amounts) before calling."
									},
									"functionSelector": "3e46cd53",
									"id": 1121,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1047,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1046,
												"name": "nonReentrant",
												"nameLocations": [
													"2477:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "2477:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2477:12:9"
										}
									],
									"name": "bulkTransferERC20",
									"nameLocation": "2347:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2381:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "2374:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1037,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1036,
														"name": "IERC20",
														"nameLocations": [
															"2374:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "2374:6:9"
													},
													"referencedDeclaration": 380,
													"src": "2374:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "recipients",
												"nameLocation": "2415:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "2396:29:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1039,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2396:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1040,
													"nodeType": "ArrayTypeName",
													"src": "2396:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2454:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "2435:26:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1042,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2435:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1043,
													"nodeType": "ArrayTypeName",
													"src": "2435:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2364:103:9"
									},
									"returnParameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2490:0:9"
									},
									"scope": 1311,
									"src": "2338:618:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1226,
										"nodeType": "Block",
										"src": "3236:540:9",
										"statements": [
											{
												"assignments": [
													1139
												],
												"declarations": [
													{
														"constant": false,
														"id": 1139,
														"mutability": "mutable",
														"name": "n",
														"nameLocation": "3254:1:9",
														"nodeType": "VariableDeclaration",
														"scope": 1226,
														"src": "3246:9:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1138,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3246:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1142,
												"initialValue": {
													"expression": {
														"id": 1140,
														"name": "recipients",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "3258:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3269:6:9",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3258:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3246:29:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1144,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1139,
																"src": "3293:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1145,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "3298:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 1146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3306:6:9",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3298:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3293:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6c656e6774682d6d69736d61746368",
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3314:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_de8e3464a6f953d7c88413d1e5ad8b13ba277be3f42ee326a98c5cbafed36f1d",
																"typeString": "literal_string \"length-mismatch\""
															},
															"value": "length-mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_de8e3464a6f953d7c88413d1e5ad8b13ba277be3f42ee326a98c5cbafed36f1d",
																"typeString": "literal_string \"length-mismatch\""
															}
														],
														"id": 1143,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3285:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3285:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1150,
												"nodeType": "ExpressionStatement",
												"src": "3285:47:9"
											},
											{
												"assignments": [
													1152
												],
												"declarations": [
													{
														"constant": false,
														"id": 1152,
														"mutability": "mutable",
														"name": "total",
														"nameLocation": "3351:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1226,
														"src": "3343:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1151,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3343:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1154,
												"initialValue": {
													"hexValue": "30",
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3359:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3343:17:9"
											},
											{
												"body": {
													"id": 1171,
													"nodeType": "Block",
													"src": "3402:44:9",
													"statements": [
														{
															"expression": {
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1165,
																	"name": "total",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1152,
																	"src": "3416:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1166,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1131,
																		"src": "3425:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 1168,
																	"indexExpression": {
																		"id": 1167,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1156,
																		"src": "3433:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3425:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3416:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1170,
															"nodeType": "ExpressionStatement",
															"src": "3416:19:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1159,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1156,
														"src": "3390:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1160,
														"name": "n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1139,
														"src": "3394:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3390:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1172,
												"initializationExpression": {
													"assignments": [
														1156
													],
													"declarations": [
														{
															"constant": false,
															"id": 1156,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3383:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1172,
															"src": "3375:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1155,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3375:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1158,
													"initialValue": {
														"hexValue": "30",
														"id": 1157,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3387:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3375:13:9"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "3397:3:9",
														"subExpression": {
															"id": 1162,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1156,
															"src": "3399:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1164,
													"nodeType": "ExpressionStatement",
													"src": "3397:3:9"
												},
												"nodeType": "ForStatement",
												"src": "3370:76:9"
											},
											{
												"assignments": [
													1174
												],
												"declarations": [
													{
														"constant": false,
														"id": 1174,
														"mutability": "mutable",
														"name": "contractBal",
														"nameLocation": "3464:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1226,
														"src": "3456:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1173,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3456:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1182,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1179,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3502:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BulkSender_$1311",
																		"typeString": "contract BulkSender"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BulkSender_$1311",
																		"typeString": "contract BulkSender"
																	}
																],
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3494:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1177,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3494:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3494:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1175,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "3478:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3484:9:9",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 337,
														"src": "3478:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3478:30:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3456:52:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1184,
																"name": "contractBal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1174,
																"src": "3526:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1185,
																"name": "total",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1152,
																"src": "3541:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3526:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e73756666696369656e742d636f6e74726163742d62616c616e6365",
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3548:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d63fdbed4427467445645d3049f905a5792b7d28d81f2510cffd5333dc77e0e4",
																"typeString": "literal_string \"insufficient-contract-balance\""
															},
															"value": "insufficient-contract-balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d63fdbed4427467445645d3049f905a5792b7d28d81f2510cffd5333dc77e0e4",
																"typeString": "literal_string \"insufficient-contract-balance\""
															}
														],
														"id": 1183,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3518:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3518:62:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1189,
												"nodeType": "ExpressionStatement",
												"src": "3518:62:9"
											},
											{
												"body": {
													"id": 1211,
													"nodeType": "Block",
													"src": "3623:70:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1203,
																			"name": "recipients",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1128,
																			"src": "3656:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 1205,
																		"indexExpression": {
																			"id": 1204,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1191,
																			"src": "3667:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3656:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1206,
																			"name": "amounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1131,
																			"src": "3671:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 1208,
																		"indexExpression": {
																			"id": 1207,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1191,
																			"src": "3679:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3671:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1200,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1125,
																		"src": "3637:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3643:12:9",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 425,
																	"src": "3637:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3637:45:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1210,
															"nodeType": "ExpressionStatement",
															"src": "3637:45:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1194,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1191,
														"src": "3611:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1195,
														"name": "n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1139,
														"src": "3615:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3611:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1212,
												"initializationExpression": {
													"assignments": [
														1191
													],
													"declarations": [
														{
															"constant": false,
															"id": 1191,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3604:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1212,
															"src": "3596:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1190,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3596:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1193,
													"initialValue": {
														"hexValue": "30",
														"id": 1192,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3608:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3596:13:9"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "3618:3:9",
														"subExpression": {
															"id": 1197,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "3620:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1199,
													"nodeType": "ExpressionStatement",
													"src": "3618:3:9"
												},
												"nodeType": "ForStatement",
												"src": "3591:102:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1216,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1125,
																	"src": "3737:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1215,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3729:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1214,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3729:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3729:14:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1220,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3753:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BulkSender_$1311",
																		"typeString": "contract BulkSender"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BulkSender_$1311",
																		"typeString": "contract BulkSender"
																	}
																],
																"id": 1219,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3745:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1218,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3745:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3745:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1222,
															"name": "total",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1152,
															"src": "3760:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1223,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "3767:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1213,
														"name": "BulkERC20Transferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "3708:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3708:61:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1225,
												"nodeType": "EmitStatement",
												"src": "3703:66:9"
											}
										]
									},
									"documentation": {
										"id": 1122,
										"nodeType": "StructuredDocumentation",
										"src": "2962:95:9",
										"text": "@notice Owner-only: send ERC20 tokens that are already held by this contract to recipients."
									},
									"functionSelector": "9f62eafe",
									"id": 1227,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1134,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1133,
												"name": "onlyOwner",
												"nameLocations": [
													"3213:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3213:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3213:9:9"
										},
										{
											"id": 1136,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1135,
												"name": "nonReentrant",
												"nameLocations": [
													"3223:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "3223:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3223:12:9"
										}
									],
									"name": "bulkTransferERC20FromContract",
									"nameLocation": "3071:29:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3117:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "3110:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1124,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1123,
														"name": "IERC20",
														"nameLocations": [
															"3110:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "3110:6:9"
													},
													"referencedDeclaration": 380,
													"src": "3110:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "recipients",
												"nameLocation": "3151:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "3132:29:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1126,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3132:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1127,
													"nodeType": "ArrayTypeName",
													"src": "3132:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3190:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "3171:26:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1129,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3171:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1130,
													"nodeType": "ArrayTypeName",
													"src": "3171:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3100:103:9"
									},
									"returnParameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3236:0:9"
									},
									"scope": 1311,
									"src": "3062:714:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1269,
										"nodeType": "Block",
										"src": "3949:206:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1242,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3975:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_BulkSender_$1311",
																				"typeString": "contract BulkSender"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_BulkSender_$1311",
																				"typeString": "contract BulkSender"
																			}
																		],
																		"id": 1241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3967:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1240,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3967:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1243,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3967:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3981:7:9",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "3967:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1245,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1232,
																"src": "3992:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3967:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e73756666696369656e742d657468",
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4000:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_32f2af800164601bd8ed4b85bf247cb53750152b9e1fc05cbced958558411142",
																"typeString": "literal_string \"insufficient-eth\""
															},
															"value": "insufficient-eth"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_32f2af800164601bd8ed4b85bf247cb53750152b9e1fc05cbced958558411142",
																"typeString": "literal_string \"insufficient-eth\""
															}
														],
														"id": 1239,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3959:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3959:60:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1249,
												"nodeType": "ExpressionStatement",
												"src": "3959:60:9"
											},
											{
												"assignments": [
													1251,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1251,
														"mutability": "mutable",
														"name": "ok",
														"nameLocation": "4035:2:9",
														"nodeType": "VariableDeclaration",
														"scope": 1269,
														"src": "4030:7:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1250,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4030:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1258,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4066:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1252,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1230,
																"src": "4043:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4046:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4043:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1255,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1254,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1232,
																"src": "4058:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4043:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4043:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4029:40:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1260,
															"name": "ok",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "4087:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "77697468647261772d6661696c6564",
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4091:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8b43d355e049cab583890bb85706334dd851ea9c087cc2a88fabf6a4dae5875e",
																"typeString": "literal_string \"withdraw-failed\""
															},
															"value": "withdraw-failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8b43d355e049cab583890bb85706334dd851ea9c087cc2a88fabf6a4dae5875e",
																"typeString": "literal_string \"withdraw-failed\""
															}
														],
														"id": 1259,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4079:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4079:30:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1263,
												"nodeType": "ExpressionStatement",
												"src": "4079:30:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1265,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "4137:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1266,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "4141:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1264,
														"name": "ETHWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "4124:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4124:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1268,
												"nodeType": "EmitStatement",
												"src": "4119:29:9"
											}
										]
									},
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "3782:73:9",
										"text": "@notice Owner helper: withdraw ETH accidentally left in the contract."
									},
									"functionSelector": "4782f779",
									"id": 1270,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1235,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1234,
												"name": "onlyOwner",
												"nameLocations": [
													"3926:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3926:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3926:9:9"
										},
										{
											"id": 1237,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1236,
												"name": "nonReentrant",
												"nameLocations": [
													"3936:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "3936:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3936:12:9"
										}
									],
									"name": "withdrawETH",
									"nameLocation": "3869:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3897:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "3881:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3881:15:9",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3909:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "3901:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3901:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3880:36:9"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3949:0:9"
									},
									"scope": 1311,
									"src": "3860:295:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1301,
										"nodeType": "Block",
										"src": "4329:104:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1288,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1276,
															"src": "4358:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1289,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "4362:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1285,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1274,
															"src": "4339:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4345:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 425,
														"src": "4339:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4339:30:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1291,
												"nodeType": "ExpressionStatement",
												"src": "4339:30:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1295,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1274,
																	"src": "4407:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4399:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1293,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4399:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4399:14:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1297,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1276,
															"src": "4415:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1298,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "4419:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1292,
														"name": "ERC20Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "4384:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4384:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1300,
												"nodeType": "EmitStatement",
												"src": "4379:47:9"
											}
										]
									},
									"documentation": {
										"id": 1271,
										"nodeType": "StructuredDocumentation",
										"src": "4161:66:9",
										"text": "@notice Owner helper: withdraw ERC20 tokens from the contract."
									},
									"functionSelector": "44004cc1",
									"id": 1302,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1281,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1280,
												"name": "onlyOwner",
												"nameLocations": [
													"4306:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4306:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4306:9:9"
										},
										{
											"id": 1283,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1282,
												"name": "nonReentrant",
												"nameLocations": [
													"4316:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "4316:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4316:12:9"
										}
									],
									"name": "withdrawERC20",
									"nameLocation": "4241:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4262:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "4255:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1273,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1272,
														"name": "IERC20",
														"nameLocations": [
															"4255:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "4255:6:9"
													},
													"referencedDeclaration": 380,
													"src": "4255:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4277:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "4269:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4269:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4289:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "4281:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4281:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4254:42:9"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4329:0:9"
									},
									"scope": 1311,
									"src": "4232:201:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1305,
										"nodeType": "Block",
										"src": "4503:2:9",
										"statements": []
									},
									"id": 1306,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4483:2:9"
									},
									"returnParameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4503:0:9"
									},
									"scope": 1311,
									"src": "4476:29:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1309,
										"nodeType": "Block",
										"src": "4538:2:9",
										"statements": []
									},
									"id": 1310,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4518:2:9"
									},
									"returnParameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4538:0:9"
									},
									"scope": 1311,
									"src": "4510:30:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1312,
							"src": "478:4064:9",
							"usedErrors": [
								13,
								18,
								392
							],
							"usedEvents": [
								24,
								909,
								919,
								925,
								933
							]
						}
					],
					"src": "32:4511:9"
				},
				"id": 9
			}
		}
	}
}